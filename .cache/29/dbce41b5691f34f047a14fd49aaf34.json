{"id":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","dependencies":[{"name":"/mnt/c/Users/arpax/Desktop/Ubuntu/will-it-miss/package.json","includedInParent":true,"mtime":1598758524763},{"name":"/mnt/c/Users/arpax/Desktop/Ubuntu/will-it-miss/node_modules/jsx-transpiler/node_modules/acorn-jsx/package.json","includedInParent":true,"mtime":1598758524244}],"generated":{"js":"var define;\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\r\n//\r\n// Acorn was written by Marijn Haverbeke and released under an MIT\r\n// license. The Unicode regexps (for identifiers and whitespace) were\r\n// taken from [Esprima](http://esprima.org) by Ariya Hidayat.\r\n//\r\n// Git repositories for Acorn are available at\r\n//\r\n//     http://marijnhaverbeke.nl/git/acorn\r\n//     https://github.com/marijnh/acorn.git\r\n//\r\n// Please use the [github bug tracker][ghbt] to report issues.\r\n//\r\n// [ghbt]: https://github.com/marijnh/acorn/issues\r\n//\r\n// This file defines the main parser interface. The library also comes\r\n// with a [error-tolerant parser][dammit] and an\r\n// [abstract syntax tree walker][walk], defined in other files.\r\n//\r\n// [dammit]: acorn_loose.js\r\n// [walk]: util/walk.js\r\n\r\n(function(root, mod) {\r\n  if (typeof exports == \"object\" && typeof module == \"object\") return mod(exports); // CommonJS\r\n  if (typeof define == \"function\" && define.amd) return define([\"exports\"], mod); // AMD\r\n  mod(root.acorn || (root.acorn = {})); // Plain browser env\r\n})(this, function(exports) {\r\n  \"use strict\";\r\n\r\n  exports.version = \"0.6.1\";\r\n\r\n  // The main exported interface (under `self.acorn` when in the\r\n  // browser) is a `parse` function that takes a code string and\r\n  // returns an abstract syntax tree as specified by [Mozilla parser\r\n  // API][api], with the caveat that the SpiderMonkey-specific syntax\r\n  // (`let`, `yield`, inline XML, etc) is not recognized.\r\n  //\r\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\r\n\r\n  var options, input, inputLen, sourceFile;\r\n\r\n  exports.parse = function(inpt, opts) {\r\n    input = String(inpt); inputLen = input.length;\r\n    setOptions(opts);\r\n    initTokenState();\r\n    return parseTopLevel(options.program);\r\n  };\r\n\r\n  // A second optional argument can be given to further configure\r\n  // the parser process. These options are recognized:\r\n\r\n  var defaultOptions = exports.defaultOptions = {\r\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must\r\n    // be either 3, or 5, or 6. This influences support for strict\r\n    // mode, the set of reserved words, support for getters and\r\n    // setters and other features. ES6 support is only partial.\r\n    ecmaVersion: 5,\r\n    // Turn on `strictSemicolons` to prevent the parser from doing\r\n    // automatic semicolon insertion.\r\n    strictSemicolons: false,\r\n    // When `allowTrailingCommas` is false, the parser will not allow\r\n    // trailing commas in array and object literals.\r\n    allowTrailingCommas: true,\r\n    // By default, reserved words are not enforced. Enable\r\n    // `forbidReserved` to enforce them. When this option has the\r\n    // value \"everywhere\", reserved words and keywords can also not be\r\n    // used as property names.\r\n    forbidReserved: false,\r\n    // When enabled, a return at the top level is not considered an\r\n    // error.\r\n    allowReturnOutsideFunction: false,\r\n    // When `locations` is on, `loc` properties holding objects with\r\n    // `start` and `end` properties in `{line, column}` form (with\r\n    // line being 1-based and column 0-based) will be attached to the\r\n    // nodes.\r\n    locations: false,\r\n    // A function can be passed as `onComment` option, which will\r\n    // cause Acorn to call that function with `(block, text, start,\r\n    // end)` parameters whenever a comment is skipped. `block` is a\r\n    // boolean indicating whether this is a block (`/* */`) comment,\r\n    // `text` is the content of the comment, and `start` and `end` are\r\n    // character offsets that denote the start and end of the comment.\r\n    // When the `locations` option is on, two more parameters are\r\n    // passed, the full `{line, column}` locations of the start and\r\n    // end of the comments. Note that you are not allowed to call the\r\n    // parser from the callbackâ€”that will corrupt its internal state.\r\n    onComment: null,\r\n    // Nodes have their start and end characters offsets recorded in\r\n    // `start` and `end` properties (directly on the node, rather than\r\n    // the `loc` object, which holds line/column data. To also add a\r\n    // [semi-standardized][range] `range` property holding a `[start,\r\n    // end]` array with the same numbers, set the `ranges` option to\r\n    // `true`.\r\n    //\r\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\r\n    ranges: false,\r\n    // It is possible to parse multiple files into a single AST by\r\n    // passing the tree produced by parsing the first file as\r\n    // `program` option in subsequent parses. This will add the\r\n    // toplevel forms of the parsed file to the `Program` (top) node\r\n    // of an existing parse tree.\r\n    program: null,\r\n    // When `locations` is on, you can pass this to record the source\r\n    // file in every node's `loc` object.\r\n    sourceFile: null,\r\n    // This value, if given, is stored in every node, whether\r\n    // `locations` is on or off.\r\n    directSourceFile: null\r\n  };\r\n\r\n  function setOptions(opts) {\r\n    options = opts || {};\r\n    for (var opt in defaultOptions) if (!Object.prototype.hasOwnProperty.call(options, opt))\r\n      options[opt] = defaultOptions[opt];\r\n    sourceFile = options.sourceFile || null;\r\n\r\n    isKeyword = options.ecmaVersion >= 6 ? isEcma6Keyword : isEcma5AndLessKeyword;\r\n  }\r\n\r\n  // The `getLineInfo` function is mostly useful when the\r\n  // `locations` option is off (for performance reasons) and you\r\n  // want to find the line/column position for a given character\r\n  // offset. `input` should be the code string that the offset refers\r\n  // into.\r\n\r\n  var getLineInfo = exports.getLineInfo = function(input, offset) {\r\n    for (var line = 1, cur = 0;;) {\r\n      lineBreak.lastIndex = cur;\r\n      var match = lineBreak.exec(input);\r\n      if (match && match.index < offset) {\r\n        ++line;\r\n        cur = match.index + match[0].length;\r\n      } else break;\r\n    }\r\n    return {line: line, column: offset - cur};\r\n  };\r\n\r\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\r\n  // The `tokenize` export provides an interface to the tokenizer.\r\n  // Because the tokenizer is optimized for being efficiently used by\r\n  // the Acorn parser itself, this interface is somewhat crude and not\r\n  // very modular. Performing another parse or call to `tokenize` will\r\n  // reset the internal state, and invalidate existing tokenizers.\r\n\r\n  exports.tokenize = function(inpt, opts) {\r\n    input = String(inpt); inputLen = input.length;\r\n    setOptions(opts);\r\n    initTokenState();\r\n\r\n    var t = {};\r\n    function getToken(forceRegexp) {\r\n      lastEnd = tokEnd;\r\n      readToken(forceRegexp);\r\n      t.start = tokStart; t.end = tokEnd;\r\n      t.startLoc = tokStartLoc; t.endLoc = tokEndLoc;\r\n      t.type = tokType; t.value = tokVal;\r\n      return t;\r\n    }\r\n    getToken.jumpTo = function(pos, reAllowed) {\r\n      tokPos = pos;\r\n      if (options.locations) {\r\n        tokCurLine = 1;\r\n        tokLineStart = lineBreak.lastIndex = 0;\r\n        var match;\r\n        while ((match = lineBreak.exec(input)) && match.index < pos) {\r\n          ++tokCurLine;\r\n          tokLineStart = match.index + match[0].length;\r\n        }\r\n      }\r\n      tokRegexpAllowed = reAllowed;\r\n      skipSpace();\r\n    };\r\n    return getToken;\r\n  };\r\n\r\n  // State is kept in (closure-)global variables. We already saw the\r\n  // `options`, `input`, and `inputLen` variables above.\r\n\r\n  // The current position of the tokenizer in the input.\r\n\r\n  var tokPos;\r\n\r\n  // The start and end offsets of the current token.\r\n\r\n  var tokStart, tokEnd;\r\n\r\n  // When `options.locations` is true, these hold objects\r\n  // containing the tokens start and end line/column pairs.\r\n\r\n  var tokStartLoc, tokEndLoc;\r\n\r\n  // The type and value of the current token. Token types are objects,\r\n  // named by variables against which they can be compared, and\r\n  // holding properties that describe them (indicating, for example,\r\n  // the precedence of an infix operator, and the original name of a\r\n  // keyword token). The kind of value that's held in `tokVal` depends\r\n  // on the type of the token. For literals, it is the literal value,\r\n  // for operators, the operator name, and so on.\r\n\r\n  var tokType, tokVal;\r\n\r\n  // Interal state for the tokenizer. To distinguish between division\r\n  // operators and regular expressions, it remembers whether the last\r\n  // token was one that is allowed to be followed by an expression.\r\n  // (If it is, a slash is probably a regexp, if it isn't it's a\r\n  // division operator. See the `parseStatement` function for a\r\n  // caveat.)\r\n\r\n  var tokRegexpAllowed;\r\n\r\n  // When `options.locations` is true, these are used to keep\r\n  // track of the current line, and know when a new line has been\r\n  // entered.\r\n\r\n  var tokCurLine, tokLineStart;\r\n\r\n  // These store the position of the previous token, which is useful\r\n  // when finishing a node and assigning its `end` position.\r\n\r\n  var lastStart, lastEnd, lastEndLoc;\r\n\r\n  // This is the parser's state. `inFunction` is used to reject\r\n  // `return` statements outside of functions, `labels` to verify that\r\n  // `break` and `continue` have somewhere to jump to, and `strict`\r\n  // indicates whether strict mode is on.\r\n\r\n  var inFunction, labels, strict, inXJSChild, inXJSTag;\r\n\r\n  // This function is used to raise exceptions on parse errors. It\r\n  // takes an offset integer (into the current `input`) to indicate\r\n  // the location of the error, attaches the position to the end\r\n  // of the error message, and then raises a `SyntaxError` with that\r\n  // message.\r\n\r\n  function raise(pos, message) {\r\n    var loc = getLineInfo(input, pos);\r\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\r\n    var err = new SyntaxError(message);\r\n    err.pos = pos; err.loc = loc; err.raisedAt = tokPos;\r\n    throw err;\r\n  }\r\n\r\n  // Reused empty array added for node fields that are always empty.\r\n\r\n  var empty = [];\r\n\r\n  // ## Token types\r\n\r\n  // The assignment of fine-grained, information-carrying type objects\r\n  // allows the tokenizer to store the information it has about a\r\n  // token in a way that is very cheap for the parser to look up.\r\n\r\n  // All token type variables start with an underscore, to make them\r\n  // easy to recognize.\r\n\r\n  // These are the general types. The `type` property is only used to\r\n  // make them recognizeable when debugging.\r\n\r\n  var _num = {type: \"num\"}, _regexp = {type: \"regexp\"}, _string = {type: \"string\"};\r\n  var _name = {type: \"name\"}, _eof = {type: \"eof\"};\r\n\r\n  // These are JSX-specific token types\r\n\r\n  var _xjsName = {type: \"xjsName\"}, _xjsText = {type: \"xjsText\"};\r\n\r\n  // Keyword tokens. The `keyword` property (also used in keyword-like\r\n  // operators) indicates that the token originated from an\r\n  // identifier-like word, which is used when parsing property names.\r\n  //\r\n  // The `beforeExpr` property is used to disambiguate between regular\r\n  // expressions and divisions. It is set on all token types that can\r\n  // be followed by an expression (thus, a slash after them would be a\r\n  // regular expression).\r\n  //\r\n  // `isLoop` marks a keyword as starting a loop, which is important\r\n  // to know when parsing a label, in order to allow or disallow\r\n  // continue jumps to that label.\r\n\r\n  var _break = {keyword: \"break\"}, _case = {keyword: \"case\", beforeExpr: true}, _catch = {keyword: \"catch\"};\r\n  var _continue = {keyword: \"continue\"}, _debugger = {keyword: \"debugger\"}, _default = {keyword: \"default\"};\r\n  var _do = {keyword: \"do\", isLoop: true}, _else = {keyword: \"else\", beforeExpr: true};\r\n  var _finally = {keyword: \"finally\"}, _for = {keyword: \"for\", isLoop: true}, _function = {keyword: \"function\"};\r\n  var _if = {keyword: \"if\"}, _return = {keyword: \"return\", beforeExpr: true}, _switch = {keyword: \"switch\"};\r\n  var _throw = {keyword: \"throw\", beforeExpr: true}, _try = {keyword: \"try\"}, _var = {keyword: \"var\"};\r\n  var _let = {keyword: \"let\"}, _const = {keyword: \"const\"};\r\n  var _while = {keyword: \"while\", isLoop: true}, _with = {keyword: \"with\"}, _new = {keyword: \"new\", beforeExpr: true};\r\n  var _this = {keyword: \"this\"};\r\n\r\n  // The keywords that denote values.\r\n\r\n  var _null = {keyword: \"null\", atomValue: null}, _true = {keyword: \"true\", atomValue: true};\r\n  var _false = {keyword: \"false\", atomValue: false};\r\n\r\n  // Some keywords are treated as regular operators. `in` sometimes\r\n  // (when parsing `for`) needs to be tested against specifically, so\r\n  // we assign a variable name to it for quick comparing.\r\n\r\n  var _in = {keyword: \"in\", binop: 7, beforeExpr: true};\r\n\r\n  // Map keyword names to token types.\r\n\r\n  var keywordTypes = {\"break\": _break, \"case\": _case, \"catch\": _catch,\r\n                      \"continue\": _continue, \"debugger\": _debugger, \"default\": _default,\r\n                      \"do\": _do, \"else\": _else, \"finally\": _finally, \"for\": _for,\r\n                      \"function\": _function, \"if\": _if, \"return\": _return, \"switch\": _switch,\r\n                      \"throw\": _throw, \"try\": _try, \"var\": _var, \"let\": _let, \"const\": _const,\r\n                      \"while\": _while, \"with\": _with,\r\n                      \"null\": _null, \"true\": _true, \"false\": _false, \"new\": _new, \"in\": _in,\r\n                      \"instanceof\": {keyword: \"instanceof\", binop: 7, beforeExpr: true}, \"this\": _this,\r\n                      \"typeof\": {keyword: \"typeof\", prefix: true, beforeExpr: true},\r\n                      \"void\": {keyword: \"void\", prefix: true, beforeExpr: true},\r\n                      \"delete\": {keyword: \"delete\", prefix: true, beforeExpr: true}};\r\n\r\n  // Punctuation token types. Again, the `type` property is purely for debugging.\r\n\r\n  var _bracketL = {type: \"[\", beforeExpr: true}, _bracketR = {type: \"]\"}, _braceL = {type: \"{\", beforeExpr: true};\r\n  var _braceR = {type: \"}\"}, _parenL = {type: \"(\", beforeExpr: true}, _parenR = {type: \")\"};\r\n  var _comma = {type: \",\", beforeExpr: true}, _semi = {type: \";\", beforeExpr: true};\r\n  var _colon = {type: \":\", beforeExpr: true}, _dot = {type: \".\"}, _ellipsis = {type: \"...\"}, _question = {type: \"?\", beforeExpr: true};\r\n\r\n  // Operators. These carry several kinds of properties to help the\r\n  // parser use them properly (the presence of these properties is\r\n  // what categorizes them as operators).\r\n  //\r\n  // `binop`, when present, specifies that this operator is a binary\r\n  // operator, and will refer to its precedence.\r\n  //\r\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\r\n  // unary operator. `isUpdate` specifies that the node produced by\r\n  // the operator should be of type UpdateExpression rather than\r\n  // simply UnaryExpression (`++` and `--`).\r\n  //\r\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\r\n  // binary operators with a very low precedence, that should result\r\n  // in AssignmentExpression nodes.\r\n\r\n  var _slash = {binop: 10, beforeExpr: true}, _eq = {isAssign: true, beforeExpr: true};\r\n  var _assign = {isAssign: true, beforeExpr: true};\r\n  var _incDec = {postfix: true, prefix: true, isUpdate: true}, _prefix = {prefix: true, beforeExpr: true};\r\n  var _logicalOR = {binop: 1, beforeExpr: true};\r\n  var _logicalAND = {binop: 2, beforeExpr: true};\r\n  var _bitwiseOR = {binop: 3, beforeExpr: true};\r\n  var _bitwiseXOR = {binop: 4, beforeExpr: true};\r\n  var _bitwiseAND = {binop: 5, beforeExpr: true};\r\n  var _equality = {binop: 6, beforeExpr: true};\r\n  var _relational = {binop: 7, beforeExpr: true};\r\n  var _bitShift = {binop: 8, beforeExpr: true};\r\n  var _plusMin = {binop: 9, prefix: true, beforeExpr: true};\r\n  var _multiplyModulo = {binop: 10, beforeExpr: true};\r\n\r\n  // Provide access to the token types for external users of the\r\n  // tokenizer.\r\n\r\n  exports.tokTypes = {bracketL: _bracketL, bracketR: _bracketR, braceL: _braceL, braceR: _braceR,\r\n                      parenL: _parenL, parenR: _parenR, comma: _comma, semi: _semi, colon: _colon,\r\n                      dot: _dot, ellipsis: _ellipsis, question: _question, slash: _slash, eq: _eq,\r\n                      name: _name, eof: _eof, num: _num, regexp: _regexp, string: _string,\r\n                      xjsName: _xjsName, xjsText: _xjsText};\r\n\r\n  for (var kw in keywordTypes) exports.tokTypes[\"_\" + kw] = keywordTypes[kw];\r\n\r\n  // This is a trick taken from Esprima. It turns out that, on\r\n  // non-Chrome browsers, to check whether a string is in a set, a\r\n  // predicate containing a big ugly `switch` statement is faster than\r\n  // a regular expression, and on Chrome the two are about on par.\r\n  // This function uses `eval` (non-lexical) to produce such a\r\n  // predicate from a space-separated string of words.\r\n  //\r\n  // It starts by sorting the words by length.\r\n\r\n  function makePredicate(words) {\r\n    words = words.split(\" \");\r\n    var f = \"\", cats = [];\r\n    out: for (var i = 0; i < words.length; ++i) {\r\n      for (var j = 0; j < cats.length; ++j)\r\n        if (cats[j][0].length == words[i].length) {\r\n          cats[j].push(words[i]);\r\n          continue out;\r\n        }\r\n      cats.push([words[i]]);\r\n    }\r\n    function compareTo(arr) {\r\n      if (arr.length == 1) return f += \"return str === \" + JSON.stringify(arr[0]) + \";\";\r\n      f += \"switch(str){\";\r\n      for (var i = 0; i < arr.length; ++i) f += \"case \" + JSON.stringify(arr[i]) + \":\";\r\n      f += \"return true}return false;\";\r\n    }\r\n\r\n    // When there are more than three length categories, an outer\r\n    // switch first dispatches on the lengths, to save on comparisons.\r\n\r\n    if (cats.length > 3) {\r\n      cats.sort(function(a, b) {return b.length - a.length;});\r\n      f += \"switch(str.length){\";\r\n      for (var i = 0; i < cats.length; ++i) {\r\n        var cat = cats[i];\r\n        f += \"case \" + cat[0].length + \":\";\r\n        compareTo(cat);\r\n      }\r\n      f += \"}\";\r\n\r\n    // Otherwise, simply generate a flat `switch` statement.\r\n\r\n    } else {\r\n      compareTo(words);\r\n    }\r\n    return new Function(\"str\", f);\r\n  }\r\n\r\n  // The ECMAScript 3 reserved word list.\r\n\r\n  var isReservedWord3 = makePredicate(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\");\r\n\r\n  // ECMAScript 5 reserved words.\r\n\r\n  var isReservedWord5 = makePredicate(\"class enum extends super const export import\");\r\n\r\n  // The additional reserved words in strict mode.\r\n\r\n  var isStrictReservedWord = makePredicate(\"implements interface let package private protected public static yield\");\r\n\r\n  // The forbidden variable names in strict mode.\r\n\r\n  var isStrictBadIdWord = makePredicate(\"eval arguments\");\r\n\r\n  // And the keywords.\r\n\r\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\r\n\r\n  var isEcma5AndLessKeyword = makePredicate(ecma5AndLessKeywords);\r\n\r\n  var isEcma6Keyword = makePredicate(ecma5AndLessKeywords + \" let const\");\r\n\r\n  var isKeyword = isEcma5AndLessKeyword;\r\n\r\n  // ## Character categories\r\n\r\n  // Big ugly regular expressions that match characters in the\r\n  // whitespace, identifier, and identifier-start categories. These\r\n  // are only applied when a character is found to actually have a\r\n  // code point above 128.\r\n\r\n  var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\r\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\r\n  var nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\r\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\r\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\r\n\r\n  // Whether a single character denotes a newline.\r\n\r\n  var newline = /[\\n\\r\\u2028\\u2029]/;\r\n\r\n  // Matches a whole line break (where CRLF is considered a single\r\n  // line break). Used to count lines.\r\n\r\n  var lineBreak = /\\r\\n|[\\n\\r\\u2028\\u2029]/g;\r\n\r\n  // Test whether a given character code starts an identifier.\r\n\r\n  var isIdentifierStart = exports.isIdentifierStart = function(code) {\r\n    if (code < 65) return code === 36;\r\n    if (code < 91) return true;\r\n    if (code < 97) return code === 95;\r\n    if (code < 123)return true;\r\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\r\n  };\r\n\r\n  // Test whether a given character is part of an identifier.\r\n\r\n  var isIdentifierChar = exports.isIdentifierChar = function(code) {\r\n    if (code < 48) return code === 36;\r\n    if (code < 58) return true;\r\n    if (code < 65) return false;\r\n    if (code < 91) return true;\r\n    if (code < 97) return code === 95;\r\n    if (code < 123)return true;\r\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\r\n  };\r\n\r\n  // ## Tokenizer\r\n\r\n  // These are used when `options.locations` is on, for the\r\n  // `tokStartLoc` and `tokEndLoc` properties.\r\n\r\n  function Position() {\r\n    this.line = tokCurLine;\r\n    this.column = tokPos - tokLineStart;\r\n  }\r\n\r\n  // Reset the token state. Used at the start of a parse.\r\n\r\n  function initTokenState() {\r\n    tokCurLine = 1;\r\n    tokPos = tokLineStart = 0;\r\n    tokRegexpAllowed = true;\r\n    inXJSChild = inXJSTag = false;\r\n    skipSpace();\r\n  }\r\n\r\n  // Called at the end of every token. Sets `tokEnd`, `tokVal`, and\r\n  // `tokRegexpAllowed`, and skips the space after the token, so that\r\n  // the next one's `tokStart` will point at the right position.\r\n\r\n  function finishToken(type, val) {\r\n    tokEnd = tokPos;\r\n    if (options.locations) tokEndLoc = new Position;\r\n    tokType = type;\r\n    if (!(inXJSTag && val === '>') && !(inXJSChild && tokType !== _braceL)) {\r\n      skipSpace();\r\n    }\r\n    tokVal = val;\r\n    tokRegexpAllowed = type.beforeExpr;\r\n  }\r\n\r\n  function skipBlockComment() {\r\n    var startLoc = options.onComment && options.locations && new Position;\r\n    var start = tokPos, end = input.indexOf(\"*/\", tokPos += 2);\r\n    if (end === -1) raise(tokPos - 2, \"Unterminated comment\");\r\n    tokPos = end + 2;\r\n    if (options.locations) {\r\n      lineBreak.lastIndex = start;\r\n      var match;\r\n      while ((match = lineBreak.exec(input)) && match.index < tokPos) {\r\n        ++tokCurLine;\r\n        tokLineStart = match.index + match[0].length;\r\n      }\r\n    }\r\n    if (options.onComment)\r\n      options.onComment(true, input.slice(start + 2, end), start, tokPos,\r\n                        startLoc, options.locations && new Position);\r\n  }\r\n\r\n  function skipLineComment() {\r\n    var start = tokPos;\r\n    var startLoc = options.onComment && options.locations && new Position;\r\n    var ch = input.charCodeAt(tokPos+=2);\r\n    while (tokPos < inputLen && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\r\n      ++tokPos;\r\n      ch = input.charCodeAt(tokPos);\r\n    }\r\n    if (options.onComment)\r\n      options.onComment(false, input.slice(start + 2, tokPos), start, tokPos,\r\n                        startLoc, options.locations && new Position);\r\n  }\r\n\r\n  // Called at the start of the parse and after every token. Skips\r\n  // whitespace and comments, and.\r\n\r\n  function skipSpace() {\r\n    while (tokPos < inputLen) {\r\n      var ch = input.charCodeAt(tokPos);\r\n      if (ch === 32) { // ' '\r\n        ++tokPos;\r\n      } else if (ch === 13) {\r\n        ++tokPos;\r\n        var next = input.charCodeAt(tokPos);\r\n        if (next === 10) {\r\n          ++tokPos;\r\n        }\r\n        if (options.locations) {\r\n          ++tokCurLine;\r\n          tokLineStart = tokPos;\r\n        }\r\n      } else if (ch === 10 || ch === 8232 || ch === 8233) {\r\n        ++tokPos;\r\n        if (options.locations) {\r\n          ++tokCurLine;\r\n          tokLineStart = tokPos;\r\n        }\r\n      } else if (ch > 8 && ch < 14) {\r\n        ++tokPos;\r\n      } else if (ch === 47) { // '/'\r\n        var next = input.charCodeAt(tokPos + 1);\r\n        if (next === 42) { // '*'\r\n          skipBlockComment();\r\n        } else if (next === 47) { // '/'\r\n          skipLineComment();\r\n        } else break;\r\n      } else if (ch === 160) { // '\\xa0'\r\n        ++tokPos;\r\n      } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\r\n        ++tokPos;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // ### Token reading\r\n\r\n  // This is the function that is called to fetch the next token. It\r\n  // is somewhat obscure, because it works in character codes rather\r\n  // than characters, and because operator parsing has been inlined\r\n  // into it.\r\n  //\r\n  // All in the name of speed.\r\n  //\r\n  // The `forceRegexp` parameter is used in the one case where the\r\n  // `tokRegexpAllowed` trick does not work. See `parseStatement`.\r\n\r\n  function readToken_dot() {\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next >= 48 && next <= 57) return readNumber(true);\r\n    var next2 = input.charCodeAt(tokPos + 2);\r\n    if (options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\r\n      tokPos += 3;\r\n      return finishToken(_ellipsis);\r\n    } else {\r\n      ++tokPos;\r\n      return finishToken(_dot);\r\n    }\r\n  }\r\n\r\n  function readToken_slash() { // '/'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (tokRegexpAllowed) {++tokPos; return readRegexp();}\r\n    if (next === 61) return finishOp(_assign, 2);\r\n    return finishOp(_slash, 1);\r\n  }\r\n\r\n  function readToken_mult_modulo() { // '%*'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next === 61) return finishOp(_assign, 2);\r\n    return finishOp(_multiplyModulo, 1);\r\n  }\r\n\r\n  function readToken_pipe_amp(code) { // '|&'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next === code) return finishOp(code === 124 ? _logicalOR : _logicalAND, 2);\r\n    if (next === 61) return finishOp(_assign, 2);\r\n    return finishOp(code === 124 ? _bitwiseOR : _bitwiseAND, 1);\r\n  }\r\n\r\n  function readToken_caret() { // '^'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next === 61) return finishOp(_assign, 2);\r\n    return finishOp(_bitwiseXOR, 1);\r\n  }\r\n\r\n  function readToken_plus_min(code) { // '+-'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next === code) {\r\n      if (next == 45 && input.charCodeAt(tokPos + 2) == 62 &&\r\n          newline.test(input.slice(lastEnd, tokPos))) {\r\n        // A `-->` line comment\r\n        tokPos += 3;\r\n        skipLineComment();\r\n        skipSpace();\r\n        return readToken();\r\n      }\r\n      return finishOp(_incDec, 2);\r\n    }\r\n    if (next === 61) return finishOp(_assign, 2);\r\n    return finishOp(_plusMin, 1);\r\n  }\r\n\r\n  function readToken_lt_gt(code) { // '<>'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    var size = 1;\r\n    if (next === code) {\r\n      size = code === 62 && input.charCodeAt(tokPos + 2) === 62 ? 3 : 2;\r\n      if (input.charCodeAt(tokPos + size) === 61) return finishOp(_assign, size + 1);\r\n      return finishOp(_bitShift, size);\r\n    }\r\n    if (next == 33 && code == 60 && input.charCodeAt(tokPos + 2) == 45 &&\r\n        input.charCodeAt(tokPos + 3) == 45) {\r\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\r\n      tokPos += 4;\r\n      skipLineComment();\r\n      skipSpace();\r\n      return readToken();\r\n    }\r\n    if (next === 61)\r\n      size = input.charCodeAt(tokPos + 2) === 61 ? 3 : 2;\r\n    return finishOp(_relational, size);\r\n  }\r\n\r\n  function readToken_eq_excl(code) { // '=!'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next === 61) return finishOp(_equality, input.charCodeAt(tokPos + 2) === 61 ? 3 : 2);\r\n    return finishOp(code === 61 ? _eq : _prefix, 1);\r\n  }\r\n\r\n  function getTokenFromCode(code) {\r\n    switch(code) {\r\n      // The interpretation of a dot depends on whether it is followed\r\n      // by a digit or another two dots.\r\n    case 46: // '.'\r\n      return readToken_dot();\r\n\r\n      // Punctuation tokens.\r\n    case 40: ++tokPos; return finishToken(_parenL);\r\n    case 41: ++tokPos; return finishToken(_parenR);\r\n    case 59: ++tokPos; return finishToken(_semi);\r\n    case 44: ++tokPos; return finishToken(_comma);\r\n    case 91: ++tokPos; return finishToken(_bracketL);\r\n    case 93: ++tokPos; return finishToken(_bracketR);\r\n    case 123: ++tokPos; return finishToken(_braceL);\r\n    case 125: ++tokPos; return finishToken(_braceR);\r\n    case 58: ++tokPos; return finishToken(_colon);\r\n    case 63: ++tokPos; return finishToken(_question);\r\n\r\n      // '0x' is a hexadecimal number.\r\n    case 48: // '0'\r\n      var next = input.charCodeAt(tokPos + 1);\r\n      if (next === 120 || next === 88) return readHexNumber();\r\n      // Anything else beginning with a digit is an integer, octal\r\n      // number, or float.\r\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\r\n      return readNumber(false);\r\n\r\n      // Quotes produce strings.\r\n    case 34: case 39: // '\"', \"'\"\r\n      return inXJSTag ? readXJSStringLiteral() : readString(code);\r\n\r\n    // Operators are parsed inline in tiny state machines. '=' (61) is\r\n    // often referred to. `finishOp` simply skips the amount of\r\n    // characters it is given as second argument, and returns a token\r\n    // of the type given by its first argument.\r\n\r\n    case 47: // '/'\r\n      return readToken_slash();\r\n\r\n    case 37: case 42: // '%*'\r\n      return readToken_mult_modulo();\r\n\r\n    case 124: case 38: // '|&'\r\n      return readToken_pipe_amp(code);\r\n\r\n    case 94: // '^'\r\n      return readToken_caret();\r\n\r\n    case 43: case 45: // '+-'\r\n      return readToken_plus_min(code);\r\n\r\n    case 60: case 62: // '<>'\r\n      return readToken_lt_gt(code);\r\n\r\n    case 61: case 33: // '=!'\r\n      return readToken_eq_excl(code);\r\n\r\n    case 126: // '~'\r\n      return finishOp(_prefix, 1);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function readToken(forceRegexp) {\r\n    if (!forceRegexp) tokStart = tokPos;\r\n    else tokPos = tokStart + 1;\r\n    if (options.locations) tokStartLoc = new Position;\r\n    if (forceRegexp) return readRegexp();\r\n    if (tokPos >= inputLen) return finishToken(_eof);\r\n\r\n    var code = input.charCodeAt(tokPos);\r\n\r\n    // JSX content - either simple text, start of <tag> or {expression}\r\n    if (inXJSChild && tokType !== _braceL && code !== 60 && code !== 123 && code !== 125) {\r\n      return readXJSText(['<', '{']);\r\n    }\r\n\r\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\r\n    // identifiers, so '\\' also dispatches to that.\r\n    if (isIdentifierStart(code) || code === 92 /* '\\' */) return readWord();\r\n\r\n    var tok = getTokenFromCode(code);\r\n\r\n    if (tok === false) {\r\n      // If we are here, we either found a non-ASCII identifier\r\n      // character, or something that's entirely disallowed.\r\n      var ch = String.fromCharCode(code);\r\n      if (ch === \"\\\\\" || nonASCIIidentifierStart.test(ch)) return readWord();\r\n      raise(tokPos, \"Unexpected character '\" + ch + \"'\");\r\n    }\r\n    return tok;\r\n  }\r\n\r\n  function finishOp(type, size) {\r\n    var str = input.slice(tokPos, tokPos + size);\r\n    tokPos += size;\r\n    finishToken(type, str);\r\n  }\r\n\r\n  // Parse a regular expression. Some context-awareness is necessary,\r\n  // since a '/' inside a '[]' set does not end the expression.\r\n\r\n  function readRegexp() {\r\n    var content = \"\", escaped, inClass, start = tokPos;\r\n    for (;;) {\r\n      if (tokPos >= inputLen) raise(start, \"Unterminated regular expression\");\r\n      var ch = input.charAt(tokPos);\r\n      if (newline.test(ch)) raise(start, \"Unterminated regular expression\");\r\n      if (!escaped) {\r\n        if (ch === \"[\") inClass = true;\r\n        else if (ch === \"]\" && inClass) inClass = false;\r\n        else if (ch === \"/\" && !inClass) break;\r\n        escaped = ch === \"\\\\\";\r\n      } else escaped = false;\r\n      ++tokPos;\r\n    }\r\n    var content = input.slice(start, tokPos);\r\n    ++tokPos;\r\n    // Need to use `readWord1` because '\\uXXXX' sequences are allowed\r\n    // here (don't ask).\r\n    var mods = readWord1();\r\n    if (mods && !/^[gmsiy]*$/.test(mods)) raise(start, \"Invalid regular expression flag\");\r\n    try {\r\n      var value = new RegExp(content, mods);\r\n    } catch (e) {\r\n      if (e instanceof SyntaxError) raise(start, \"Error parsing regular expression: \" + e.message);\r\n      raise(e);\r\n    }\r\n    return finishToken(_regexp, value);\r\n  }\r\n\r\n  // Read an integer in the given radix. Return null if zero digits\r\n  // were read, the integer value otherwise. When `len` is given, this\r\n  // will return `null` unless the integer has exactly `len` digits.\r\n\r\n  function readInt(radix, len) {\r\n    var start = tokPos, total = 0;\r\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\r\n      var code = input.charCodeAt(tokPos), val;\r\n      if (code >= 97) val = code - 97 + 10; // a\r\n      else if (code >= 65) val = code - 65 + 10; // A\r\n      else if (code >= 48 && code <= 57) val = code - 48; // 0-9\r\n      else val = Infinity;\r\n      if (val >= radix) break;\r\n      ++tokPos;\r\n      total = total * radix + val;\r\n    }\r\n    if (tokPos === start || len != null && tokPos - start !== len) return null;\r\n\r\n    return total;\r\n  }\r\n\r\n  function readHexNumber() {\r\n    tokPos += 2; // 0x\r\n    var val = readInt(16);\r\n    if (val == null) raise(tokStart + 2, \"Expected hexadecimal number\");\r\n    if (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\r\n    return finishToken(_num, val);\r\n  }\r\n\r\n  // Read an integer, octal integer, or floating-point number.\r\n\r\n  function readNumber(startsWithDot) {\r\n    var start = tokPos, isFloat = false, octal = input.charCodeAt(tokPos) === 48;\r\n    if (!startsWithDot && readInt(10) === null) raise(start, \"Invalid number\");\r\n    if (input.charCodeAt(tokPos) === 46) {\r\n      ++tokPos;\r\n      readInt(10);\r\n      isFloat = true;\r\n    }\r\n    var next = input.charCodeAt(tokPos);\r\n    if (next === 69 || next === 101) { // 'eE'\r\n      next = input.charCodeAt(++tokPos);\r\n      if (next === 43 || next === 45) ++tokPos; // '+-'\r\n      if (readInt(10) === null) raise(start, \"Invalid number\");\r\n      isFloat = true;\r\n    }\r\n    if (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\r\n\r\n    var str = input.slice(start, tokPos), val;\r\n    if (isFloat) val = parseFloat(str);\r\n    else if (!octal || str.length === 1) val = parseInt(str, 10);\r\n    else if (/[89]/.test(str) || strict) raise(start, \"Invalid number\");\r\n    else val = parseInt(str, 8);\r\n    return finishToken(_num, val);\r\n  }\r\n\r\n  // Read a string value, interpreting backslash-escapes.\r\n\r\n  function readString(quote) {\r\n    tokPos++;\r\n    var out = \"\";\r\n    for (;;) {\r\n      if (tokPos >= inputLen) raise(tokStart, \"Unterminated string constant\");\r\n      var ch = input.charCodeAt(tokPos);\r\n      if (ch === quote) {\r\n        ++tokPos;\r\n        return finishToken(_string, out);\r\n      }\r\n      if (ch === 92) { // '\\'\r\n        ch = input.charCodeAt(++tokPos);\r\n        var octal = /^[0-7]+/.exec(input.slice(tokPos, tokPos + 3));\r\n        if (octal) octal = octal[0];\r\n        while (octal && parseInt(octal, 8) > 255) octal = octal.slice(0, -1);\r\n        if (octal === \"0\") octal = null;\r\n        ++tokPos;\r\n        if (octal) {\r\n          if (strict) raise(tokPos - 2, \"Octal literal in strict mode\");\r\n          out += String.fromCharCode(parseInt(octal, 8));\r\n          tokPos += octal.length - 1;\r\n        } else {\r\n          switch (ch) {\r\n          case 110: out += \"\\n\"; break; // 'n' -> '\\n'\r\n          case 114: out += \"\\r\"; break; // 'r' -> '\\r'\r\n          case 120: out += String.fromCharCode(readHexChar(2)); break; // 'x'\r\n          case 117: out += String.fromCharCode(readHexChar(4)); break; // 'u'\r\n          case 85: out += String.fromCharCode(readHexChar(8)); break; // 'U'\r\n          case 116: out += \"\\t\"; break; // 't' -> '\\t'\r\n          case 98: out += \"\\b\"; break; // 'b' -> '\\b'\r\n          case 118: out += \"\\u000b\"; break; // 'v' -> '\\u000b'\r\n          case 102: out += \"\\f\"; break; // 'f' -> '\\f'\r\n          case 48: out += \"\\0\"; break; // 0 -> '\\0'\r\n          case 13: if (input.charCodeAt(tokPos) === 10) ++tokPos; // '\\r\\n'\r\n          case 10: // ' \\n'\r\n            if (options.locations) { tokLineStart = tokPos; ++tokCurLine; }\r\n            break;\r\n          default: out += String.fromCharCode(ch); break;\r\n          }\r\n        }\r\n      } else {\r\n        if (ch === 13 || ch === 10 || ch === 8232 || ch === 8233) raise(tokStart, \"Unterminated string constant\");\r\n        out += String.fromCharCode(ch); // '\\'\r\n        ++tokPos;\r\n      }\r\n    }\r\n  }\r\n\r\n  var XHTMLEntities = {\r\n    quot: '\\u0022',\r\n    amp: '&',\r\n    apos: '\\u0027',\r\n    lt: '<',\r\n    gt: '>',\r\n    nbsp: '\\u00A0',\r\n    iexcl: '\\u00A1',\r\n    cent: '\\u00A2',\r\n    pound: '\\u00A3',\r\n    curren: '\\u00A4',\r\n    yen: '\\u00A5',\r\n    brvbar: '\\u00A6',\r\n    sect: '\\u00A7',\r\n    uml: '\\u00A8',\r\n    copy: '\\u00A9',\r\n    ordf: '\\u00AA',\r\n    laquo: '\\u00AB',\r\n    not: '\\u00AC',\r\n    shy: '\\u00AD',\r\n    reg: '\\u00AE',\r\n    macr: '\\u00AF',\r\n    deg: '\\u00B0',\r\n    plusmn: '\\u00B1',\r\n    sup2: '\\u00B2',\r\n    sup3: '\\u00B3',\r\n    acute: '\\u00B4',\r\n    micro: '\\u00B5',\r\n    para: '\\u00B6',\r\n    middot: '\\u00B7',\r\n    cedil: '\\u00B8',\r\n    sup1: '\\u00B9',\r\n    ordm: '\\u00BA',\r\n    raquo: '\\u00BB',\r\n    frac14: '\\u00BC',\r\n    frac12: '\\u00BD',\r\n    frac34: '\\u00BE',\r\n    iquest: '\\u00BF',\r\n    Agrave: '\\u00C0',\r\n    Aacute: '\\u00C1',\r\n    Acirc: '\\u00C2',\r\n    Atilde: '\\u00C3',\r\n    Auml: '\\u00C4',\r\n    Aring: '\\u00C5',\r\n    AElig: '\\u00C6',\r\n    Ccedil: '\\u00C7',\r\n    Egrave: '\\u00C8',\r\n    Eacute: '\\u00C9',\r\n    Ecirc: '\\u00CA',\r\n    Euml: '\\u00CB',\r\n    Igrave: '\\u00CC',\r\n    Iacute: '\\u00CD',\r\n    Icirc: '\\u00CE',\r\n    Iuml: '\\u00CF',\r\n    ETH: '\\u00D0',\r\n    Ntilde: '\\u00D1',\r\n    Ograve: '\\u00D2',\r\n    Oacute: '\\u00D3',\r\n    Ocirc: '\\u00D4',\r\n    Otilde: '\\u00D5',\r\n    Ouml: '\\u00D6',\r\n    times: '\\u00D7',\r\n    Oslash: '\\u00D8',\r\n    Ugrave: '\\u00D9',\r\n    Uacute: '\\u00DA',\r\n    Ucirc: '\\u00DB',\r\n    Uuml: '\\u00DC',\r\n    Yacute: '\\u00DD',\r\n    THORN: '\\u00DE',\r\n    szlig: '\\u00DF',\r\n    agrave: '\\u00E0',\r\n    aacute: '\\u00E1',\r\n    acirc: '\\u00E2',\r\n    atilde: '\\u00E3',\r\n    auml: '\\u00E4',\r\n    aring: '\\u00E5',\r\n    aelig: '\\u00E6',\r\n    ccedil: '\\u00E7',\r\n    egrave: '\\u00E8',\r\n    eacute: '\\u00E9',\r\n    ecirc: '\\u00EA',\r\n    euml: '\\u00EB',\r\n    igrave: '\\u00EC',\r\n    iacute: '\\u00ED',\r\n    icirc: '\\u00EE',\r\n    iuml: '\\u00EF',\r\n    eth: '\\u00F0',\r\n    ntilde: '\\u00F1',\r\n    ograve: '\\u00F2',\r\n    oacute: '\\u00F3',\r\n    ocirc: '\\u00F4',\r\n    otilde: '\\u00F5',\r\n    ouml: '\\u00F6',\r\n    divide: '\\u00F7',\r\n    oslash: '\\u00F8',\r\n    ugrave: '\\u00F9',\r\n    uacute: '\\u00FA',\r\n    ucirc: '\\u00FB',\r\n    uuml: '\\u00FC',\r\n    yacute: '\\u00FD',\r\n    thorn: '\\u00FE',\r\n    yuml: '\\u00FF',\r\n    OElig: '\\u0152',\r\n    oelig: '\\u0153',\r\n    Scaron: '\\u0160',\r\n    scaron: '\\u0161',\r\n    Yuml: '\\u0178',\r\n    fnof: '\\u0192',\r\n    circ: '\\u02C6',\r\n    tilde: '\\u02DC',\r\n    Alpha: '\\u0391',\r\n    Beta: '\\u0392',\r\n    Gamma: '\\u0393',\r\n    Delta: '\\u0394',\r\n    Epsilon: '\\u0395',\r\n    Zeta: '\\u0396',\r\n    Eta: '\\u0397',\r\n    Theta: '\\u0398',\r\n    Iota: '\\u0399',\r\n    Kappa: '\\u039A',\r\n    Lambda: '\\u039B',\r\n    Mu: '\\u039C',\r\n    Nu: '\\u039D',\r\n    Xi: '\\u039E',\r\n    Omicron: '\\u039F',\r\n    Pi: '\\u03A0',\r\n    Rho: '\\u03A1',\r\n    Sigma: '\\u03A3',\r\n    Tau: '\\u03A4',\r\n    Upsilon: '\\u03A5',\r\n    Phi: '\\u03A6',\r\n    Chi: '\\u03A7',\r\n    Psi: '\\u03A8',\r\n    Omega: '\\u03A9',\r\n    alpha: '\\u03B1',\r\n    beta: '\\u03B2',\r\n    gamma: '\\u03B3',\r\n    delta: '\\u03B4',\r\n    epsilon: '\\u03B5',\r\n    zeta: '\\u03B6',\r\n    eta: '\\u03B7',\r\n    theta: '\\u03B8',\r\n    iota: '\\u03B9',\r\n    kappa: '\\u03BA',\r\n    lambda: '\\u03BB',\r\n    mu: '\\u03BC',\r\n    nu: '\\u03BD',\r\n    xi: '\\u03BE',\r\n    omicron: '\\u03BF',\r\n    pi: '\\u03C0',\r\n    rho: '\\u03C1',\r\n    sigmaf: '\\u03C2',\r\n    sigma: '\\u03C3',\r\n    tau: '\\u03C4',\r\n    upsilon: '\\u03C5',\r\n    phi: '\\u03C6',\r\n    chi: '\\u03C7',\r\n    psi: '\\u03C8',\r\n    omega: '\\u03C9',\r\n    thetasym: '\\u03D1',\r\n    upsih: '\\u03D2',\r\n    piv: '\\u03D6',\r\n    ensp: '\\u2002',\r\n    emsp: '\\u2003',\r\n    thinsp: '\\u2009',\r\n    zwnj: '\\u200C',\r\n    zwj: '\\u200D',\r\n    lrm: '\\u200E',\r\n    rlm: '\\u200F',\r\n    ndash: '\\u2013',\r\n    mdash: '\\u2014',\r\n    lsquo: '\\u2018',\r\n    rsquo: '\\u2019',\r\n    sbquo: '\\u201A',\r\n    ldquo: '\\u201C',\r\n    rdquo: '\\u201D',\r\n    bdquo: '\\u201E',\r\n    dagger: '\\u2020',\r\n    Dagger: '\\u2021',\r\n    bull: '\\u2022',\r\n    hellip: '\\u2026',\r\n    permil: '\\u2030',\r\n    prime: '\\u2032',\r\n    Prime: '\\u2033',\r\n    lsaquo: '\\u2039',\r\n    rsaquo: '\\u203A',\r\n    oline: '\\u203E',\r\n    frasl: '\\u2044',\r\n    euro: '\\u20AC',\r\n    image: '\\u2111',\r\n    weierp: '\\u2118',\r\n    real: '\\u211C',\r\n    trade: '\\u2122',\r\n    alefsym: '\\u2135',\r\n    larr: '\\u2190',\r\n    uarr: '\\u2191',\r\n    rarr: '\\u2192',\r\n    darr: '\\u2193',\r\n    harr: '\\u2194',\r\n    crarr: '\\u21B5',\r\n    lArr: '\\u21D0',\r\n    uArr: '\\u21D1',\r\n    rArr: '\\u21D2',\r\n    dArr: '\\u21D3',\r\n    hArr: '\\u21D4',\r\n    forall: '\\u2200',\r\n    part: '\\u2202',\r\n    exist: '\\u2203',\r\n    empty: '\\u2205',\r\n    nabla: '\\u2207',\r\n    isin: '\\u2208',\r\n    notin: '\\u2209',\r\n    ni: '\\u220B',\r\n    prod: '\\u220F',\r\n    sum: '\\u2211',\r\n    minus: '\\u2212',\r\n    lowast: '\\u2217',\r\n    radic: '\\u221A',\r\n    prop: '\\u221D',\r\n    infin: '\\u221E',\r\n    ang: '\\u2220',\r\n    and: '\\u2227',\r\n    or: '\\u2228',\r\n    cap: '\\u2229',\r\n    cup: '\\u222A',\r\n    'int': '\\u222B',\r\n    there4: '\\u2234',\r\n    sim: '\\u223C',\r\n    cong: '\\u2245',\r\n    asymp: '\\u2248',\r\n    ne: '\\u2260',\r\n    equiv: '\\u2261',\r\n    le: '\\u2264',\r\n    ge: '\\u2265',\r\n    sub: '\\u2282',\r\n    sup: '\\u2283',\r\n    nsub: '\\u2284',\r\n    sube: '\\u2286',\r\n    supe: '\\u2287',\r\n    oplus: '\\u2295',\r\n    otimes: '\\u2297',\r\n    perp: '\\u22A5',\r\n    sdot: '\\u22C5',\r\n    lceil: '\\u2308',\r\n    rceil: '\\u2309',\r\n    lfloor: '\\u230A',\r\n    rfloor: '\\u230B',\r\n    lang: '\\u2329',\r\n    rang: '\\u232A',\r\n    loz: '\\u25CA',\r\n    spades: '\\u2660',\r\n    clubs: '\\u2663',\r\n    hearts: '\\u2665',\r\n    diams: '\\u2666'\r\n  };\r\n\r\n  function readXJSEntity() {\r\n    var str = '', count = 0, entity;\r\n    var ch = nextChar();\r\n    if (ch !== '&') raise(tokPos, \"Entity must start with an ampersand\");\r\n    tokPos++;\r\n    while (tokPos < inputLen && count++ < 10) {\r\n      ch = input.charAt(tokPos++);\r\n      if (ch === ';') {\r\n        break;\r\n      }\r\n      str += ch;\r\n    }\r\n\r\n    if (str[0] === '#' && str[1] === 'x') {\r\n      entity = String.fromCharCode(parseInt(str.substr(2), 16));\r\n    } else if (str[0] === '#') {\r\n      entity = String.fromCharCode(parseInt(str.substr(1), 10));\r\n    } else {\r\n      entity = XHTMLEntities[str];\r\n    }\r\n    return entity;\r\n  }\r\n\r\n  function readXJSText(stopChars) {\r\n    var str = '';\r\n    while (tokPos < inputLen) {\r\n      var ch = nextChar();\r\n      if (stopChars.indexOf(ch) !== -1) {\r\n        break;\r\n      }\r\n      if (ch === '&') {\r\n        str += readXJSEntity();\r\n      } else {\r\n        ++tokPos;\r\n        if (ch === '\\r' && nextChar() === '\\n') {\r\n          str += ch;\r\n          ++tokPos;\r\n          ch = '\\n';\r\n        }\r\n        if (ch === '\\n' && options.locations) {\r\n          tokLineStart = tokPos;\r\n          ++tokCurLine;\r\n        }\r\n        str += ch;\r\n      }\r\n    }\r\n    return finishToken(_xjsText, str);\r\n  }\r\n\r\n  function readXJSStringLiteral() {\r\n    var quote = input.charCodeAt(tokPos);\r\n\r\n    if (quote !== 34 && quote !== 39) {\r\n      raise(\"String literal must starts with a quote\");\r\n    }\r\n\r\n    ++tokPos;\r\n\r\n    readXJSText([String.fromCharCode(quote)]);\r\n\r\n    if (quote !== input.charCodeAt(tokPos)) {\r\n      unexpected();\r\n    }\r\n\r\n    ++tokPos;\r\n\r\n    return finishToken(tokType, tokVal);\r\n  }\r\n\r\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\r\n\r\n  function readHexChar(len) {\r\n    var n = readInt(16, len);\r\n    if (n === null) raise(tokStart, \"Bad character escape sequence\");\r\n    return n;\r\n  }\r\n\r\n  // Used to signal to callers of `readWord1` whether the word\r\n  // contained any escape sequences. This is needed because words with\r\n  // escape sequences must not be interpreted as keywords.\r\n\r\n  var containsEsc;\r\n\r\n  // Read an identifier, and return it as a string. Sets `containsEsc`\r\n  // to whether the word contained a '\\u' escape.\r\n  //\r\n  // Only builds up the word character-by-character when it actually\r\n  // containeds an escape, as a micro-optimization.\r\n\r\n  function readWord1() {\r\n    containsEsc = false;\r\n    var word, first = true, start = tokPos;\r\n    for (;;) {\r\n      var ch = input.charCodeAt(tokPos);\r\n      if (isIdentifierChar(ch) || (inXJSTag && ch === 45)) {\r\n        if (containsEsc) word += input.charAt(tokPos);\r\n        ++tokPos;\r\n      } else if (ch === 92 && !inXJSTag) { // \"\\\"\r\n        if (!containsEsc) word = input.slice(start, tokPos);\r\n        containsEsc = true;\r\n        if (input.charCodeAt(++tokPos) != 117) // \"u\"\r\n          raise(tokPos, \"Expecting Unicode escape sequence \\\\uXXXX\");\r\n        ++tokPos;\r\n        var esc = readHexChar(4);\r\n        var escStr = String.fromCharCode(esc);\r\n        if (!escStr) raise(tokPos - 1, \"Invalid Unicode escape\");\r\n        if (!(first ? isIdentifierStart(esc) : isIdentifierChar(esc)))\r\n          raise(tokPos - 4, \"Invalid Unicode escape\");\r\n        word += escStr;\r\n      } else {\r\n        break;\r\n      }\r\n      first = false;\r\n    }\r\n    return containsEsc ? word : input.slice(start, tokPos);\r\n  }\r\n\r\n  // Read an identifier or keyword token. Will check for reserved\r\n  // words when necessary.\r\n\r\n  function readWord() {\r\n    var word = readWord1();\r\n    var type = inXJSTag ? _xjsName : _name;\r\n    if (!containsEsc && isKeyword(word))\r\n      type = keywordTypes[word];\r\n    return finishToken(type, word);\r\n  }\r\n\r\n  // ## Parser\r\n\r\n  // A recursive descent parser operates by defining functions for all\r\n  // syntactic elements, and recursively calling those, each function\r\n  // advancing the input stream and returning an AST node. Precedence\r\n  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`\r\n  // instead of `(!x)[1]` is handled by the fact that the parser\r\n  // function that parses unary prefix operators is called first, and\r\n  // in turn calls the function that parses `[]` subscripts â€” that\r\n  // way, it'll receive the node for `x[1]` already parsed, and wraps\r\n  // *that* in the unary operator node.\r\n  //\r\n  // Acorn uses an [operator precedence parser][opp] to handle binary\r\n  // operator precedence, because it is much more compact than using\r\n  // the technique outlined above, which uses different, nesting\r\n  // functions to specify precedence, for all of the ten binary\r\n  // precedence levels that JavaScript defines.\r\n  //\r\n  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\r\n\r\n  // ### Parser utilities\r\n\r\n  // Continue to the next token.\r\n\r\n  function next() {\r\n    lastStart = tokStart;\r\n    lastEnd = tokEnd;\r\n    lastEndLoc = tokEndLoc;\r\n    readToken();\r\n  }\r\n\r\n  // Enter strict mode. Re-reads the next token to please pedantic\r\n  // tests (\"use strict\"; 010; -- should fail).\r\n\r\n  function setStrict(strct) {\r\n    strict = strct;\r\n    tokPos = tokStart;\r\n    if (options.locations) {\r\n      while (tokPos < tokLineStart) {\r\n        tokLineStart = input.lastIndexOf(\"\\n\", tokLineStart - 2) + 1;\r\n        --tokCurLine;\r\n      }\r\n    }\r\n    skipSpace();\r\n    readToken();\r\n  }\r\n\r\n  // Start an AST node, attaching a start offset.\r\n\r\n  function Node() {\r\n    this.type = null;\r\n    this.start = tokStart;\r\n    this.end = null;\r\n  }\r\n  \r\n  exports.Node = Node;\r\n\r\n  function SourceLocation() {\r\n    this.start = tokStartLoc;\r\n    this.end = null;\r\n    if (sourceFile !== null) this.source = sourceFile;\r\n  }\r\n\r\n  function startNode() {\r\n    var node = new Node();\r\n    if (options.locations)\r\n      node.loc = new SourceLocation();\r\n    if (options.directSourceFile)\r\n      node.sourceFile = options.directSourceFile;\r\n    if (options.ranges)\r\n      node.range = [tokStart, 0];\r\n    return node;\r\n  }\r\n\r\n  // Start a node whose start offset information should be based on\r\n  // the start of another node. For example, a binary operator node is\r\n  // only started after its left-hand side has already been parsed.\r\n\r\n  function startNodeFrom(other) {\r\n    var node = new Node();\r\n    node.start = other.start;\r\n    if (options.locations) {\r\n      node.loc = new SourceLocation();\r\n      node.loc.start = other.loc.start;\r\n    }\r\n    if (options.ranges)\r\n      node.range = [other.range[0], 0];\r\n\r\n    return node;\r\n  }\r\n\r\n  // Finish an AST node, adding `type` and `end` properties.\r\n\r\n  function finishNode(node, type) {\r\n    node.type = type;\r\n    node.end = lastEnd;\r\n    if (options.locations)\r\n      node.loc.end = lastEndLoc;\r\n    if (options.ranges)\r\n      node.range[1] = lastEnd;\r\n    return node;\r\n  }\r\n\r\n  // Test whether a statement node is the string literal `\"use strict\"`.\r\n\r\n  function isUseStrict(stmt) {\r\n    return options.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" &&\r\n      stmt.expression.type === \"Literal\" && stmt.expression.value === \"use strict\";\r\n  }\r\n\r\n  // Predicate that tests whether the next token is of the given\r\n  // type, and if yes, consumes it as a side effect.\r\n\r\n  function eat(type) {\r\n    if (tokType === type) {\r\n      next();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // Test whether a semicolon can be inserted at the current position.\r\n\r\n  function canInsertSemicolon() {\r\n    return !options.strictSemicolons &&\r\n      (tokType === _eof || tokType === _braceR || newline.test(input.slice(lastEnd, tokStart)));\r\n  }\r\n\r\n  // Consume a semicolon, or, failing that, see if we are allowed to\r\n  // pretend that there is a semicolon at this position.\r\n\r\n  function semicolon() {\r\n    if (!eat(_semi) && !canInsertSemicolon()) unexpected();\r\n  }\r\n\r\n  // Expect a token of a given type. If found, consume it, otherwise,\r\n  // raise an unexpected token error.\r\n\r\n  function expect(type) {\r\n    if (tokType === type) next();\r\n    else unexpected();\r\n  }\r\n\r\n  // Expect a char. If found, consume it, otherwise,\r\n  // raise an unexpected token error.\r\n\r\n  function expectChar(ch) {\r\n    if (tokVal === ch) next();\r\n    else unexpected();\r\n  }\r\n\r\n  // Get following char.\r\n\r\n  function nextChar() {\r\n    return input.charAt(tokPos);\r\n  }\r\n\r\n  // Raise an unexpected token error.\r\n\r\n  function unexpected() {\r\n    raise(tokStart, \"Unexpected token\");\r\n  }\r\n\r\n  // Verify that a node is an lval â€” something that can be assigned\r\n  // to.\r\n\r\n  function checkLVal(expr) {\r\n    if (expr.type !== \"Identifier\" && expr.type !== \"MemberExpression\")\r\n      raise(expr.start, \"Assigning to rvalue\");\r\n    if (strict && expr.type === \"Identifier\" && isStrictBadIdWord(expr.name))\r\n      raise(expr.start, \"Assigning to \" + expr.name + \" in strict mode\");\r\n  }\r\n\r\n  // ### Statement parsing\r\n\r\n  // Parse a program. Initializes the parser, reads any number of\r\n  // statements, and wraps them in a Program node.  Optionally takes a\r\n  // `program` argument.  If present, the statements will be appended\r\n  // to its body instead of creating a new node.\r\n\r\n  function parseTopLevel(program) {\r\n    lastStart = lastEnd = tokPos;\r\n    if (options.locations) lastEndLoc = new Position;\r\n    inFunction = strict = null;\r\n    labels = [];\r\n    readToken();\r\n\r\n    var node = program || startNode(), first = true;\r\n    if (!program) node.body = [];\r\n    while (tokType !== _eof) {\r\n      var stmt = parseStatement();\r\n      node.body.push(stmt);\r\n      if (first && isUseStrict(stmt)) setStrict(true);\r\n      first = false;\r\n    }\r\n    return finishNode(node, \"Program\");\r\n  }\r\n\r\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\r\n\r\n  // Parse a single statement.\r\n  //\r\n  // If expecting a statement and finding a slash operator, parse a\r\n  // regular expression literal. This is to handle cases like\r\n  // `if (foo) /blah/.exec(foo);`, where looking at the previous token\r\n  // does not help.\r\n\r\n  function parseStatement() {\r\n    if (tokType === _slash || tokType === _assign && tokVal == \"/=\")\r\n      readToken(true);\r\n\r\n    var starttype = tokType, node = startNode();\r\n\r\n    // Most types of statements are recognized by the keyword they\r\n    // start with. Many are trivial to parse, some require a bit of\r\n    // complexity.\r\n\r\n    switch (starttype) {\r\n    case _break: case _continue: return parseBreakContinueStatement(node, starttype.keyword);\r\n    case _debugger: return parseDebuggerStatement(node);\r\n    case _do: return parseDoStatement(node);\r\n    case _for: return parseForStatement(node);\r\n    case _function: return parseFunctionStatement(node);\r\n    case _if: return parseIfStatement(node);\r\n    case _return: return parseReturnStatement(node);\r\n    case _switch: return parseSwitchStatement(node);\r\n    case _throw: return parseThrowStatement(node);\r\n    case _try: return parseTryStatement(node);\r\n    case _var: case _let: case _const: return parseVarStatement(node, starttype.keyword);\r\n    case _while: return parseWhileStatement(node);\r\n    case _with: return parseWithStatement(node);\r\n    case _braceL: return parseBlock(); // no point creating a function for this\r\n    case _semi: return parseEmptyStatement(node);\r\n\r\n      // If the statement does not start with a statement keyword or a\r\n      // brace, it's an ExpressionStatement or LabeledStatement. We\r\n      // simply start parsing an expression, and afterwards, if the\r\n      // next token is a colon and the expression was a simple\r\n      // Identifier node, we switch to interpreting it as a label.\r\n    default:\r\n      var maybeName = tokVal, expr = parseExpression();\r\n      if (starttype === _name && expr.type === \"Identifier\" && eat(_colon))\r\n        return parseLabeledStatement(node, maybeName, expr);\r\n      else return parseExpressionStatement(node, expr);\r\n    }\r\n  }\r\n  \r\n  function parseBreakContinueStatement(node, keyword) {\r\n    var isBreak = keyword == \"break\";\r\n    next();\r\n    if (eat(_semi) || canInsertSemicolon()) node.label = null;\r\n    else if (tokType !== _name) unexpected();\r\n    else {\r\n      node.label = parseIdent();\r\n      semicolon();\r\n    }\r\n\r\n    // Verify that there is an actual destination to break or\r\n    // continue to.\r\n    for (var i = 0; i < labels.length; ++i) {\r\n      var lab = labels[i];\r\n      if (node.label == null || lab.name === node.label.name) {\r\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\r\n        if (node.label && isBreak) break;\r\n      }\r\n    }\r\n    if (i === labels.length) raise(node.start, \"Unsyntactic \" + keyword);\r\n    return finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\r\n  }\r\n  \r\n  function parseDebuggerStatement(node) {\r\n    next();\r\n    semicolon();\r\n    return finishNode(node, \"DebuggerStatement\");\r\n  }\r\n  \r\n  function parseDoStatement(node) {\r\n    next();\r\n    labels.push(loopLabel);\r\n    node.body = parseStatement();\r\n    labels.pop();\r\n    expect(_while);\r\n    node.test = parseParenExpression();\r\n    semicolon();\r\n    return finishNode(node, \"DoWhileStatement\");\r\n  }\r\n  \r\n  // Disambiguating between a `for` and a `for`/`in` loop is\r\n  // non-trivial. Basically, we have to parse the init `var`\r\n  // statement or expression, disallowing the `in` operator (see\r\n  // the second parameter to `parseExpression`), and then check\r\n  // whether the next token is `in`. When there is no init part\r\n  // (semicolon immediately after the opening parenthesis), it is\r\n  // a regular `for` loop.\r\n  \r\n  function parseForStatement(node) {\r\n    next();\r\n    labels.push(loopLabel);\r\n    expect(_parenL);\r\n    if (tokType === _semi) return parseFor(node, null);\r\n    if (tokType === _var || tokType === _let) {\r\n      var init = startNode(), varKind = tokType.keyword;\r\n      next();\r\n      parseVar(init, true, varKind);\r\n      finishNode(init, \"VariableDeclaration\");\r\n      if (init.declarations.length === 1 && eat(_in))\r\n        return parseForIn(node, init);\r\n      return parseFor(node, init);\r\n    }\r\n    var init = parseExpression(false, true);\r\n    if (eat(_in)) {checkLVal(init); return parseForIn(node, init);}\r\n    return parseFor(node, init);\r\n  }\r\n  \r\n  function parseFunctionStatement(node) {\r\n    next();\r\n    return parseFunction(node, true);\r\n  }\r\n  \r\n  function parseIfStatement(node) {\r\n    next();\r\n    node.test = parseParenExpression();\r\n    node.consequent = parseStatement();\r\n    node.alternate = eat(_else) ? parseStatement() : null;\r\n    return finishNode(node, \"IfStatement\");\r\n  }\r\n  \r\n  function parseReturnStatement(node) {\r\n    if (!inFunction && !options.allowReturnOutsideFunction)\r\n      raise(tokStart, \"'return' outside of function\");\r\n    next();\r\n\r\n    // In `return` (and `break`/`continue`), the keywords with\r\n    // optional arguments, we eagerly look for a semicolon or the\r\n    // possibility to insert one.\r\n\r\n    if (eat(_semi) || canInsertSemicolon()) node.argument = null;\r\n    else { node.argument = parseExpression(); semicolon(); }\r\n    return finishNode(node, \"ReturnStatement\");\r\n  }\r\n  \r\n  function parseSwitchStatement(node) {\r\n    next();\r\n    node.discriminant = parseParenExpression();\r\n    node.cases = [];\r\n    expect(_braceL);\r\n    labels.push(switchLabel);\r\n\r\n    // Statements under must be grouped (by label) in SwitchCase\r\n    // nodes. `cur` is used to keep the node that we are currently\r\n    // adding statements to.\r\n\r\n    for (var cur, sawDefault; tokType != _braceR;) {\r\n      if (tokType === _case || tokType === _default) {\r\n        var isCase = tokType === _case;\r\n        if (cur) finishNode(cur, \"SwitchCase\");\r\n        node.cases.push(cur = startNode());\r\n        cur.consequent = [];\r\n        next();\r\n        if (isCase) cur.test = parseExpression();\r\n        else {\r\n          if (sawDefault) raise(lastStart, \"Multiple default clauses\"); sawDefault = true;\r\n          cur.test = null;\r\n        }\r\n        expect(_colon);\r\n      } else {\r\n        if (!cur) unexpected();\r\n        cur.consequent.push(parseStatement());\r\n      }\r\n    }\r\n    if (cur) finishNode(cur, \"SwitchCase\");\r\n    next(); // Closing brace\r\n    labels.pop();\r\n    return finishNode(node, \"SwitchStatement\");\r\n  }\r\n  \r\n  function parseThrowStatement(node) {\r\n    next();\r\n    if (newline.test(input.slice(lastEnd, tokStart)))\r\n      raise(lastEnd, \"Illegal newline after throw\");\r\n    node.argument = parseExpression();\r\n    semicolon();\r\n    return finishNode(node, \"ThrowStatement\");next();\r\n    if (newline.test(input.slice(lastEnd, tokStart)))\r\n      raise(lastEnd, \"Illegal newline after throw\");\r\n    node.argument = parseExpression();\r\n    semicolon();\r\n    return finishNode(node, \"ThrowStatement\");\r\n  }\r\n  \r\n  function parseTryStatement(node) {\r\n    next();\r\n    node.block = parseBlock();\r\n    node.handler = null;\r\n    if (tokType === _catch) {\r\n      var clause = startNode();\r\n      next();\r\n      expect(_parenL);\r\n      clause.param = parseIdent();\r\n      if (strict && isStrictBadIdWord(clause.param.name))\r\n        raise(clause.param.start, \"Binding \" + clause.param.name + \" in strict mode\");\r\n      expect(_parenR);\r\n      clause.guard = null;\r\n      clause.body = parseBlock();\r\n      node.handler = finishNode(clause, \"CatchClause\");\r\n    }\r\n    node.guardedHandlers = empty;\r\n    node.finalizer = eat(_finally) ? parseBlock() : null;\r\n    if (!node.handler && !node.finalizer)\r\n      raise(node.start, \"Missing catch or finally clause\");\r\n    return finishNode(node, \"TryStatement\");\r\n  }\r\n  \r\n  function parseVarStatement(node, kind) {\r\n    next();\r\n    parseVar(node, false, kind);\r\n    semicolon();\r\n    return finishNode(node, \"VariableDeclaration\");\r\n  }\r\n  \r\n  function parseWhileStatement(node) {\r\n    next();\r\n    node.test = parseParenExpression();\r\n    labels.push(loopLabel);\r\n    node.body = parseStatement();\r\n    labels.pop();\r\n    return finishNode(node, \"WhileStatement\");\r\n  }\r\n  \r\n  function parseWithStatement(node) {\r\n    if (strict) raise(tokStart, \"'with' in strict mode\");\r\n    next();\r\n    node.object = parseParenExpression();\r\n    node.body = parseStatement();\r\n    return finishNode(node, \"WithStatement\");\r\n  }\r\n  \r\n  function parseEmptyStatement(node) {\r\n    next();\r\n    return finishNode(node, \"EmptyStatement\");\r\n  }\r\n  \r\n  function parseLabeledStatement(node, maybeName, expr) {\r\n    for (var i = 0; i < labels.length; ++i)\r\n      if (labels[i].name === maybeName) raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\r\n    var kind = tokType.isLoop ? \"loop\" : tokType === _switch ? \"switch\" : null;\r\n    labels.push({name: maybeName, kind: kind});\r\n    node.body = parseStatement();\r\n    labels.pop();\r\n    node.label = expr;\r\n    return finishNode(node, \"LabeledStatement\");\r\n  }\r\n  \r\n  function parseExpressionStatement(node, expr) {\r\n    node.expression = expr;\r\n    semicolon();\r\n    return finishNode(node, \"ExpressionStatement\");\r\n  }\r\n\r\n  // Used for constructs like `switch` and `if` that insist on\r\n  // parentheses around their expression.\r\n\r\n  function parseParenExpression() {\r\n    expect(_parenL);\r\n    var val = parseExpression();\r\n    expect(_parenR);\r\n    return val;\r\n  }\r\n\r\n  // Parse a semicolon-enclosed block of statements, handling `\"use\r\n  // strict\"` declarations when `allowStrict` is true (used for\r\n  // function bodies).\r\n\r\n  function parseBlock(allowStrict) {\r\n    var node = startNode(), first = true, strict = false, oldStrict;\r\n    node.body = [];\r\n    expect(_braceL);\r\n    while (!eat(_braceR)) {\r\n      var stmt = parseStatement();\r\n      node.body.push(stmt);\r\n      if (first && allowStrict && isUseStrict(stmt)) {\r\n        oldStrict = strict;\r\n        setStrict(strict = true);\r\n      }\r\n      first = false;\r\n    }\r\n    if (strict && !oldStrict) setStrict(false);\r\n    return finishNode(node, \"BlockStatement\");\r\n  }\r\n\r\n  // Parse a regular `for` loop. The disambiguation code in\r\n  // `parseStatement` will already have parsed the init statement or\r\n  // expression.\r\n\r\n  function parseFor(node, init) {\r\n    node.init = init;\r\n    expect(_semi);\r\n    node.test = tokType === _semi ? null : parseExpression();\r\n    expect(_semi);\r\n    node.update = tokType === _parenR ? null : parseExpression();\r\n    expect(_parenR);\r\n    node.body = parseStatement();\r\n    labels.pop();\r\n    return finishNode(node, \"ForStatement\");\r\n  }\r\n\r\n  // Parse a `for`/`in` loop.\r\n\r\n  function parseForIn(node, init) {\r\n    node.left = init;\r\n    node.right = parseExpression();\r\n    expect(_parenR);\r\n    node.body = parseStatement();\r\n    labels.pop();\r\n    return finishNode(node, \"ForInStatement\");\r\n  }\r\n\r\n  // Parse a list of variable declarations.\r\n\r\n  function parseVar(node, noIn, kind) {\r\n    node.declarations = [];\r\n    node.kind = kind;\r\n    for (;;) {\r\n      var decl = startNode();\r\n      decl.id = parseIdent();\r\n      if (strict && isStrictBadIdWord(decl.id.name))\r\n        raise(decl.id.start, \"Binding \" + decl.id.name + \" in strict mode\");\r\n      decl.init = eat(_eq) ? parseExpression(true, noIn) : (kind === _const.keyword ? unexpected() : null);\r\n      node.declarations.push(finishNode(decl, \"VariableDeclarator\"));\r\n      if (!eat(_comma)) break;\r\n    }\r\n    return node;\r\n  }\r\n\r\n  // ### Expression parsing\r\n\r\n  // These nest, from the most general expression type at the top to\r\n  // 'atomic', nondivisible expression types at the bottom. Most of\r\n  // the functions will simply let the function(s) below them parse,\r\n  // and, *if* the syntactic construct they handle is present, wrap\r\n  // the AST node that the inner parser gave them in another node.\r\n\r\n  // Parse a full expression. The arguments are used to forbid comma\r\n  // sequences (in argument lists, array literals, or object literals)\r\n  // or the `in` operator (in for loops initalization expressions).\r\n\r\n  function parseExpression(noComma, noIn) {\r\n    var expr = parseMaybeAssign(noIn);\r\n    if (!noComma && tokType === _comma) {\r\n      var node = startNodeFrom(expr);\r\n      node.expressions = [expr];\r\n      while (eat(_comma)) node.expressions.push(parseMaybeAssign(noIn));\r\n      return finishNode(node, \"SequenceExpression\");\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  // Parse an assignment expression. This includes applications of\r\n  // operators like `+=`.\r\n\r\n  function parseMaybeAssign(noIn) {\r\n    var left = parseMaybeConditional(noIn);\r\n    if (tokType.isAssign) {\r\n      var node = startNodeFrom(left);\r\n      node.operator = tokVal;\r\n      node.left = left;\r\n      next();\r\n      node.right = parseMaybeAssign(noIn);\r\n      checkLVal(left);\r\n      return finishNode(node, \"AssignmentExpression\");\r\n    }\r\n    return left;\r\n  }\r\n\r\n  // Parse a ternary conditional (`?:`) operator.\r\n\r\n  function parseMaybeConditional(noIn) {\r\n    var expr = parseExprOps(noIn);\r\n    if (eat(_question)) {\r\n      var node = startNodeFrom(expr);\r\n      node.test = expr;\r\n      node.consequent = parseExpression(true);\r\n      expect(_colon);\r\n      node.alternate = parseExpression(true, noIn);\r\n      return finishNode(node, \"ConditionalExpression\");\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  // Start the precedence parser.\r\n\r\n  function parseExprOps(noIn) {\r\n    return parseExprOp(parseMaybeUnary(), -1, noIn);\r\n  }\r\n\r\n  // Parse binary operators with the operator precedence parsing\r\n  // algorithm. `left` is the left-hand side of the operator.\r\n  // `minPrec` provides context that allows the function to stop and\r\n  // defer further parser to one of its callers when it encounters an\r\n  // operator that has a lower precedence than the set it is parsing.\r\n\r\n  function parseExprOp(left, minPrec, noIn) {\r\n    var prec = tokType.binop;\r\n    if (prec != null && (!noIn || tokType !== _in)) {\r\n      if (prec > minPrec) {\r\n        var node = startNodeFrom(left);\r\n        node.left = left;\r\n        node.operator = tokVal;\r\n        var op = tokType;\r\n        next();\r\n        node.right = parseExprOp(parseMaybeUnary(), prec, noIn);\r\n        var exprNode = finishNode(node, (op === _logicalOR || op === _logicalAND) ? \"LogicalExpression\" : \"BinaryExpression\");\r\n        return parseExprOp(exprNode, minPrec, noIn);\r\n      }\r\n    }\r\n    return left;\r\n  }\r\n\r\n  // Parse unary operators, both prefix and postfix.\r\n\r\n  function parseMaybeUnary() {\r\n    if (tokType.prefix) {\r\n      var node = startNode(), update = tokType.isUpdate;\r\n      node.operator = tokVal;\r\n      node.prefix = true;\r\n      tokRegexpAllowed = true;\r\n      next();\r\n      node.argument = parseMaybeUnary();\r\n      if (update) checkLVal(node.argument);\r\n      else if (strict && node.operator === \"delete\" &&\r\n               node.argument.type === \"Identifier\")\r\n        raise(node.start, \"Deleting local variable in strict mode\");\r\n      return finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\r\n    }\r\n    var expr = parseExprSubscripts();\r\n    while (tokType.postfix && !canInsertSemicolon()) {\r\n      var node = startNodeFrom(expr);\r\n      node.operator = tokVal;\r\n      node.prefix = false;\r\n      node.argument = expr;\r\n      checkLVal(expr);\r\n      next();\r\n      expr = finishNode(node, \"UpdateExpression\");\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  // Parse call, dot, and `[]`-subscript expressions.\r\n\r\n  function parseExprSubscripts() {\r\n    return parseSubscripts(parseExprAtom());\r\n  }\r\n\r\n  function parseSubscripts(base, noCalls) {\r\n    if (eat(_dot)) {\r\n      var node = startNodeFrom(base);\r\n      node.object = base;\r\n      node.property = parseIdent(true);\r\n      node.computed = false;\r\n      return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\r\n    } else if (eat(_bracketL)) {\r\n      var node = startNodeFrom(base);\r\n      node.object = base;\r\n      node.property = parseExpression();\r\n      node.computed = true;\r\n      expect(_bracketR);\r\n      return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\r\n    } else if (!noCalls && eat(_parenL)) {\r\n      var node = startNodeFrom(base);\r\n      node.callee = base;\r\n      node.arguments = parseExprList(_parenR, false);\r\n      return parseSubscripts(finishNode(node, \"CallExpression\"), noCalls);\r\n    } else return base;\r\n  }\r\n\r\n  // Parse an atomic expression â€” either a single token that is an\r\n  // expression, an expression started by a keyword like `function` or\r\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\r\n  // or `{}`.\r\n\r\n  function parseExprAtom() {\r\n    switch (tokType) {\r\n    case _this:\r\n      var node = startNode();\r\n      next();\r\n      return finishNode(node, \"ThisExpression\");\r\n    case _name:\r\n      return parseIdent();\r\n    case _num: case _string: case _regexp: case _xjsText:\r\n      var node = startNode();\r\n      node.value = tokVal;\r\n      node.raw = input.slice(tokStart, tokEnd);\r\n      next();\r\n      return finishNode(node, \"Literal\");\r\n\r\n    case _null: case _true: case _false:\r\n      var node = startNode();\r\n      node.value = tokType.atomValue;\r\n      node.raw = tokType.keyword;\r\n      next();\r\n      return finishNode(node, \"Literal\");\r\n\r\n    case _parenL:\r\n      var tokStartLoc1 = tokStartLoc, tokStart1 = tokStart;\r\n      next();\r\n      var val = parseExpression();\r\n      val.start = tokStart1;\r\n      val.end = tokEnd;\r\n      if (options.locations) {\r\n        val.loc.start = tokStartLoc1;\r\n        val.loc.end = tokEndLoc;\r\n      }\r\n      if (options.ranges)\r\n        val.range = [tokStart1, tokEnd];\r\n      expect(_parenR);\r\n      return val;\r\n\r\n    case _bracketL:\r\n      var node = startNode();\r\n      next();\r\n      node.elements = parseExprList(_bracketR, true, true);\r\n      return finishNode(node, \"ArrayExpression\");\r\n\r\n    case _braceL:\r\n      return parseObj();\r\n\r\n    case _function:\r\n      var node = startNode();\r\n      next();\r\n      return parseFunction(node, false);\r\n\r\n    case _new:\r\n      return parseNew();\r\n\r\n    case _relational:\r\n      if (tokVal === '<') {\r\n        return parseXJSElement();\r\n      }\r\n\r\n    default:\r\n      unexpected();\r\n    }\r\n  }\r\n\r\n  // New's precedence is slightly tricky. It must allow its argument\r\n  // to be a `[]` or dot subscript expression, but not a call â€” at\r\n  // least, not without wrapping it in parentheses. Thus, it uses the\r\n\r\n  function parseNew() {\r\n    var node = startNode();\r\n    next();\r\n    node.callee = parseSubscripts(parseExprAtom(), true);\r\n    if (eat(_parenL)) node.arguments = parseExprList(_parenR, false);\r\n    else node.arguments = empty;\r\n    return finishNode(node, \"NewExpression\");\r\n  }\r\n\r\n  // Parse an object literal.\r\n\r\n  function parseObj() {\r\n    var node = startNode(), first = true, sawGetSet = false;\r\n    node.properties = [];\r\n    next();\r\n    while (!eat(_braceR)) {\r\n      if (!first) {\r\n        expect(_comma);\r\n        if (options.allowTrailingCommas && eat(_braceR)) break;\r\n      } else first = false;\r\n\r\n      var prop = {key: parsePropertyName()}, isGetSet = false, kind;\r\n      if (eat(_colon)) {\r\n        prop.value = parseExpression(true);\r\n        kind = prop.kind = \"init\";\r\n      } else if (options.ecmaVersion >= 5 && prop.key.type === \"Identifier\" &&\r\n                 (prop.key.name === \"get\" || prop.key.name === \"set\")) {\r\n        isGetSet = sawGetSet = true;\r\n        kind = prop.kind = prop.key.name;\r\n        prop.key = parsePropertyName();\r\n        if (tokType !== _parenL) unexpected();\r\n        prop.value = parseFunction(startNode(), false);\r\n      } else unexpected();\r\n\r\n      // getters and setters are not allowed to clash â€” either with\r\n      // each other or with an init property â€” and in strict mode,\r\n      // init properties are also not allowed to be repeated.\r\n\r\n      if (prop.key.type === \"Identifier\" && (strict || sawGetSet)) {\r\n        for (var i = 0; i < node.properties.length; ++i) {\r\n          var other = node.properties[i];\r\n          if (other.key.name === prop.key.name) {\r\n            var conflict = kind == other.kind || isGetSet && other.kind === \"init\" ||\r\n              kind === \"init\" && (other.kind === \"get\" || other.kind === \"set\");\r\n            if (conflict && !strict && kind === \"init\" && other.kind === \"init\") conflict = false;\r\n            if (conflict) raise(prop.key.start, \"Redefinition of property\");\r\n          }\r\n        }\r\n      }\r\n      node.properties.push(prop);\r\n    }\r\n    return finishNode(node, \"ObjectExpression\");\r\n  }\r\n\r\n  function parsePropertyName() {\r\n    if (tokType === _num || tokType === _string) return parseExprAtom();\r\n    return parseIdent(true);\r\n  }\r\n\r\n  // Parse a function declaration or literal (depending on the\r\n  // `isStatement` parameter).\r\n\r\n  function parseFunction(node, isStatement) {\r\n    if (tokType === _name) node.id = parseIdent();\r\n    else if (isStatement) unexpected();\r\n    else node.id = null;\r\n    node.params = [];\r\n    node.rest = null;\r\n    expect(_parenL);\r\n    for (;;) {\r\n      if (eat(_parenR)) {\r\n        break;\r\n      } else if (options.ecmaVersion >= 6 && eat(_ellipsis)) {\r\n        node.rest = parseIdent();\r\n        expect(_parenR);\r\n        break;\r\n      } else {\r\n        node.params.push(parseIdent());\r\n        if (!eat(_comma)) {\r\n          expect(_parenR);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Start a new scope with regard to labels and the `inFunction`\r\n    // flag (restore them to their old value afterwards).\r\n    var oldInFunc = inFunction, oldLabels = labels;\r\n    inFunction = true; labels = [];\r\n    node.body = parseBlock(true);\r\n    inFunction = oldInFunc; labels = oldLabels;\r\n\r\n    // If this is a strict mode function, verify that argument names\r\n    // are not repeated, and it does not try to bind the words `eval`\r\n    // or `arguments`.\r\n    if (strict || node.body.body.length && isUseStrict(node.body.body[0])) {\r\n      // Negative indices are used to reuse loop body for node.rest and node.id\r\n      for (var i = -2, id; i < node.params.length; ++i) {\r\n        if (i >= 0) {\r\n          id = node.params[i];\r\n        } else if (i == -2) {\r\n          if (node.rest) id = node.rest;\r\n          else continue;\r\n        } else {\r\n          if (node.id) id = node.id;\r\n          else continue;\r\n        }\r\n        if (isStrictReservedWord(id.name) || isStrictBadIdWord(id.name))\r\n          raise(id.start, \"Defining '\" + id.name + \"' in strict mode\");\r\n        if (i >= 0) for (var j = 0; j < i; ++j) if (id.name === node.params[j].name)\r\n          raise(id.start, \"Argument name clash in strict mode\");\r\n      }\r\n    }\r\n\r\n    return finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\r\n  }\r\n\r\n  // Parses a comma-separated list of expressions, and returns them as\r\n  // an array. `close` is the token type that ends the list, and\r\n  // `allowEmpty` can be turned on to allow subsequent commas with\r\n  // nothing in between them to be parsed as `null` (which is needed\r\n  // for array literals).\r\n\r\n  function parseExprList(close, allowTrailingComma, allowEmpty) {\r\n    var elts = [], first = true;\r\n    while (!eat(close)) {\r\n      if (!first) {\r\n        expect(_comma);\r\n        if (allowTrailingComma && options.allowTrailingCommas && eat(close)) break;\r\n      } else first = false;\r\n\r\n      if (allowEmpty && tokType === _comma) elts.push(null);\r\n      else elts.push(parseExpression(true));\r\n    }\r\n    return elts;\r\n  }\r\n\r\n  // Parse the next token as an identifier. If `liberal` is true (used\r\n  // when parsing properties), it will also convert keywords into\r\n  // identifiers.\r\n\r\n  function parseIdent(liberal) {\r\n    var node = startNode();\r\n    if (liberal && options.forbidReserved == \"everywhere\") liberal = false;\r\n    if (tokType === _name) {\r\n      if (!liberal &&\r\n          (options.forbidReserved &&\r\n           (options.ecmaVersion === 3 ? isReservedWord3 : isReservedWord5)(tokVal) ||\r\n           strict && isStrictReservedWord(tokVal)) &&\r\n          input.slice(tokStart, tokEnd).indexOf(\"\\\\\") == -1)\r\n        raise(tokStart, \"The keyword '\" + tokVal + \"' is reserved\");\r\n      node.name = tokVal;\r\n    } else if (liberal && tokType.keyword) {\r\n      node.name = tokType.keyword;\r\n    } else {\r\n      unexpected();\r\n    }\r\n    tokRegexpAllowed = false;\r\n    next();\r\n    return finishNode(node, \"Identifier\");\r\n  }\r\n\r\n  // Transforms JSX element name to string.\r\n\r\n  function getQualifiedXJSName(object) {\r\n    if (object.type === \"XJSIdentifier\") {\r\n      return object.name;\r\n    }\r\n    if (object.type === \"XJSNamespacedName\") {\r\n      return object.namespace.name + ':' + object.name.name;\r\n    }\r\n    if (object.type === \"XJSMemberExpression\") {\r\n      return (\r\n        getQualifiedXJSName(object.object) + '.' +\r\n        getQualifiedXJSName(object.property)\r\n      );\r\n    }\r\n  }\r\n\r\n  // Parse next token as JSX identifier\r\n\r\n  function parseXJSIdentifier() {\r\n    var node = startNode();\r\n    if (tokType === _xjsName) {\r\n      node.name = tokVal;\r\n    } else if (tokType.keyword) {\r\n      node.name = tokType.keyword;\r\n    } else {\r\n      unexpected();\r\n    }\r\n    tokRegexpAllowed = false;\r\n    next();\r\n    return finishNode(node, \"XJSIdentifier\");\r\n  }\r\n\r\n  // Parse namespaced identifier.\r\n\r\n  function parseXJSNamespacedName() {\r\n    var node = startNode();\r\n\r\n    node.namespace = parseXJSIdentifier();\r\n    expect(_colon);\r\n    node.name = parseXJSIdentifier();\r\n\r\n    return finishNode(node, \"XJSNamespacedName\");\r\n  }\r\n\r\n  // Parse JSX object.\r\n\r\n  function parseXJSMemberExpression() {\r\n    var node = parseXJSIdentifier();\r\n\r\n    while (eat(_dot)) {\r\n      var newNode = startNodeFrom(node);\r\n      newNode.object = node;\r\n      newNode.property = parseXJSIdentifier();\r\n      node = finishNode(newNode, \"XJSMemberExpression\");\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  // Parses element name in any form - namespaced, object\r\n  // or single identifier.\r\n\r\n  function parseXJSElementName() {\r\n    switch (nextChar()) {\r\n      case ':':\r\n        return parseXJSNamespacedName();\r\n\r\n      case '.':\r\n        return parseXJSMemberExpression();\r\n\r\n      default:\r\n        return parseXJSIdentifier();\r\n    }\r\n  }\r\n\r\n  // Parses attribute name as optionally namespaced identifier.\r\n\r\n  function parseXJSAttributeName() {\r\n    if (nextChar() === ':') {\r\n      return parseXJSNamespacedName();\r\n    }\r\n\r\n    return parseXJSIdentifier();\r\n  }\r\n\r\n  // Parses any type of JSX attribute value.\r\n\r\n  function parseXJSAttributeValue() {\r\n    var node;\r\n    if (tokType === _braceL) {\r\n      node = parseXJSExpressionContainer();\r\n      if (node.expression.type === \"XJSEmptyExpression\") {\r\n        raise(\r\n          node.start,\r\n            'XJS attributes must only be assigned a non-empty ' +\r\n            'expression'\r\n        );\r\n      }\r\n    } else if (tokVal === '<') {\r\n      node = parseXJSElement();\r\n    } else if (tokType === _xjsText) {\r\n      node = parseExprAtom();\r\n    } else {\r\n      raise(tokStart, \"XJS value should be either an expression or a quoted XJS text\");\r\n    }\r\n    return node;\r\n  }\r\n\r\n  // XJSEmptyExpression is unique type since it doesn't actually parse anything,\r\n  // and so it should start at the end of last read token (left brace) and finish\r\n  // at the beginning of the next one (right brace).\r\n\r\n  function parseXJSEmptyExpression() {\r\n    if (tokType !== _braceR) {\r\n      unexpected();\r\n    }\r\n\r\n    var tmp;\r\n\r\n    tmp = tokStart;\r\n    tokStart = lastEnd;\r\n    lastEnd = tmp;\r\n\r\n    tmp = tokStartLoc;\r\n    tokStartLoc = lastEndLoc;\r\n    lastEndLoc = tmp;\r\n\r\n    return finishNode(startNode(), \"XJSEmptyExpression\");\r\n  }\r\n\r\n  // Parses JSX expression enclosed into curly brackets.\r\n\r\n  function parseXJSExpressionContainer() {\r\n    var node = startNode();\r\n\r\n    var origInXJSTag = inXJSTag;\r\n    inXJSTag = false;\r\n\r\n    expect(_braceL);\r\n\r\n    node.expression = tokType === _braceR ? parseXJSEmptyExpression() : parseExpression();\r\n\r\n    inXJSTag = origInXJSTag;\r\n\r\n    expect(_braceR);\r\n\r\n    return finishNode(node, \"XJSExpressionContainer\");\r\n  }\r\n\r\n  // Parses following JSX attribute name-value pair.\r\n\r\n  function parseXJSAttribute() {\r\n    var node = startNode();\r\n\r\n    node.name = parseXJSAttributeName();\r\n\r\n    // HTML empty attribute\r\n    if (tokVal === \"=\") {\r\n      next();\r\n      node.value = parseXJSAttributeValue();\r\n    }\r\n\r\n    return finishNode(node, \"XJSAttribute\");\r\n  }\r\n\r\n  // Parses any type of JSX contents (expression, text or another tag).\r\n\r\n  function parseXJSChild() {\r\n    switch (tokType) {\r\n      case _braceL:\r\n        return parseXJSExpressionContainer();\r\n\r\n      case _xjsText:\r\n        return parseExprAtom();\r\n\r\n      default:\r\n        return parseXJSElement();\r\n    }\r\n  }\r\n\r\n  // Parses JSX open tag.\r\n\r\n  function parseXJSOpeningElement() {\r\n    var node = startNode(), attributes = node.attributes = [];\r\n\r\n    var origInXJSChild = inXJSChild;\r\n    var origInXJSTag = inXJSTag;\r\n    inXJSChild = false;\r\n    inXJSTag = true;\r\n\r\n    expectChar('<');\r\n\r\n    node.name = parseXJSElementName();\r\n\r\n    while (tokType !== _eof && tokType !== _slash && tokVal !== '>') {\r\n      attributes.push(parseXJSAttribute());\r\n    }\r\n\r\n    inXJSTag = false;\r\n\r\n    if (node.selfClosing = !!eat(_slash)) {\r\n      inXJSTag = origInXJSTag;\r\n      inXJSChild = origInXJSChild;\r\n    } else {\r\n      inXJSChild = true;\r\n    }\r\n\r\n    expectChar('>');\r\n\r\n    return finishNode(node, \"XJSOpeningElement\");\r\n  }\r\n\r\n  // Parses JSX closing tag.\r\n\r\n  function parseXJSClosingElement() {\r\n    var node = startNode();\r\n    var origInXJSChild = inXJSChild;\r\n    var origInXJSTag = inXJSTag;\r\n    inXJSChild = false;\r\n    inXJSTag = true;\r\n    tokRegexpAllowed = false;\r\n    expectChar('<');\r\n    expect(_slash);\r\n    node.name = parseXJSElementName();\r\n    skipSpace();\r\n    // A valid token is expected after >, so parser needs to know\r\n    // whether to look for a standard JS token or an XJS text node\r\n    inXJSChild = origInXJSChild;\r\n    inXJSTag = origInXJSTag;\r\n    tokRegexpAllowed = false;\r\n    expectChar('>');\r\n    return finishNode(node, \"XJSClosingElement\");\r\n  }\r\n\r\n  // Parses entire JSX element, including it's opening tag,\r\n  // attributes, contents and closing tag.\r\n\r\n  function parseXJSElement() {\r\n    var node = startNode();\r\n    var children = [];\r\n\r\n    var origInXJSChild = inXJSChild;\r\n    var openingElement = parseXJSOpeningElement();\r\n\r\n    if (!openingElement.selfClosing) {\r\n      while (tokType !== _eof && !(tokVal === '<' && nextChar() === '/')) {\r\n        inXJSChild = true;\r\n        children.push(parseXJSChild());\r\n      }\r\n      inXJSChild = origInXJSChild;\r\n      var closingElement = parseXJSClosingElement();\r\n      if (getQualifiedXJSName(closingElement.name) !== getQualifiedXJSName(openingElement.name)) {\r\n        raise(\r\n          closingElement.start,\r\n          \"Expected corresponding XJS closing tag for '\" + getQualifiedXJSName(openingElement.name) + \"'\"\r\n        );\r\n      }\r\n    }\r\n\r\n    // When (erroneously) writing two adjacent tags like\r\n    //\r\n    //     var x = <div>one</div><div>two</div>;\r\n    //\r\n    // the default error message is a bit incomprehensible. Since it's\r\n    // rarely (never?) useful to write a less-than sign after an XJS\r\n    // element, we disallow it here in the parser in order to provide a\r\n    // better error message. (In the rare case that the less-than operator\r\n    // was intended, the left tag can be wrapped in parentheses.)\r\n    if (!origInXJSChild && tokVal === '<') {\r\n      raise(tokStart, \"Adjacent XJS elements must be wrapped in an enclosing tag\");\r\n    }\r\n\r\n    node.openingElement = openingElement;\r\n    node.closingElement = closingElement;\r\n    node.children = children;\r\n    return finishNode(node, \"XJSElement\");\r\n  }\r\n\r\n});\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1123,"column":0},"generated":{"line":1124,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1124,"column":0},"generated":{"line":1125,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1125,"column":0},"generated":{"line":1126,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1126,"column":0},"generated":{"line":1127,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1127,"column":0},"generated":{"line":1128,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1128,"column":0},"generated":{"line":1129,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1129,"column":0},"generated":{"line":1130,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1130,"column":0},"generated":{"line":1131,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1131,"column":0},"generated":{"line":1132,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1132,"column":0},"generated":{"line":1133,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1133,"column":0},"generated":{"line":1134,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1134,"column":0},"generated":{"line":1135,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1135,"column":0},"generated":{"line":1136,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1136,"column":0},"generated":{"line":1137,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1137,"column":0},"generated":{"line":1138,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1138,"column":0},"generated":{"line":1139,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1139,"column":0},"generated":{"line":1140,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1140,"column":0},"generated":{"line":1141,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1141,"column":0},"generated":{"line":1142,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1142,"column":0},"generated":{"line":1143,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1143,"column":0},"generated":{"line":1144,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1144,"column":0},"generated":{"line":1145,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1145,"column":0},"generated":{"line":1146,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1146,"column":0},"generated":{"line":1147,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1147,"column":0},"generated":{"line":1148,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1148,"column":0},"generated":{"line":1149,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1149,"column":0},"generated":{"line":1150,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1150,"column":0},"generated":{"line":1151,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1151,"column":0},"generated":{"line":1152,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1152,"column":0},"generated":{"line":1153,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1153,"column":0},"generated":{"line":1154,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1154,"column":0},"generated":{"line":1155,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1155,"column":0},"generated":{"line":1156,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1156,"column":0},"generated":{"line":1157,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1157,"column":0},"generated":{"line":1158,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1158,"column":0},"generated":{"line":1159,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1159,"column":0},"generated":{"line":1160,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1160,"column":0},"generated":{"line":1161,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1161,"column":0},"generated":{"line":1162,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1162,"column":0},"generated":{"line":1163,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1163,"column":0},"generated":{"line":1164,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1164,"column":0},"generated":{"line":1165,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1165,"column":0},"generated":{"line":1166,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1166,"column":0},"generated":{"line":1167,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1167,"column":0},"generated":{"line":1168,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1168,"column":0},"generated":{"line":1169,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1169,"column":0},"generated":{"line":1170,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1170,"column":0},"generated":{"line":1171,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1171,"column":0},"generated":{"line":1172,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1172,"column":0},"generated":{"line":1173,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1173,"column":0},"generated":{"line":1174,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1174,"column":0},"generated":{"line":1175,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1175,"column":0},"generated":{"line":1176,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1176,"column":0},"generated":{"line":1177,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1177,"column":0},"generated":{"line":1178,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1178,"column":0},"generated":{"line":1179,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1179,"column":0},"generated":{"line":1180,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1180,"column":0},"generated":{"line":1181,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1181,"column":0},"generated":{"line":1182,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1182,"column":0},"generated":{"line":1183,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1183,"column":0},"generated":{"line":1184,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1184,"column":0},"generated":{"line":1185,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1185,"column":0},"generated":{"line":1186,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1186,"column":0},"generated":{"line":1187,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1187,"column":0},"generated":{"line":1188,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1188,"column":0},"generated":{"line":1189,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1189,"column":0},"generated":{"line":1190,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1190,"column":0},"generated":{"line":1191,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1191,"column":0},"generated":{"line":1192,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1192,"column":0},"generated":{"line":1193,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1193,"column":0},"generated":{"line":1194,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1194,"column":0},"generated":{"line":1195,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1195,"column":0},"generated":{"line":1196,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1196,"column":0},"generated":{"line":1197,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1197,"column":0},"generated":{"line":1198,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1198,"column":0},"generated":{"line":1199,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1199,"column":0},"generated":{"line":1200,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1200,"column":0},"generated":{"line":1201,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1201,"column":0},"generated":{"line":1202,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1202,"column":0},"generated":{"line":1203,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1203,"column":0},"generated":{"line":1204,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1204,"column":0},"generated":{"line":1205,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1205,"column":0},"generated":{"line":1206,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1206,"column":0},"generated":{"line":1207,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1207,"column":0},"generated":{"line":1208,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1208,"column":0},"generated":{"line":1209,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1209,"column":0},"generated":{"line":1210,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1210,"column":0},"generated":{"line":1211,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1211,"column":0},"generated":{"line":1212,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1212,"column":0},"generated":{"line":1213,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1213,"column":0},"generated":{"line":1214,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1214,"column":0},"generated":{"line":1215,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1215,"column":0},"generated":{"line":1216,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1216,"column":0},"generated":{"line":1217,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1217,"column":0},"generated":{"line":1218,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1218,"column":0},"generated":{"line":1219,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1219,"column":0},"generated":{"line":1220,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1220,"column":0},"generated":{"line":1221,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1221,"column":0},"generated":{"line":1222,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1222,"column":0},"generated":{"line":1223,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1223,"column":0},"generated":{"line":1224,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1224,"column":0},"generated":{"line":1225,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1225,"column":0},"generated":{"line":1226,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1226,"column":0},"generated":{"line":1227,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1227,"column":0},"generated":{"line":1228,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1228,"column":0},"generated":{"line":1229,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1229,"column":0},"generated":{"line":1230,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1230,"column":0},"generated":{"line":1231,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1231,"column":0},"generated":{"line":1232,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1232,"column":0},"generated":{"line":1233,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1233,"column":0},"generated":{"line":1234,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1234,"column":0},"generated":{"line":1235,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1235,"column":0},"generated":{"line":1236,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1236,"column":0},"generated":{"line":1237,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1237,"column":0},"generated":{"line":1238,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1238,"column":0},"generated":{"line":1239,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1239,"column":0},"generated":{"line":1240,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1240,"column":0},"generated":{"line":1241,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1241,"column":0},"generated":{"line":1242,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1242,"column":0},"generated":{"line":1243,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1243,"column":0},"generated":{"line":1244,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1244,"column":0},"generated":{"line":1245,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1245,"column":0},"generated":{"line":1246,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1246,"column":0},"generated":{"line":1247,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1247,"column":0},"generated":{"line":1248,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1248,"column":0},"generated":{"line":1249,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1249,"column":0},"generated":{"line":1250,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1250,"column":0},"generated":{"line":1251,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1251,"column":0},"generated":{"line":1252,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1252,"column":0},"generated":{"line":1253,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1253,"column":0},"generated":{"line":1254,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1254,"column":0},"generated":{"line":1255,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1255,"column":0},"generated":{"line":1256,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1256,"column":0},"generated":{"line":1257,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1257,"column":0},"generated":{"line":1258,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1258,"column":0},"generated":{"line":1259,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1259,"column":0},"generated":{"line":1260,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1260,"column":0},"generated":{"line":1261,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1261,"column":0},"generated":{"line":1262,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1262,"column":0},"generated":{"line":1263,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1263,"column":0},"generated":{"line":1264,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1264,"column":0},"generated":{"line":1265,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1265,"column":0},"generated":{"line":1266,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1266,"column":0},"generated":{"line":1267,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1267,"column":0},"generated":{"line":1268,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1268,"column":0},"generated":{"line":1269,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1269,"column":0},"generated":{"line":1270,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1270,"column":0},"generated":{"line":1271,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1271,"column":0},"generated":{"line":1272,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1272,"column":0},"generated":{"line":1273,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1273,"column":0},"generated":{"line":1274,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1274,"column":0},"generated":{"line":1275,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1275,"column":0},"generated":{"line":1276,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1276,"column":0},"generated":{"line":1277,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1277,"column":0},"generated":{"line":1278,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1278,"column":0},"generated":{"line":1279,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1279,"column":0},"generated":{"line":1280,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1280,"column":0},"generated":{"line":1281,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1281,"column":0},"generated":{"line":1282,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1282,"column":0},"generated":{"line":1283,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1283,"column":0},"generated":{"line":1284,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1284,"column":0},"generated":{"line":1285,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1285,"column":0},"generated":{"line":1286,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1286,"column":0},"generated":{"line":1287,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1287,"column":0},"generated":{"line":1288,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1288,"column":0},"generated":{"line":1289,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1289,"column":0},"generated":{"line":1290,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1290,"column":0},"generated":{"line":1291,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1291,"column":0},"generated":{"line":1292,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1292,"column":0},"generated":{"line":1293,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1293,"column":0},"generated":{"line":1294,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1294,"column":0},"generated":{"line":1295,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1295,"column":0},"generated":{"line":1296,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1296,"column":0},"generated":{"line":1297,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1297,"column":0},"generated":{"line":1298,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1298,"column":0},"generated":{"line":1299,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1299,"column":0},"generated":{"line":1300,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1300,"column":0},"generated":{"line":1301,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1301,"column":0},"generated":{"line":1302,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1302,"column":0},"generated":{"line":1303,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1303,"column":0},"generated":{"line":1304,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1304,"column":0},"generated":{"line":1305,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1305,"column":0},"generated":{"line":1306,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1306,"column":0},"generated":{"line":1307,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1307,"column":0},"generated":{"line":1308,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1308,"column":0},"generated":{"line":1309,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1309,"column":0},"generated":{"line":1310,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1310,"column":0},"generated":{"line":1311,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1311,"column":0},"generated":{"line":1312,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1312,"column":0},"generated":{"line":1313,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1313,"column":0},"generated":{"line":1314,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1314,"column":0},"generated":{"line":1315,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1315,"column":0},"generated":{"line":1316,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1316,"column":0},"generated":{"line":1317,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1317,"column":0},"generated":{"line":1318,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1318,"column":0},"generated":{"line":1319,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1319,"column":0},"generated":{"line":1320,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1320,"column":0},"generated":{"line":1321,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1321,"column":0},"generated":{"line":1322,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1322,"column":0},"generated":{"line":1323,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1323,"column":0},"generated":{"line":1324,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1324,"column":0},"generated":{"line":1325,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1325,"column":0},"generated":{"line":1326,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1326,"column":0},"generated":{"line":1327,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1327,"column":0},"generated":{"line":1328,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1328,"column":0},"generated":{"line":1329,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1329,"column":0},"generated":{"line":1330,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1330,"column":0},"generated":{"line":1331,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1331,"column":0},"generated":{"line":1332,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1332,"column":0},"generated":{"line":1333,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1333,"column":0},"generated":{"line":1334,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1334,"column":0},"generated":{"line":1335,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1335,"column":0},"generated":{"line":1336,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1336,"column":0},"generated":{"line":1337,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1337,"column":0},"generated":{"line":1338,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1338,"column":0},"generated":{"line":1339,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1339,"column":0},"generated":{"line":1340,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1340,"column":0},"generated":{"line":1341,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1341,"column":0},"generated":{"line":1342,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1342,"column":0},"generated":{"line":1343,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1343,"column":0},"generated":{"line":1344,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1344,"column":0},"generated":{"line":1345,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1345,"column":0},"generated":{"line":1346,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1346,"column":0},"generated":{"line":1347,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1347,"column":0},"generated":{"line":1348,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1348,"column":0},"generated":{"line":1349,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1349,"column":0},"generated":{"line":1350,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1350,"column":0},"generated":{"line":1351,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1351,"column":0},"generated":{"line":1352,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1352,"column":0},"generated":{"line":1353,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1353,"column":0},"generated":{"line":1354,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1354,"column":0},"generated":{"line":1355,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1355,"column":0},"generated":{"line":1356,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1356,"column":0},"generated":{"line":1357,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1357,"column":0},"generated":{"line":1358,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1358,"column":0},"generated":{"line":1359,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1359,"column":0},"generated":{"line":1360,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1360,"column":0},"generated":{"line":1361,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1361,"column":0},"generated":{"line":1362,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1362,"column":0},"generated":{"line":1363,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1363,"column":0},"generated":{"line":1364,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1364,"column":0},"generated":{"line":1365,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1365,"column":0},"generated":{"line":1366,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1366,"column":0},"generated":{"line":1367,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1367,"column":0},"generated":{"line":1368,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1368,"column":0},"generated":{"line":1369,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1369,"column":0},"generated":{"line":1370,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1370,"column":0},"generated":{"line":1371,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1371,"column":0},"generated":{"line":1372,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1372,"column":0},"generated":{"line":1373,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1373,"column":0},"generated":{"line":1374,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1374,"column":0},"generated":{"line":1375,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1375,"column":0},"generated":{"line":1376,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1376,"column":0},"generated":{"line":1377,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1377,"column":0},"generated":{"line":1378,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1378,"column":0},"generated":{"line":1379,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1379,"column":0},"generated":{"line":1380,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1380,"column":0},"generated":{"line":1381,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1381,"column":0},"generated":{"line":1382,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1382,"column":0},"generated":{"line":1383,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1383,"column":0},"generated":{"line":1384,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1384,"column":0},"generated":{"line":1385,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1385,"column":0},"generated":{"line":1386,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1386,"column":0},"generated":{"line":1387,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1387,"column":0},"generated":{"line":1388,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1388,"column":0},"generated":{"line":1389,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1389,"column":0},"generated":{"line":1390,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1390,"column":0},"generated":{"line":1391,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1391,"column":0},"generated":{"line":1392,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1392,"column":0},"generated":{"line":1393,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1393,"column":0},"generated":{"line":1394,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1394,"column":0},"generated":{"line":1395,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1395,"column":0},"generated":{"line":1396,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1396,"column":0},"generated":{"line":1397,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1397,"column":0},"generated":{"line":1398,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1398,"column":0},"generated":{"line":1399,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1399,"column":0},"generated":{"line":1400,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1400,"column":0},"generated":{"line":1401,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1401,"column":0},"generated":{"line":1402,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1402,"column":0},"generated":{"line":1403,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1403,"column":0},"generated":{"line":1404,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1404,"column":0},"generated":{"line":1405,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1405,"column":0},"generated":{"line":1406,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1406,"column":0},"generated":{"line":1407,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1407,"column":0},"generated":{"line":1408,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1408,"column":0},"generated":{"line":1409,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1409,"column":0},"generated":{"line":1410,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1410,"column":0},"generated":{"line":1411,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1411,"column":0},"generated":{"line":1412,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1412,"column":0},"generated":{"line":1413,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1413,"column":0},"generated":{"line":1414,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1414,"column":0},"generated":{"line":1415,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1415,"column":0},"generated":{"line":1416,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1416,"column":0},"generated":{"line":1417,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1417,"column":0},"generated":{"line":1418,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1418,"column":0},"generated":{"line":1419,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1419,"column":0},"generated":{"line":1420,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1420,"column":0},"generated":{"line":1421,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1421,"column":0},"generated":{"line":1422,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1422,"column":0},"generated":{"line":1423,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1423,"column":0},"generated":{"line":1424,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1424,"column":0},"generated":{"line":1425,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1425,"column":0},"generated":{"line":1426,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1426,"column":0},"generated":{"line":1427,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1427,"column":0},"generated":{"line":1428,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1428,"column":0},"generated":{"line":1429,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1429,"column":0},"generated":{"line":1430,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1430,"column":0},"generated":{"line":1431,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1431,"column":0},"generated":{"line":1432,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1432,"column":0},"generated":{"line":1433,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1433,"column":0},"generated":{"line":1434,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1434,"column":0},"generated":{"line":1435,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1435,"column":0},"generated":{"line":1436,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1436,"column":0},"generated":{"line":1437,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1437,"column":0},"generated":{"line":1438,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1438,"column":0},"generated":{"line":1439,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1439,"column":0},"generated":{"line":1440,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1440,"column":0},"generated":{"line":1441,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1441,"column":0},"generated":{"line":1442,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1442,"column":0},"generated":{"line":1443,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1443,"column":0},"generated":{"line":1444,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1444,"column":0},"generated":{"line":1445,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1445,"column":0},"generated":{"line":1446,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1446,"column":0},"generated":{"line":1447,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1447,"column":0},"generated":{"line":1448,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1448,"column":0},"generated":{"line":1449,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1449,"column":0},"generated":{"line":1450,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1450,"column":0},"generated":{"line":1451,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1451,"column":0},"generated":{"line":1452,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1452,"column":0},"generated":{"line":1453,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1453,"column":0},"generated":{"line":1454,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1454,"column":0},"generated":{"line":1455,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1455,"column":0},"generated":{"line":1456,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1456,"column":0},"generated":{"line":1457,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1457,"column":0},"generated":{"line":1458,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1458,"column":0},"generated":{"line":1459,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1459,"column":0},"generated":{"line":1460,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1460,"column":0},"generated":{"line":1461,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1461,"column":0},"generated":{"line":1462,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1462,"column":0},"generated":{"line":1463,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1463,"column":0},"generated":{"line":1464,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1464,"column":0},"generated":{"line":1465,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1465,"column":0},"generated":{"line":1466,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1466,"column":0},"generated":{"line":1467,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1467,"column":0},"generated":{"line":1468,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1468,"column":0},"generated":{"line":1469,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1469,"column":0},"generated":{"line":1470,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1470,"column":0},"generated":{"line":1471,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1471,"column":0},"generated":{"line":1472,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1472,"column":0},"generated":{"line":1473,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1473,"column":0},"generated":{"line":1474,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1474,"column":0},"generated":{"line":1475,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1475,"column":0},"generated":{"line":1476,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1476,"column":0},"generated":{"line":1477,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1477,"column":0},"generated":{"line":1478,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1478,"column":0},"generated":{"line":1479,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1479,"column":0},"generated":{"line":1480,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1480,"column":0},"generated":{"line":1481,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1481,"column":0},"generated":{"line":1482,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1482,"column":0},"generated":{"line":1483,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1483,"column":0},"generated":{"line":1484,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1484,"column":0},"generated":{"line":1485,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1485,"column":0},"generated":{"line":1486,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1486,"column":0},"generated":{"line":1487,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1487,"column":0},"generated":{"line":1488,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1488,"column":0},"generated":{"line":1489,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1489,"column":0},"generated":{"line":1490,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1490,"column":0},"generated":{"line":1491,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1491,"column":0},"generated":{"line":1492,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1492,"column":0},"generated":{"line":1493,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1493,"column":0},"generated":{"line":1494,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1494,"column":0},"generated":{"line":1495,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1495,"column":0},"generated":{"line":1496,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1496,"column":0},"generated":{"line":1497,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1497,"column":0},"generated":{"line":1498,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1498,"column":0},"generated":{"line":1499,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1499,"column":0},"generated":{"line":1500,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1500,"column":0},"generated":{"line":1501,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1501,"column":0},"generated":{"line":1502,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1502,"column":0},"generated":{"line":1503,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1503,"column":0},"generated":{"line":1504,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1504,"column":0},"generated":{"line":1505,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1505,"column":0},"generated":{"line":1506,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1506,"column":0},"generated":{"line":1507,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1507,"column":0},"generated":{"line":1508,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1508,"column":0},"generated":{"line":1509,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1509,"column":0},"generated":{"line":1510,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1510,"column":0},"generated":{"line":1511,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1511,"column":0},"generated":{"line":1512,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1512,"column":0},"generated":{"line":1513,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1513,"column":0},"generated":{"line":1514,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1514,"column":0},"generated":{"line":1515,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1515,"column":0},"generated":{"line":1516,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1516,"column":0},"generated":{"line":1517,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1517,"column":0},"generated":{"line":1518,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1518,"column":0},"generated":{"line":1519,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1519,"column":0},"generated":{"line":1520,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1520,"column":0},"generated":{"line":1521,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1521,"column":0},"generated":{"line":1522,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1522,"column":0},"generated":{"line":1523,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1523,"column":0},"generated":{"line":1524,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1524,"column":0},"generated":{"line":1525,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1525,"column":0},"generated":{"line":1526,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1526,"column":0},"generated":{"line":1527,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1527,"column":0},"generated":{"line":1528,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1528,"column":0},"generated":{"line":1529,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1529,"column":0},"generated":{"line":1530,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1530,"column":0},"generated":{"line":1531,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1531,"column":0},"generated":{"line":1532,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1532,"column":0},"generated":{"line":1533,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1533,"column":0},"generated":{"line":1534,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1534,"column":0},"generated":{"line":1535,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1535,"column":0},"generated":{"line":1536,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1536,"column":0},"generated":{"line":1537,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1537,"column":0},"generated":{"line":1538,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1538,"column":0},"generated":{"line":1539,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1539,"column":0},"generated":{"line":1540,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1540,"column":0},"generated":{"line":1541,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1541,"column":0},"generated":{"line":1542,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1542,"column":0},"generated":{"line":1543,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1543,"column":0},"generated":{"line":1544,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1544,"column":0},"generated":{"line":1545,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1545,"column":0},"generated":{"line":1546,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1546,"column":0},"generated":{"line":1547,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1547,"column":0},"generated":{"line":1548,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1548,"column":0},"generated":{"line":1549,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1549,"column":0},"generated":{"line":1550,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1550,"column":0},"generated":{"line":1551,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1551,"column":0},"generated":{"line":1552,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1552,"column":0},"generated":{"line":1553,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1553,"column":0},"generated":{"line":1554,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1554,"column":0},"generated":{"line":1555,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1555,"column":0},"generated":{"line":1556,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1556,"column":0},"generated":{"line":1557,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1557,"column":0},"generated":{"line":1558,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1558,"column":0},"generated":{"line":1559,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1559,"column":0},"generated":{"line":1560,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1560,"column":0},"generated":{"line":1561,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1561,"column":0},"generated":{"line":1562,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1562,"column":0},"generated":{"line":1563,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1563,"column":0},"generated":{"line":1564,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1564,"column":0},"generated":{"line":1565,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1565,"column":0},"generated":{"line":1566,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1566,"column":0},"generated":{"line":1567,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1567,"column":0},"generated":{"line":1568,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1568,"column":0},"generated":{"line":1569,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1569,"column":0},"generated":{"line":1570,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1570,"column":0},"generated":{"line":1571,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1571,"column":0},"generated":{"line":1572,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1572,"column":0},"generated":{"line":1573,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1573,"column":0},"generated":{"line":1574,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1574,"column":0},"generated":{"line":1575,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1575,"column":0},"generated":{"line":1576,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1576,"column":0},"generated":{"line":1577,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1577,"column":0},"generated":{"line":1578,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1578,"column":0},"generated":{"line":1579,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1579,"column":0},"generated":{"line":1580,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1580,"column":0},"generated":{"line":1581,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1581,"column":0},"generated":{"line":1582,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1582,"column":0},"generated":{"line":1583,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1583,"column":0},"generated":{"line":1584,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1584,"column":0},"generated":{"line":1585,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1585,"column":0},"generated":{"line":1586,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1586,"column":0},"generated":{"line":1587,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1587,"column":0},"generated":{"line":1588,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1588,"column":0},"generated":{"line":1589,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1589,"column":0},"generated":{"line":1590,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1590,"column":0},"generated":{"line":1591,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1591,"column":0},"generated":{"line":1592,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1592,"column":0},"generated":{"line":1593,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1593,"column":0},"generated":{"line":1594,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1594,"column":0},"generated":{"line":1595,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1595,"column":0},"generated":{"line":1596,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1596,"column":0},"generated":{"line":1597,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1597,"column":0},"generated":{"line":1598,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1598,"column":0},"generated":{"line":1599,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1599,"column":0},"generated":{"line":1600,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1600,"column":0},"generated":{"line":1601,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1601,"column":0},"generated":{"line":1602,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1602,"column":0},"generated":{"line":1603,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1603,"column":0},"generated":{"line":1604,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1604,"column":0},"generated":{"line":1605,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1605,"column":0},"generated":{"line":1606,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1606,"column":0},"generated":{"line":1607,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1607,"column":0},"generated":{"line":1608,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1608,"column":0},"generated":{"line":1609,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1609,"column":0},"generated":{"line":1610,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1610,"column":0},"generated":{"line":1611,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1611,"column":0},"generated":{"line":1612,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1612,"column":0},"generated":{"line":1613,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1613,"column":0},"generated":{"line":1614,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1614,"column":0},"generated":{"line":1615,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1615,"column":0},"generated":{"line":1616,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1616,"column":0},"generated":{"line":1617,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1617,"column":0},"generated":{"line":1618,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1618,"column":0},"generated":{"line":1619,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1619,"column":0},"generated":{"line":1620,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1620,"column":0},"generated":{"line":1621,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1621,"column":0},"generated":{"line":1622,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1622,"column":0},"generated":{"line":1623,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1623,"column":0},"generated":{"line":1624,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1624,"column":0},"generated":{"line":1625,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1625,"column":0},"generated":{"line":1626,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1626,"column":0},"generated":{"line":1627,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1627,"column":0},"generated":{"line":1628,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1628,"column":0},"generated":{"line":1629,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1629,"column":0},"generated":{"line":1630,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1630,"column":0},"generated":{"line":1631,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1631,"column":0},"generated":{"line":1632,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1632,"column":0},"generated":{"line":1633,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1633,"column":0},"generated":{"line":1634,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1634,"column":0},"generated":{"line":1635,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1635,"column":0},"generated":{"line":1636,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1636,"column":0},"generated":{"line":1637,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1637,"column":0},"generated":{"line":1638,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1638,"column":0},"generated":{"line":1639,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1639,"column":0},"generated":{"line":1640,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1640,"column":0},"generated":{"line":1641,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1641,"column":0},"generated":{"line":1642,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1642,"column":0},"generated":{"line":1643,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1643,"column":0},"generated":{"line":1644,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1644,"column":0},"generated":{"line":1645,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1645,"column":0},"generated":{"line":1646,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1646,"column":0},"generated":{"line":1647,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1647,"column":0},"generated":{"line":1648,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1648,"column":0},"generated":{"line":1649,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1649,"column":0},"generated":{"line":1650,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1650,"column":0},"generated":{"line":1651,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1651,"column":0},"generated":{"line":1652,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1652,"column":0},"generated":{"line":1653,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1653,"column":0},"generated":{"line":1654,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1654,"column":0},"generated":{"line":1655,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1655,"column":0},"generated":{"line":1656,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1656,"column":0},"generated":{"line":1657,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1657,"column":0},"generated":{"line":1658,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1658,"column":0},"generated":{"line":1659,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1659,"column":0},"generated":{"line":1660,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1660,"column":0},"generated":{"line":1661,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1661,"column":0},"generated":{"line":1662,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1662,"column":0},"generated":{"line":1663,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1663,"column":0},"generated":{"line":1664,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1664,"column":0},"generated":{"line":1665,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1665,"column":0},"generated":{"line":1666,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1666,"column":0},"generated":{"line":1667,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1667,"column":0},"generated":{"line":1668,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1668,"column":0},"generated":{"line":1669,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1669,"column":0},"generated":{"line":1670,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1670,"column":0},"generated":{"line":1671,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1671,"column":0},"generated":{"line":1672,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1672,"column":0},"generated":{"line":1673,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1673,"column":0},"generated":{"line":1674,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1674,"column":0},"generated":{"line":1675,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1675,"column":0},"generated":{"line":1676,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1676,"column":0},"generated":{"line":1677,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1677,"column":0},"generated":{"line":1678,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1678,"column":0},"generated":{"line":1679,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1679,"column":0},"generated":{"line":1680,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1680,"column":0},"generated":{"line":1681,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1681,"column":0},"generated":{"line":1682,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1682,"column":0},"generated":{"line":1683,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1683,"column":0},"generated":{"line":1684,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1684,"column":0},"generated":{"line":1685,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1685,"column":0},"generated":{"line":1686,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1686,"column":0},"generated":{"line":1687,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1687,"column":0},"generated":{"line":1688,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1688,"column":0},"generated":{"line":1689,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1689,"column":0},"generated":{"line":1690,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1690,"column":0},"generated":{"line":1691,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1691,"column":0},"generated":{"line":1692,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1692,"column":0},"generated":{"line":1693,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1693,"column":0},"generated":{"line":1694,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1694,"column":0},"generated":{"line":1695,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1695,"column":0},"generated":{"line":1696,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1696,"column":0},"generated":{"line":1697,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1697,"column":0},"generated":{"line":1698,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1698,"column":0},"generated":{"line":1699,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1699,"column":0},"generated":{"line":1700,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1700,"column":0},"generated":{"line":1701,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1701,"column":0},"generated":{"line":1702,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1702,"column":0},"generated":{"line":1703,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1703,"column":0},"generated":{"line":1704,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1704,"column":0},"generated":{"line":1705,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1705,"column":0},"generated":{"line":1706,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1706,"column":0},"generated":{"line":1707,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1707,"column":0},"generated":{"line":1708,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1708,"column":0},"generated":{"line":1709,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1709,"column":0},"generated":{"line":1710,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1710,"column":0},"generated":{"line":1711,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1711,"column":0},"generated":{"line":1712,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1712,"column":0},"generated":{"line":1713,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1713,"column":0},"generated":{"line":1714,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1714,"column":0},"generated":{"line":1715,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1715,"column":0},"generated":{"line":1716,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1716,"column":0},"generated":{"line":1717,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1717,"column":0},"generated":{"line":1718,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1718,"column":0},"generated":{"line":1719,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1719,"column":0},"generated":{"line":1720,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1720,"column":0},"generated":{"line":1721,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1721,"column":0},"generated":{"line":1722,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1722,"column":0},"generated":{"line":1723,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1723,"column":0},"generated":{"line":1724,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1724,"column":0},"generated":{"line":1725,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1725,"column":0},"generated":{"line":1726,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1726,"column":0},"generated":{"line":1727,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1727,"column":0},"generated":{"line":1728,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1728,"column":0},"generated":{"line":1729,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1729,"column":0},"generated":{"line":1730,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1730,"column":0},"generated":{"line":1731,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1731,"column":0},"generated":{"line":1732,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1732,"column":0},"generated":{"line":1733,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1733,"column":0},"generated":{"line":1734,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1734,"column":0},"generated":{"line":1735,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1735,"column":0},"generated":{"line":1736,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1736,"column":0},"generated":{"line":1737,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1737,"column":0},"generated":{"line":1738,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1738,"column":0},"generated":{"line":1739,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1739,"column":0},"generated":{"line":1740,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1740,"column":0},"generated":{"line":1741,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1741,"column":0},"generated":{"line":1742,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1742,"column":0},"generated":{"line":1743,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1743,"column":0},"generated":{"line":1744,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1744,"column":0},"generated":{"line":1745,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1745,"column":0},"generated":{"line":1746,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1746,"column":0},"generated":{"line":1747,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1747,"column":0},"generated":{"line":1748,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1748,"column":0},"generated":{"line":1749,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1749,"column":0},"generated":{"line":1750,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1750,"column":0},"generated":{"line":1751,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1751,"column":0},"generated":{"line":1752,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1752,"column":0},"generated":{"line":1753,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1753,"column":0},"generated":{"line":1754,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1754,"column":0},"generated":{"line":1755,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1755,"column":0},"generated":{"line":1756,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1756,"column":0},"generated":{"line":1757,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1757,"column":0},"generated":{"line":1758,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1758,"column":0},"generated":{"line":1759,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1759,"column":0},"generated":{"line":1760,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1760,"column":0},"generated":{"line":1761,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1761,"column":0},"generated":{"line":1762,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1762,"column":0},"generated":{"line":1763,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1763,"column":0},"generated":{"line":1764,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1764,"column":0},"generated":{"line":1765,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1765,"column":0},"generated":{"line":1766,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1766,"column":0},"generated":{"line":1767,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1767,"column":0},"generated":{"line":1768,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1768,"column":0},"generated":{"line":1769,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1769,"column":0},"generated":{"line":1770,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1770,"column":0},"generated":{"line":1771,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1771,"column":0},"generated":{"line":1772,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1772,"column":0},"generated":{"line":1773,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1773,"column":0},"generated":{"line":1774,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1774,"column":0},"generated":{"line":1775,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1775,"column":0},"generated":{"line":1776,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1776,"column":0},"generated":{"line":1777,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1777,"column":0},"generated":{"line":1778,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1778,"column":0},"generated":{"line":1779,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1779,"column":0},"generated":{"line":1780,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1780,"column":0},"generated":{"line":1781,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1781,"column":0},"generated":{"line":1782,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1782,"column":0},"generated":{"line":1783,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1783,"column":0},"generated":{"line":1784,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1784,"column":0},"generated":{"line":1785,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1785,"column":0},"generated":{"line":1786,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1786,"column":0},"generated":{"line":1787,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1787,"column":0},"generated":{"line":1788,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1788,"column":0},"generated":{"line":1789,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1789,"column":0},"generated":{"line":1790,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1790,"column":0},"generated":{"line":1791,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1791,"column":0},"generated":{"line":1792,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1792,"column":0},"generated":{"line":1793,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1793,"column":0},"generated":{"line":1794,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1794,"column":0},"generated":{"line":1795,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1795,"column":0},"generated":{"line":1796,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1796,"column":0},"generated":{"line":1797,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1797,"column":0},"generated":{"line":1798,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1798,"column":0},"generated":{"line":1799,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1799,"column":0},"generated":{"line":1800,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1800,"column":0},"generated":{"line":1801,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1801,"column":0},"generated":{"line":1802,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1802,"column":0},"generated":{"line":1803,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1803,"column":0},"generated":{"line":1804,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1804,"column":0},"generated":{"line":1805,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1805,"column":0},"generated":{"line":1806,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1806,"column":0},"generated":{"line":1807,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1807,"column":0},"generated":{"line":1808,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1808,"column":0},"generated":{"line":1809,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1809,"column":0},"generated":{"line":1810,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1810,"column":0},"generated":{"line":1811,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1811,"column":0},"generated":{"line":1812,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1812,"column":0},"generated":{"line":1813,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1813,"column":0},"generated":{"line":1814,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1814,"column":0},"generated":{"line":1815,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1815,"column":0},"generated":{"line":1816,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1816,"column":0},"generated":{"line":1817,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1817,"column":0},"generated":{"line":1818,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1818,"column":0},"generated":{"line":1819,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1819,"column":0},"generated":{"line":1820,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1820,"column":0},"generated":{"line":1821,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1821,"column":0},"generated":{"line":1822,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1822,"column":0},"generated":{"line":1823,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1823,"column":0},"generated":{"line":1824,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1824,"column":0},"generated":{"line":1825,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1825,"column":0},"generated":{"line":1826,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1826,"column":0},"generated":{"line":1827,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1827,"column":0},"generated":{"line":1828,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1828,"column":0},"generated":{"line":1829,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1829,"column":0},"generated":{"line":1830,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1830,"column":0},"generated":{"line":1831,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1831,"column":0},"generated":{"line":1832,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1832,"column":0},"generated":{"line":1833,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1833,"column":0},"generated":{"line":1834,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1834,"column":0},"generated":{"line":1835,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1835,"column":0},"generated":{"line":1836,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1836,"column":0},"generated":{"line":1837,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1837,"column":0},"generated":{"line":1838,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1838,"column":0},"generated":{"line":1839,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1839,"column":0},"generated":{"line":1840,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1840,"column":0},"generated":{"line":1841,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1841,"column":0},"generated":{"line":1842,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1842,"column":0},"generated":{"line":1843,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1843,"column":0},"generated":{"line":1844,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1844,"column":0},"generated":{"line":1845,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1845,"column":0},"generated":{"line":1846,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1846,"column":0},"generated":{"line":1847,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1847,"column":0},"generated":{"line":1848,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1848,"column":0},"generated":{"line":1849,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1849,"column":0},"generated":{"line":1850,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1850,"column":0},"generated":{"line":1851,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1851,"column":0},"generated":{"line":1852,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1852,"column":0},"generated":{"line":1853,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1853,"column":0},"generated":{"line":1854,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1854,"column":0},"generated":{"line":1855,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1855,"column":0},"generated":{"line":1856,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1856,"column":0},"generated":{"line":1857,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1857,"column":0},"generated":{"line":1858,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1858,"column":0},"generated":{"line":1859,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1859,"column":0},"generated":{"line":1860,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1860,"column":0},"generated":{"line":1861,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1861,"column":0},"generated":{"line":1862,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1862,"column":0},"generated":{"line":1863,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1863,"column":0},"generated":{"line":1864,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1864,"column":0},"generated":{"line":1865,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1865,"column":0},"generated":{"line":1866,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1866,"column":0},"generated":{"line":1867,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1867,"column":0},"generated":{"line":1868,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1868,"column":0},"generated":{"line":1869,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1869,"column":0},"generated":{"line":1870,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1870,"column":0},"generated":{"line":1871,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1871,"column":0},"generated":{"line":1872,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1872,"column":0},"generated":{"line":1873,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1873,"column":0},"generated":{"line":1874,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1874,"column":0},"generated":{"line":1875,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1875,"column":0},"generated":{"line":1876,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1876,"column":0},"generated":{"line":1877,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1877,"column":0},"generated":{"line":1878,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1878,"column":0},"generated":{"line":1879,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1879,"column":0},"generated":{"line":1880,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1880,"column":0},"generated":{"line":1881,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1881,"column":0},"generated":{"line":1882,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1882,"column":0},"generated":{"line":1883,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1883,"column":0},"generated":{"line":1884,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1884,"column":0},"generated":{"line":1885,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1885,"column":0},"generated":{"line":1886,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1886,"column":0},"generated":{"line":1887,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1887,"column":0},"generated":{"line":1888,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1888,"column":0},"generated":{"line":1889,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1889,"column":0},"generated":{"line":1890,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1890,"column":0},"generated":{"line":1891,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1891,"column":0},"generated":{"line":1892,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1892,"column":0},"generated":{"line":1893,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1893,"column":0},"generated":{"line":1894,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1894,"column":0},"generated":{"line":1895,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1895,"column":0},"generated":{"line":1896,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1896,"column":0},"generated":{"line":1897,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1897,"column":0},"generated":{"line":1898,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1898,"column":0},"generated":{"line":1899,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1899,"column":0},"generated":{"line":1900,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1900,"column":0},"generated":{"line":1901,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1901,"column":0},"generated":{"line":1902,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1902,"column":0},"generated":{"line":1903,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1903,"column":0},"generated":{"line":1904,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1904,"column":0},"generated":{"line":1905,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1905,"column":0},"generated":{"line":1906,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1906,"column":0},"generated":{"line":1907,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1907,"column":0},"generated":{"line":1908,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1908,"column":0},"generated":{"line":1909,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1909,"column":0},"generated":{"line":1910,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1910,"column":0},"generated":{"line":1911,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1911,"column":0},"generated":{"line":1912,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1912,"column":0},"generated":{"line":1913,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1913,"column":0},"generated":{"line":1914,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1914,"column":0},"generated":{"line":1915,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1915,"column":0},"generated":{"line":1916,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1916,"column":0},"generated":{"line":1917,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1917,"column":0},"generated":{"line":1918,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1918,"column":0},"generated":{"line":1919,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1919,"column":0},"generated":{"line":1920,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1920,"column":0},"generated":{"line":1921,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1921,"column":0},"generated":{"line":1922,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1922,"column":0},"generated":{"line":1923,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1923,"column":0},"generated":{"line":1924,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1924,"column":0},"generated":{"line":1925,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1925,"column":0},"generated":{"line":1926,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1926,"column":0},"generated":{"line":1927,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1927,"column":0},"generated":{"line":1928,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1928,"column":0},"generated":{"line":1929,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1929,"column":0},"generated":{"line":1930,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1930,"column":0},"generated":{"line":1931,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1931,"column":0},"generated":{"line":1932,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1932,"column":0},"generated":{"line":1933,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1933,"column":0},"generated":{"line":1934,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1934,"column":0},"generated":{"line":1935,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1935,"column":0},"generated":{"line":1936,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1936,"column":0},"generated":{"line":1937,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1937,"column":0},"generated":{"line":1938,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1938,"column":0},"generated":{"line":1939,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1939,"column":0},"generated":{"line":1940,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1940,"column":0},"generated":{"line":1941,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1941,"column":0},"generated":{"line":1942,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1942,"column":0},"generated":{"line":1943,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1943,"column":0},"generated":{"line":1944,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1944,"column":0},"generated":{"line":1945,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1945,"column":0},"generated":{"line":1946,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1946,"column":0},"generated":{"line":1947,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1947,"column":0},"generated":{"line":1948,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1948,"column":0},"generated":{"line":1949,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1949,"column":0},"generated":{"line":1950,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1950,"column":0},"generated":{"line":1951,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1951,"column":0},"generated":{"line":1952,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1952,"column":0},"generated":{"line":1953,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1953,"column":0},"generated":{"line":1954,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1954,"column":0},"generated":{"line":1955,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1955,"column":0},"generated":{"line":1956,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1956,"column":0},"generated":{"line":1957,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1957,"column":0},"generated":{"line":1958,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1958,"column":0},"generated":{"line":1959,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1959,"column":0},"generated":{"line":1960,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1960,"column":0},"generated":{"line":1961,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1961,"column":0},"generated":{"line":1962,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1962,"column":0},"generated":{"line":1963,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1963,"column":0},"generated":{"line":1964,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1964,"column":0},"generated":{"line":1965,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1965,"column":0},"generated":{"line":1966,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1966,"column":0},"generated":{"line":1967,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1967,"column":0},"generated":{"line":1968,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1968,"column":0},"generated":{"line":1969,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1969,"column":0},"generated":{"line":1970,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1970,"column":0},"generated":{"line":1971,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1971,"column":0},"generated":{"line":1972,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1972,"column":0},"generated":{"line":1973,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1973,"column":0},"generated":{"line":1974,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1974,"column":0},"generated":{"line":1975,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1975,"column":0},"generated":{"line":1976,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1976,"column":0},"generated":{"line":1977,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1977,"column":0},"generated":{"line":1978,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1978,"column":0},"generated":{"line":1979,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1979,"column":0},"generated":{"line":1980,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1980,"column":0},"generated":{"line":1981,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1981,"column":0},"generated":{"line":1982,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1982,"column":0},"generated":{"line":1983,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1983,"column":0},"generated":{"line":1984,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1984,"column":0},"generated":{"line":1985,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1985,"column":0},"generated":{"line":1986,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1986,"column":0},"generated":{"line":1987,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1987,"column":0},"generated":{"line":1988,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1988,"column":0},"generated":{"line":1989,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1989,"column":0},"generated":{"line":1990,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1990,"column":0},"generated":{"line":1991,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1991,"column":0},"generated":{"line":1992,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1992,"column":0},"generated":{"line":1993,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1993,"column":0},"generated":{"line":1994,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1994,"column":0},"generated":{"line":1995,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1995,"column":0},"generated":{"line":1996,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1996,"column":0},"generated":{"line":1997,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1997,"column":0},"generated":{"line":1998,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1998,"column":0},"generated":{"line":1999,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":1999,"column":0},"generated":{"line":2000,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2000,"column":0},"generated":{"line":2001,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2001,"column":0},"generated":{"line":2002,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2002,"column":0},"generated":{"line":2003,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2003,"column":0},"generated":{"line":2004,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2004,"column":0},"generated":{"line":2005,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2005,"column":0},"generated":{"line":2006,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2006,"column":0},"generated":{"line":2007,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2007,"column":0},"generated":{"line":2008,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2008,"column":0},"generated":{"line":2009,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2009,"column":0},"generated":{"line":2010,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2010,"column":0},"generated":{"line":2011,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2011,"column":0},"generated":{"line":2012,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2012,"column":0},"generated":{"line":2013,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2013,"column":0},"generated":{"line":2014,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2014,"column":0},"generated":{"line":2015,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2015,"column":0},"generated":{"line":2016,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2016,"column":0},"generated":{"line":2017,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2017,"column":0},"generated":{"line":2018,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2018,"column":0},"generated":{"line":2019,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2019,"column":0},"generated":{"line":2020,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2020,"column":0},"generated":{"line":2021,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2021,"column":0},"generated":{"line":2022,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2022,"column":0},"generated":{"line":2023,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2023,"column":0},"generated":{"line":2024,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2024,"column":0},"generated":{"line":2025,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2025,"column":0},"generated":{"line":2026,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2026,"column":0},"generated":{"line":2027,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2027,"column":0},"generated":{"line":2028,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2028,"column":0},"generated":{"line":2029,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2029,"column":0},"generated":{"line":2030,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2030,"column":0},"generated":{"line":2031,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2031,"column":0},"generated":{"line":2032,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2032,"column":0},"generated":{"line":2033,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2033,"column":0},"generated":{"line":2034,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2034,"column":0},"generated":{"line":2035,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2035,"column":0},"generated":{"line":2036,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2036,"column":0},"generated":{"line":2037,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2037,"column":0},"generated":{"line":2038,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2038,"column":0},"generated":{"line":2039,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2039,"column":0},"generated":{"line":2040,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2040,"column":0},"generated":{"line":2041,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2041,"column":0},"generated":{"line":2042,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2042,"column":0},"generated":{"line":2043,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2043,"column":0},"generated":{"line":2044,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2044,"column":0},"generated":{"line":2045,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2045,"column":0},"generated":{"line":2046,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2046,"column":0},"generated":{"line":2047,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2047,"column":0},"generated":{"line":2048,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2048,"column":0},"generated":{"line":2049,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2049,"column":0},"generated":{"line":2050,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2050,"column":0},"generated":{"line":2051,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2051,"column":0},"generated":{"line":2052,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2052,"column":0},"generated":{"line":2053,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2053,"column":0},"generated":{"line":2054,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2054,"column":0},"generated":{"line":2055,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2055,"column":0},"generated":{"line":2056,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2056,"column":0},"generated":{"line":2057,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2057,"column":0},"generated":{"line":2058,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2058,"column":0},"generated":{"line":2059,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2059,"column":0},"generated":{"line":2060,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2060,"column":0},"generated":{"line":2061,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2061,"column":0},"generated":{"line":2062,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2062,"column":0},"generated":{"line":2063,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2063,"column":0},"generated":{"line":2064,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2064,"column":0},"generated":{"line":2065,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2065,"column":0},"generated":{"line":2066,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2066,"column":0},"generated":{"line":2067,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2067,"column":0},"generated":{"line":2068,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2068,"column":0},"generated":{"line":2069,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2069,"column":0},"generated":{"line":2070,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2070,"column":0},"generated":{"line":2071,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2071,"column":0},"generated":{"line":2072,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2072,"column":0},"generated":{"line":2073,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2073,"column":0},"generated":{"line":2074,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2074,"column":0},"generated":{"line":2075,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2075,"column":0},"generated":{"line":2076,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2076,"column":0},"generated":{"line":2077,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2077,"column":0},"generated":{"line":2078,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2078,"column":0},"generated":{"line":2079,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2079,"column":0},"generated":{"line":2080,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2080,"column":0},"generated":{"line":2081,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2081,"column":0},"generated":{"line":2082,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2082,"column":0},"generated":{"line":2083,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2083,"column":0},"generated":{"line":2084,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2084,"column":0},"generated":{"line":2085,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2085,"column":0},"generated":{"line":2086,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2086,"column":0},"generated":{"line":2087,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2087,"column":0},"generated":{"line":2088,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2088,"column":0},"generated":{"line":2089,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2089,"column":0},"generated":{"line":2090,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2090,"column":0},"generated":{"line":2091,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2091,"column":0},"generated":{"line":2092,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2092,"column":0},"generated":{"line":2093,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2093,"column":0},"generated":{"line":2094,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2094,"column":0},"generated":{"line":2095,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2095,"column":0},"generated":{"line":2096,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2096,"column":0},"generated":{"line":2097,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2097,"column":0},"generated":{"line":2098,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2098,"column":0},"generated":{"line":2099,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2099,"column":0},"generated":{"line":2100,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2100,"column":0},"generated":{"line":2101,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2101,"column":0},"generated":{"line":2102,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2102,"column":0},"generated":{"line":2103,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2103,"column":0},"generated":{"line":2104,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2104,"column":0},"generated":{"line":2105,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2105,"column":0},"generated":{"line":2106,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2106,"column":0},"generated":{"line":2107,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2107,"column":0},"generated":{"line":2108,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2108,"column":0},"generated":{"line":2109,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2109,"column":0},"generated":{"line":2110,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2110,"column":0},"generated":{"line":2111,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2111,"column":0},"generated":{"line":2112,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2112,"column":0},"generated":{"line":2113,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2113,"column":0},"generated":{"line":2114,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2114,"column":0},"generated":{"line":2115,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2115,"column":0},"generated":{"line":2116,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2116,"column":0},"generated":{"line":2117,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2117,"column":0},"generated":{"line":2118,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2118,"column":0},"generated":{"line":2119,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2119,"column":0},"generated":{"line":2120,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2120,"column":0},"generated":{"line":2121,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2121,"column":0},"generated":{"line":2122,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2122,"column":0},"generated":{"line":2123,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2123,"column":0},"generated":{"line":2124,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2124,"column":0},"generated":{"line":2125,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2125,"column":0},"generated":{"line":2126,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2126,"column":0},"generated":{"line":2127,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2127,"column":0},"generated":{"line":2128,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2128,"column":0},"generated":{"line":2129,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2129,"column":0},"generated":{"line":2130,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2130,"column":0},"generated":{"line":2131,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2131,"column":0},"generated":{"line":2132,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2132,"column":0},"generated":{"line":2133,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2133,"column":0},"generated":{"line":2134,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2134,"column":0},"generated":{"line":2135,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2135,"column":0},"generated":{"line":2136,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2136,"column":0},"generated":{"line":2137,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2137,"column":0},"generated":{"line":2138,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2138,"column":0},"generated":{"line":2139,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2139,"column":0},"generated":{"line":2140,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2140,"column":0},"generated":{"line":2141,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2141,"column":0},"generated":{"line":2142,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2142,"column":0},"generated":{"line":2143,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2143,"column":0},"generated":{"line":2144,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2144,"column":0},"generated":{"line":2145,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2145,"column":0},"generated":{"line":2146,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2146,"column":0},"generated":{"line":2147,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2147,"column":0},"generated":{"line":2148,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2148,"column":0},"generated":{"line":2149,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2149,"column":0},"generated":{"line":2150,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2150,"column":0},"generated":{"line":2151,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2151,"column":0},"generated":{"line":2152,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2152,"column":0},"generated":{"line":2153,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2153,"column":0},"generated":{"line":2154,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2154,"column":0},"generated":{"line":2155,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2155,"column":0},"generated":{"line":2156,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2156,"column":0},"generated":{"line":2157,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2157,"column":0},"generated":{"line":2158,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2158,"column":0},"generated":{"line":2159,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2159,"column":0},"generated":{"line":2160,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2160,"column":0},"generated":{"line":2161,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2161,"column":0},"generated":{"line":2162,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2162,"column":0},"generated":{"line":2163,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2163,"column":0},"generated":{"line":2164,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2164,"column":0},"generated":{"line":2165,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2165,"column":0},"generated":{"line":2166,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2166,"column":0},"generated":{"line":2167,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2167,"column":0},"generated":{"line":2168,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2168,"column":0},"generated":{"line":2169,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2169,"column":0},"generated":{"line":2170,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2170,"column":0},"generated":{"line":2171,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2171,"column":0},"generated":{"line":2172,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2172,"column":0},"generated":{"line":2173,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2173,"column":0},"generated":{"line":2174,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2174,"column":0},"generated":{"line":2175,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2175,"column":0},"generated":{"line":2176,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2176,"column":0},"generated":{"line":2177,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2177,"column":0},"generated":{"line":2178,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2178,"column":0},"generated":{"line":2179,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2179,"column":0},"generated":{"line":2180,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2180,"column":0},"generated":{"line":2181,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2181,"column":0},"generated":{"line":2182,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2182,"column":0},"generated":{"line":2183,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2183,"column":0},"generated":{"line":2184,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2184,"column":0},"generated":{"line":2185,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2185,"column":0},"generated":{"line":2186,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2186,"column":0},"generated":{"line":2187,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2187,"column":0},"generated":{"line":2188,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2188,"column":0},"generated":{"line":2189,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2189,"column":0},"generated":{"line":2190,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2190,"column":0},"generated":{"line":2191,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2191,"column":0},"generated":{"line":2192,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2192,"column":0},"generated":{"line":2193,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2193,"column":0},"generated":{"line":2194,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2194,"column":0},"generated":{"line":2195,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2195,"column":0},"generated":{"line":2196,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2196,"column":0},"generated":{"line":2197,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2197,"column":0},"generated":{"line":2198,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2198,"column":0},"generated":{"line":2199,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2199,"column":0},"generated":{"line":2200,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2200,"column":0},"generated":{"line":2201,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2201,"column":0},"generated":{"line":2202,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2202,"column":0},"generated":{"line":2203,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2203,"column":0},"generated":{"line":2204,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2204,"column":0},"generated":{"line":2205,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2205,"column":0},"generated":{"line":2206,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2206,"column":0},"generated":{"line":2207,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2207,"column":0},"generated":{"line":2208,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2208,"column":0},"generated":{"line":2209,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2209,"column":0},"generated":{"line":2210,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2210,"column":0},"generated":{"line":2211,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2211,"column":0},"generated":{"line":2212,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2212,"column":0},"generated":{"line":2213,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2213,"column":0},"generated":{"line":2214,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2214,"column":0},"generated":{"line":2215,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2215,"column":0},"generated":{"line":2216,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2216,"column":0},"generated":{"line":2217,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2217,"column":0},"generated":{"line":2218,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2218,"column":0},"generated":{"line":2219,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2219,"column":0},"generated":{"line":2220,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2220,"column":0},"generated":{"line":2221,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2221,"column":0},"generated":{"line":2222,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2222,"column":0},"generated":{"line":2223,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2223,"column":0},"generated":{"line":2224,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2224,"column":0},"generated":{"line":2225,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2225,"column":0},"generated":{"line":2226,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2226,"column":0},"generated":{"line":2227,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2227,"column":0},"generated":{"line":2228,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2228,"column":0},"generated":{"line":2229,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2229,"column":0},"generated":{"line":2230,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2230,"column":0},"generated":{"line":2231,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2231,"column":0},"generated":{"line":2232,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2232,"column":0},"generated":{"line":2233,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2233,"column":0},"generated":{"line":2234,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2234,"column":0},"generated":{"line":2235,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2235,"column":0},"generated":{"line":2236,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2236,"column":0},"generated":{"line":2237,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2237,"column":0},"generated":{"line":2238,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2238,"column":0},"generated":{"line":2239,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2239,"column":0},"generated":{"line":2240,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2240,"column":0},"generated":{"line":2241,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2241,"column":0},"generated":{"line":2242,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2242,"column":0},"generated":{"line":2243,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2243,"column":0},"generated":{"line":2244,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2244,"column":0},"generated":{"line":2245,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2245,"column":0},"generated":{"line":2246,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2246,"column":0},"generated":{"line":2247,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2247,"column":0},"generated":{"line":2248,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2248,"column":0},"generated":{"line":2249,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2249,"column":0},"generated":{"line":2250,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2250,"column":0},"generated":{"line":2251,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2251,"column":0},"generated":{"line":2252,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2252,"column":0},"generated":{"line":2253,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2253,"column":0},"generated":{"line":2254,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2254,"column":0},"generated":{"line":2255,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2255,"column":0},"generated":{"line":2256,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2256,"column":0},"generated":{"line":2257,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2257,"column":0},"generated":{"line":2258,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2258,"column":0},"generated":{"line":2259,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2259,"column":0},"generated":{"line":2260,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2260,"column":0},"generated":{"line":2261,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2261,"column":0},"generated":{"line":2262,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2262,"column":0},"generated":{"line":2263,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2263,"column":0},"generated":{"line":2264,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2264,"column":0},"generated":{"line":2265,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2265,"column":0},"generated":{"line":2266,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2266,"column":0},"generated":{"line":2267,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2267,"column":0},"generated":{"line":2268,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2268,"column":0},"generated":{"line":2269,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2269,"column":0},"generated":{"line":2270,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2270,"column":0},"generated":{"line":2271,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2271,"column":0},"generated":{"line":2272,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2272,"column":0},"generated":{"line":2273,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2273,"column":0},"generated":{"line":2274,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2274,"column":0},"generated":{"line":2275,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2275,"column":0},"generated":{"line":2276,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2276,"column":0},"generated":{"line":2277,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2277,"column":0},"generated":{"line":2278,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2278,"column":0},"generated":{"line":2279,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2279,"column":0},"generated":{"line":2280,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2280,"column":0},"generated":{"line":2281,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2281,"column":0},"generated":{"line":2282,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2282,"column":0},"generated":{"line":2283,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2283,"column":0},"generated":{"line":2284,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2284,"column":0},"generated":{"line":2285,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2285,"column":0},"generated":{"line":2286,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2286,"column":0},"generated":{"line":2287,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2287,"column":0},"generated":{"line":2288,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2288,"column":0},"generated":{"line":2289,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2289,"column":0},"generated":{"line":2290,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2290,"column":0},"generated":{"line":2291,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2291,"column":0},"generated":{"line":2292,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2292,"column":0},"generated":{"line":2293,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2293,"column":0},"generated":{"line":2294,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2294,"column":0},"generated":{"line":2295,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2295,"column":0},"generated":{"line":2296,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2296,"column":0},"generated":{"line":2297,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2297,"column":0},"generated":{"line":2298,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2298,"column":0},"generated":{"line":2299,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2299,"column":0},"generated":{"line":2300,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2300,"column":0},"generated":{"line":2301,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2301,"column":0},"generated":{"line":2302,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2302,"column":0},"generated":{"line":2303,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2303,"column":0},"generated":{"line":2304,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2304,"column":0},"generated":{"line":2305,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2305,"column":0},"generated":{"line":2306,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2306,"column":0},"generated":{"line":2307,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2307,"column":0},"generated":{"line":2308,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2308,"column":0},"generated":{"line":2309,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2309,"column":0},"generated":{"line":2310,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2310,"column":0},"generated":{"line":2311,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2311,"column":0},"generated":{"line":2312,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2312,"column":0},"generated":{"line":2313,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2313,"column":0},"generated":{"line":2314,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2314,"column":0},"generated":{"line":2315,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2315,"column":0},"generated":{"line":2316,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2316,"column":0},"generated":{"line":2317,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2317,"column":0},"generated":{"line":2318,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2318,"column":0},"generated":{"line":2319,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2319,"column":0},"generated":{"line":2320,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2320,"column":0},"generated":{"line":2321,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2321,"column":0},"generated":{"line":2322,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2322,"column":0},"generated":{"line":2323,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2323,"column":0},"generated":{"line":2324,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2324,"column":0},"generated":{"line":2325,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2325,"column":0},"generated":{"line":2326,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2326,"column":0},"generated":{"line":2327,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2327,"column":0},"generated":{"line":2328,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2328,"column":0},"generated":{"line":2329,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2329,"column":0},"generated":{"line":2330,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2330,"column":0},"generated":{"line":2331,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2331,"column":0},"generated":{"line":2332,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2332,"column":0},"generated":{"line":2333,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2333,"column":0},"generated":{"line":2334,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2334,"column":0},"generated":{"line":2335,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2335,"column":0},"generated":{"line":2336,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2336,"column":0},"generated":{"line":2337,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2337,"column":0},"generated":{"line":2338,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2338,"column":0},"generated":{"line":2339,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2339,"column":0},"generated":{"line":2340,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2340,"column":0},"generated":{"line":2341,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2341,"column":0},"generated":{"line":2342,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2342,"column":0},"generated":{"line":2343,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2343,"column":0},"generated":{"line":2344,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2344,"column":0},"generated":{"line":2345,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2345,"column":0},"generated":{"line":2346,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2346,"column":0},"generated":{"line":2347,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2347,"column":0},"generated":{"line":2348,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2348,"column":0},"generated":{"line":2349,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2349,"column":0},"generated":{"line":2350,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2350,"column":0},"generated":{"line":2351,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2351,"column":0},"generated":{"line":2352,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2352,"column":0},"generated":{"line":2353,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2353,"column":0},"generated":{"line":2354,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2354,"column":0},"generated":{"line":2355,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2355,"column":0},"generated":{"line":2356,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2356,"column":0},"generated":{"line":2357,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2357,"column":0},"generated":{"line":2358,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2358,"column":0},"generated":{"line":2359,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2359,"column":0},"generated":{"line":2360,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2360,"column":0},"generated":{"line":2361,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2361,"column":0},"generated":{"line":2362,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2362,"column":0},"generated":{"line":2363,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2363,"column":0},"generated":{"line":2364,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2364,"column":0},"generated":{"line":2365,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2365,"column":0},"generated":{"line":2366,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2366,"column":0},"generated":{"line":2367,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2367,"column":0},"generated":{"line":2368,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2368,"column":0},"generated":{"line":2369,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2369,"column":0},"generated":{"line":2370,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2370,"column":0},"generated":{"line":2371,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2371,"column":0},"generated":{"line":2372,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2372,"column":0},"generated":{"line":2373,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2373,"column":0},"generated":{"line":2374,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2374,"column":0},"generated":{"line":2375,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2375,"column":0},"generated":{"line":2376,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2376,"column":0},"generated":{"line":2377,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2377,"column":0},"generated":{"line":2378,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2378,"column":0},"generated":{"line":2379,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2379,"column":0},"generated":{"line":2380,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2380,"column":0},"generated":{"line":2381,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2381,"column":0},"generated":{"line":2382,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2382,"column":0},"generated":{"line":2383,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2383,"column":0},"generated":{"line":2384,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2384,"column":0},"generated":{"line":2385,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2385,"column":0},"generated":{"line":2386,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2386,"column":0},"generated":{"line":2387,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2387,"column":0},"generated":{"line":2388,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2388,"column":0},"generated":{"line":2389,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2389,"column":0},"generated":{"line":2390,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2390,"column":0},"generated":{"line":2391,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2391,"column":0},"generated":{"line":2392,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2392,"column":0},"generated":{"line":2393,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2393,"column":0},"generated":{"line":2394,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2394,"column":0},"generated":{"line":2395,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2395,"column":0},"generated":{"line":2396,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2396,"column":0},"generated":{"line":2397,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2397,"column":0},"generated":{"line":2398,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2398,"column":0},"generated":{"line":2399,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2399,"column":0},"generated":{"line":2400,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2400,"column":0},"generated":{"line":2401,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2401,"column":0},"generated":{"line":2402,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2402,"column":0},"generated":{"line":2403,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2403,"column":0},"generated":{"line":2404,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2404,"column":0},"generated":{"line":2405,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2405,"column":0},"generated":{"line":2406,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2406,"column":0},"generated":{"line":2407,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2407,"column":0},"generated":{"line":2408,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2408,"column":0},"generated":{"line":2409,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2409,"column":0},"generated":{"line":2410,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2410,"column":0},"generated":{"line":2411,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2411,"column":0},"generated":{"line":2412,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2412,"column":0},"generated":{"line":2413,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2413,"column":0},"generated":{"line":2414,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2414,"column":0},"generated":{"line":2415,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2415,"column":0},"generated":{"line":2416,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2416,"column":0},"generated":{"line":2417,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2417,"column":0},"generated":{"line":2418,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2418,"column":0},"generated":{"line":2419,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2419,"column":0},"generated":{"line":2420,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2420,"column":0},"generated":{"line":2421,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2421,"column":0},"generated":{"line":2422,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2422,"column":0},"generated":{"line":2423,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2423,"column":0},"generated":{"line":2424,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2424,"column":0},"generated":{"line":2425,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2425,"column":0},"generated":{"line":2426,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2426,"column":0},"generated":{"line":2427,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2427,"column":0},"generated":{"line":2428,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2428,"column":0},"generated":{"line":2429,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2429,"column":0},"generated":{"line":2430,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2430,"column":0},"generated":{"line":2431,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2431,"column":0},"generated":{"line":2432,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2432,"column":0},"generated":{"line":2433,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2433,"column":0},"generated":{"line":2434,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2434,"column":0},"generated":{"line":2435,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2435,"column":0},"generated":{"line":2436,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2436,"column":0},"generated":{"line":2437,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2437,"column":0},"generated":{"line":2438,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2438,"column":0},"generated":{"line":2439,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2439,"column":0},"generated":{"line":2440,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2440,"column":0},"generated":{"line":2441,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2441,"column":0},"generated":{"line":2442,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2442,"column":0},"generated":{"line":2443,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2443,"column":0},"generated":{"line":2444,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2444,"column":0},"generated":{"line":2445,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2445,"column":0},"generated":{"line":2446,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2446,"column":0},"generated":{"line":2447,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2447,"column":0},"generated":{"line":2448,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2448,"column":0},"generated":{"line":2449,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2449,"column":0},"generated":{"line":2450,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2450,"column":0},"generated":{"line":2451,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2451,"column":0},"generated":{"line":2452,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2452,"column":0},"generated":{"line":2453,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2453,"column":0},"generated":{"line":2454,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2454,"column":0},"generated":{"line":2455,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2455,"column":0},"generated":{"line":2456,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2456,"column":0},"generated":{"line":2457,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2457,"column":0},"generated":{"line":2458,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2458,"column":0},"generated":{"line":2459,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2459,"column":0},"generated":{"line":2460,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2460,"column":0},"generated":{"line":2461,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2461,"column":0},"generated":{"line":2462,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2462,"column":0},"generated":{"line":2463,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2463,"column":0},"generated":{"line":2464,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2464,"column":0},"generated":{"line":2465,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2465,"column":0},"generated":{"line":2466,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2466,"column":0},"generated":{"line":2467,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2467,"column":0},"generated":{"line":2468,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2468,"column":0},"generated":{"line":2469,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2469,"column":0},"generated":{"line":2470,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2470,"column":0},"generated":{"line":2471,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2471,"column":0},"generated":{"line":2472,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2472,"column":0},"generated":{"line":2473,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2473,"column":0},"generated":{"line":2474,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2474,"column":0},"generated":{"line":2475,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2475,"column":0},"generated":{"line":2476,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2476,"column":0},"generated":{"line":2477,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2477,"column":0},"generated":{"line":2478,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2478,"column":0},"generated":{"line":2479,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2479,"column":0},"generated":{"line":2480,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2480,"column":0},"generated":{"line":2481,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2481,"column":0},"generated":{"line":2482,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2482,"column":0},"generated":{"line":2483,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2483,"column":0},"generated":{"line":2484,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2484,"column":0},"generated":{"line":2485,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2485,"column":0},"generated":{"line":2486,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2486,"column":0},"generated":{"line":2487,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2487,"column":0},"generated":{"line":2488,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2488,"column":0},"generated":{"line":2489,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2489,"column":0},"generated":{"line":2490,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2490,"column":0},"generated":{"line":2491,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2491,"column":0},"generated":{"line":2492,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2492,"column":0},"generated":{"line":2493,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2493,"column":0},"generated":{"line":2494,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2494,"column":0},"generated":{"line":2495,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2495,"column":0},"generated":{"line":2496,"column":0}},{"source":"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js","original":{"line":2496,"column":0},"generated":{"line":2497,"column":0}}],"sources":{"../node_modules/jsx-transpiler/node_modules/acorn-jsx/acorn.js":"// Acorn is a tiny, fast JavaScript parser written in JavaScript.\r\n//\r\n// Acorn was written by Marijn Haverbeke and released under an MIT\r\n// license. The Unicode regexps (for identifiers and whitespace) were\r\n// taken from [Esprima](http://esprima.org) by Ariya Hidayat.\r\n//\r\n// Git repositories for Acorn are available at\r\n//\r\n//     http://marijnhaverbeke.nl/git/acorn\r\n//     https://github.com/marijnh/acorn.git\r\n//\r\n// Please use the [github bug tracker][ghbt] to report issues.\r\n//\r\n// [ghbt]: https://github.com/marijnh/acorn/issues\r\n//\r\n// This file defines the main parser interface. The library also comes\r\n// with a [error-tolerant parser][dammit] and an\r\n// [abstract syntax tree walker][walk], defined in other files.\r\n//\r\n// [dammit]: acorn_loose.js\r\n// [walk]: util/walk.js\r\n\r\n(function(root, mod) {\r\n  if (typeof exports == \"object\" && typeof module == \"object\") return mod(exports); // CommonJS\r\n  if (typeof define == \"function\" && define.amd) return define([\"exports\"], mod); // AMD\r\n  mod(root.acorn || (root.acorn = {})); // Plain browser env\r\n})(this, function(exports) {\r\n  \"use strict\";\r\n\r\n  exports.version = \"0.6.1\";\r\n\r\n  // The main exported interface (under `self.acorn` when in the\r\n  // browser) is a `parse` function that takes a code string and\r\n  // returns an abstract syntax tree as specified by [Mozilla parser\r\n  // API][api], with the caveat that the SpiderMonkey-specific syntax\r\n  // (`let`, `yield`, inline XML, etc) is not recognized.\r\n  //\r\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\r\n\r\n  var options, input, inputLen, sourceFile;\r\n\r\n  exports.parse = function(inpt, opts) {\r\n    input = String(inpt); inputLen = input.length;\r\n    setOptions(opts);\r\n    initTokenState();\r\n    return parseTopLevel(options.program);\r\n  };\r\n\r\n  // A second optional argument can be given to further configure\r\n  // the parser process. These options are recognized:\r\n\r\n  var defaultOptions = exports.defaultOptions = {\r\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must\r\n    // be either 3, or 5, or 6. This influences support for strict\r\n    // mode, the set of reserved words, support for getters and\r\n    // setters and other features. ES6 support is only partial.\r\n    ecmaVersion: 5,\r\n    // Turn on `strictSemicolons` to prevent the parser from doing\r\n    // automatic semicolon insertion.\r\n    strictSemicolons: false,\r\n    // When `allowTrailingCommas` is false, the parser will not allow\r\n    // trailing commas in array and object literals.\r\n    allowTrailingCommas: true,\r\n    // By default, reserved words are not enforced. Enable\r\n    // `forbidReserved` to enforce them. When this option has the\r\n    // value \"everywhere\", reserved words and keywords can also not be\r\n    // used as property names.\r\n    forbidReserved: false,\r\n    // When enabled, a return at the top level is not considered an\r\n    // error.\r\n    allowReturnOutsideFunction: false,\r\n    // When `locations` is on, `loc` properties holding objects with\r\n    // `start` and `end` properties in `{line, column}` form (with\r\n    // line being 1-based and column 0-based) will be attached to the\r\n    // nodes.\r\n    locations: false,\r\n    // A function can be passed as `onComment` option, which will\r\n    // cause Acorn to call that function with `(block, text, start,\r\n    // end)` parameters whenever a comment is skipped. `block` is a\r\n    // boolean indicating whether this is a block (`/* */`) comment,\r\n    // `text` is the content of the comment, and `start` and `end` are\r\n    // character offsets that denote the start and end of the comment.\r\n    // When the `locations` option is on, two more parameters are\r\n    // passed, the full `{line, column}` locations of the start and\r\n    // end of the comments. Note that you are not allowed to call the\r\n    // parser from the callbackâ€”that will corrupt its internal state.\r\n    onComment: null,\r\n    // Nodes have their start and end characters offsets recorded in\r\n    // `start` and `end` properties (directly on the node, rather than\r\n    // the `loc` object, which holds line/column data. To also add a\r\n    // [semi-standardized][range] `range` property holding a `[start,\r\n    // end]` array with the same numbers, set the `ranges` option to\r\n    // `true`.\r\n    //\r\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\r\n    ranges: false,\r\n    // It is possible to parse multiple files into a single AST by\r\n    // passing the tree produced by parsing the first file as\r\n    // `program` option in subsequent parses. This will add the\r\n    // toplevel forms of the parsed file to the `Program` (top) node\r\n    // of an existing parse tree.\r\n    program: null,\r\n    // When `locations` is on, you can pass this to record the source\r\n    // file in every node's `loc` object.\r\n    sourceFile: null,\r\n    // This value, if given, is stored in every node, whether\r\n    // `locations` is on or off.\r\n    directSourceFile: null\r\n  };\r\n\r\n  function setOptions(opts) {\r\n    options = opts || {};\r\n    for (var opt in defaultOptions) if (!Object.prototype.hasOwnProperty.call(options, opt))\r\n      options[opt] = defaultOptions[opt];\r\n    sourceFile = options.sourceFile || null;\r\n\r\n    isKeyword = options.ecmaVersion >= 6 ? isEcma6Keyword : isEcma5AndLessKeyword;\r\n  }\r\n\r\n  // The `getLineInfo` function is mostly useful when the\r\n  // `locations` option is off (for performance reasons) and you\r\n  // want to find the line/column position for a given character\r\n  // offset. `input` should be the code string that the offset refers\r\n  // into.\r\n\r\n  var getLineInfo = exports.getLineInfo = function(input, offset) {\r\n    for (var line = 1, cur = 0;;) {\r\n      lineBreak.lastIndex = cur;\r\n      var match = lineBreak.exec(input);\r\n      if (match && match.index < offset) {\r\n        ++line;\r\n        cur = match.index + match[0].length;\r\n      } else break;\r\n    }\r\n    return {line: line, column: offset - cur};\r\n  };\r\n\r\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\r\n  // The `tokenize` export provides an interface to the tokenizer.\r\n  // Because the tokenizer is optimized for being efficiently used by\r\n  // the Acorn parser itself, this interface is somewhat crude and not\r\n  // very modular. Performing another parse or call to `tokenize` will\r\n  // reset the internal state, and invalidate existing tokenizers.\r\n\r\n  exports.tokenize = function(inpt, opts) {\r\n    input = String(inpt); inputLen = input.length;\r\n    setOptions(opts);\r\n    initTokenState();\r\n\r\n    var t = {};\r\n    function getToken(forceRegexp) {\r\n      lastEnd = tokEnd;\r\n      readToken(forceRegexp);\r\n      t.start = tokStart; t.end = tokEnd;\r\n      t.startLoc = tokStartLoc; t.endLoc = tokEndLoc;\r\n      t.type = tokType; t.value = tokVal;\r\n      return t;\r\n    }\r\n    getToken.jumpTo = function(pos, reAllowed) {\r\n      tokPos = pos;\r\n      if (options.locations) {\r\n        tokCurLine = 1;\r\n        tokLineStart = lineBreak.lastIndex = 0;\r\n        var match;\r\n        while ((match = lineBreak.exec(input)) && match.index < pos) {\r\n          ++tokCurLine;\r\n          tokLineStart = match.index + match[0].length;\r\n        }\r\n      }\r\n      tokRegexpAllowed = reAllowed;\r\n      skipSpace();\r\n    };\r\n    return getToken;\r\n  };\r\n\r\n  // State is kept in (closure-)global variables. We already saw the\r\n  // `options`, `input`, and `inputLen` variables above.\r\n\r\n  // The current position of the tokenizer in the input.\r\n\r\n  var tokPos;\r\n\r\n  // The start and end offsets of the current token.\r\n\r\n  var tokStart, tokEnd;\r\n\r\n  // When `options.locations` is true, these hold objects\r\n  // containing the tokens start and end line/column pairs.\r\n\r\n  var tokStartLoc, tokEndLoc;\r\n\r\n  // The type and value of the current token. Token types are objects,\r\n  // named by variables against which they can be compared, and\r\n  // holding properties that describe them (indicating, for example,\r\n  // the precedence of an infix operator, and the original name of a\r\n  // keyword token). The kind of value that's held in `tokVal` depends\r\n  // on the type of the token. For literals, it is the literal value,\r\n  // for operators, the operator name, and so on.\r\n\r\n  var tokType, tokVal;\r\n\r\n  // Interal state for the tokenizer. To distinguish between division\r\n  // operators and regular expressions, it remembers whether the last\r\n  // token was one that is allowed to be followed by an expression.\r\n  // (If it is, a slash is probably a regexp, if it isn't it's a\r\n  // division operator. See the `parseStatement` function for a\r\n  // caveat.)\r\n\r\n  var tokRegexpAllowed;\r\n\r\n  // When `options.locations` is true, these are used to keep\r\n  // track of the current line, and know when a new line has been\r\n  // entered.\r\n\r\n  var tokCurLine, tokLineStart;\r\n\r\n  // These store the position of the previous token, which is useful\r\n  // when finishing a node and assigning its `end` position.\r\n\r\n  var lastStart, lastEnd, lastEndLoc;\r\n\r\n  // This is the parser's state. `inFunction` is used to reject\r\n  // `return` statements outside of functions, `labels` to verify that\r\n  // `break` and `continue` have somewhere to jump to, and `strict`\r\n  // indicates whether strict mode is on.\r\n\r\n  var inFunction, labels, strict, inXJSChild, inXJSTag;\r\n\r\n  // This function is used to raise exceptions on parse errors. It\r\n  // takes an offset integer (into the current `input`) to indicate\r\n  // the location of the error, attaches the position to the end\r\n  // of the error message, and then raises a `SyntaxError` with that\r\n  // message.\r\n\r\n  function raise(pos, message) {\r\n    var loc = getLineInfo(input, pos);\r\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\r\n    var err = new SyntaxError(message);\r\n    err.pos = pos; err.loc = loc; err.raisedAt = tokPos;\r\n    throw err;\r\n  }\r\n\r\n  // Reused empty array added for node fields that are always empty.\r\n\r\n  var empty = [];\r\n\r\n  // ## Token types\r\n\r\n  // The assignment of fine-grained, information-carrying type objects\r\n  // allows the tokenizer to store the information it has about a\r\n  // token in a way that is very cheap for the parser to look up.\r\n\r\n  // All token type variables start with an underscore, to make them\r\n  // easy to recognize.\r\n\r\n  // These are the general types. The `type` property is only used to\r\n  // make them recognizeable when debugging.\r\n\r\n  var _num = {type: \"num\"}, _regexp = {type: \"regexp\"}, _string = {type: \"string\"};\r\n  var _name = {type: \"name\"}, _eof = {type: \"eof\"};\r\n\r\n  // These are JSX-specific token types\r\n\r\n  var _xjsName = {type: \"xjsName\"}, _xjsText = {type: \"xjsText\"};\r\n\r\n  // Keyword tokens. The `keyword` property (also used in keyword-like\r\n  // operators) indicates that the token originated from an\r\n  // identifier-like word, which is used when parsing property names.\r\n  //\r\n  // The `beforeExpr` property is used to disambiguate between regular\r\n  // expressions and divisions. It is set on all token types that can\r\n  // be followed by an expression (thus, a slash after them would be a\r\n  // regular expression).\r\n  //\r\n  // `isLoop` marks a keyword as starting a loop, which is important\r\n  // to know when parsing a label, in order to allow or disallow\r\n  // continue jumps to that label.\r\n\r\n  var _break = {keyword: \"break\"}, _case = {keyword: \"case\", beforeExpr: true}, _catch = {keyword: \"catch\"};\r\n  var _continue = {keyword: \"continue\"}, _debugger = {keyword: \"debugger\"}, _default = {keyword: \"default\"};\r\n  var _do = {keyword: \"do\", isLoop: true}, _else = {keyword: \"else\", beforeExpr: true};\r\n  var _finally = {keyword: \"finally\"}, _for = {keyword: \"for\", isLoop: true}, _function = {keyword: \"function\"};\r\n  var _if = {keyword: \"if\"}, _return = {keyword: \"return\", beforeExpr: true}, _switch = {keyword: \"switch\"};\r\n  var _throw = {keyword: \"throw\", beforeExpr: true}, _try = {keyword: \"try\"}, _var = {keyword: \"var\"};\r\n  var _let = {keyword: \"let\"}, _const = {keyword: \"const\"};\r\n  var _while = {keyword: \"while\", isLoop: true}, _with = {keyword: \"with\"}, _new = {keyword: \"new\", beforeExpr: true};\r\n  var _this = {keyword: \"this\"};\r\n\r\n  // The keywords that denote values.\r\n\r\n  var _null = {keyword: \"null\", atomValue: null}, _true = {keyword: \"true\", atomValue: true};\r\n  var _false = {keyword: \"false\", atomValue: false};\r\n\r\n  // Some keywords are treated as regular operators. `in` sometimes\r\n  // (when parsing `for`) needs to be tested against specifically, so\r\n  // we assign a variable name to it for quick comparing.\r\n\r\n  var _in = {keyword: \"in\", binop: 7, beforeExpr: true};\r\n\r\n  // Map keyword names to token types.\r\n\r\n  var keywordTypes = {\"break\": _break, \"case\": _case, \"catch\": _catch,\r\n                      \"continue\": _continue, \"debugger\": _debugger, \"default\": _default,\r\n                      \"do\": _do, \"else\": _else, \"finally\": _finally, \"for\": _for,\r\n                      \"function\": _function, \"if\": _if, \"return\": _return, \"switch\": _switch,\r\n                      \"throw\": _throw, \"try\": _try, \"var\": _var, \"let\": _let, \"const\": _const,\r\n                      \"while\": _while, \"with\": _with,\r\n                      \"null\": _null, \"true\": _true, \"false\": _false, \"new\": _new, \"in\": _in,\r\n                      \"instanceof\": {keyword: \"instanceof\", binop: 7, beforeExpr: true}, \"this\": _this,\r\n                      \"typeof\": {keyword: \"typeof\", prefix: true, beforeExpr: true},\r\n                      \"void\": {keyword: \"void\", prefix: true, beforeExpr: true},\r\n                      \"delete\": {keyword: \"delete\", prefix: true, beforeExpr: true}};\r\n\r\n  // Punctuation token types. Again, the `type` property is purely for debugging.\r\n\r\n  var _bracketL = {type: \"[\", beforeExpr: true}, _bracketR = {type: \"]\"}, _braceL = {type: \"{\", beforeExpr: true};\r\n  var _braceR = {type: \"}\"}, _parenL = {type: \"(\", beforeExpr: true}, _parenR = {type: \")\"};\r\n  var _comma = {type: \",\", beforeExpr: true}, _semi = {type: \";\", beforeExpr: true};\r\n  var _colon = {type: \":\", beforeExpr: true}, _dot = {type: \".\"}, _ellipsis = {type: \"...\"}, _question = {type: \"?\", beforeExpr: true};\r\n\r\n  // Operators. These carry several kinds of properties to help the\r\n  // parser use them properly (the presence of these properties is\r\n  // what categorizes them as operators).\r\n  //\r\n  // `binop`, when present, specifies that this operator is a binary\r\n  // operator, and will refer to its precedence.\r\n  //\r\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\r\n  // unary operator. `isUpdate` specifies that the node produced by\r\n  // the operator should be of type UpdateExpression rather than\r\n  // simply UnaryExpression (`++` and `--`).\r\n  //\r\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\r\n  // binary operators with a very low precedence, that should result\r\n  // in AssignmentExpression nodes.\r\n\r\n  var _slash = {binop: 10, beforeExpr: true}, _eq = {isAssign: true, beforeExpr: true};\r\n  var _assign = {isAssign: true, beforeExpr: true};\r\n  var _incDec = {postfix: true, prefix: true, isUpdate: true}, _prefix = {prefix: true, beforeExpr: true};\r\n  var _logicalOR = {binop: 1, beforeExpr: true};\r\n  var _logicalAND = {binop: 2, beforeExpr: true};\r\n  var _bitwiseOR = {binop: 3, beforeExpr: true};\r\n  var _bitwiseXOR = {binop: 4, beforeExpr: true};\r\n  var _bitwiseAND = {binop: 5, beforeExpr: true};\r\n  var _equality = {binop: 6, beforeExpr: true};\r\n  var _relational = {binop: 7, beforeExpr: true};\r\n  var _bitShift = {binop: 8, beforeExpr: true};\r\n  var _plusMin = {binop: 9, prefix: true, beforeExpr: true};\r\n  var _multiplyModulo = {binop: 10, beforeExpr: true};\r\n\r\n  // Provide access to the token types for external users of the\r\n  // tokenizer.\r\n\r\n  exports.tokTypes = {bracketL: _bracketL, bracketR: _bracketR, braceL: _braceL, braceR: _braceR,\r\n                      parenL: _parenL, parenR: _parenR, comma: _comma, semi: _semi, colon: _colon,\r\n                      dot: _dot, ellipsis: _ellipsis, question: _question, slash: _slash, eq: _eq,\r\n                      name: _name, eof: _eof, num: _num, regexp: _regexp, string: _string,\r\n                      xjsName: _xjsName, xjsText: _xjsText};\r\n\r\n  for (var kw in keywordTypes) exports.tokTypes[\"_\" + kw] = keywordTypes[kw];\r\n\r\n  // This is a trick taken from Esprima. It turns out that, on\r\n  // non-Chrome browsers, to check whether a string is in a set, a\r\n  // predicate containing a big ugly `switch` statement is faster than\r\n  // a regular expression, and on Chrome the two are about on par.\r\n  // This function uses `eval` (non-lexical) to produce such a\r\n  // predicate from a space-separated string of words.\r\n  //\r\n  // It starts by sorting the words by length.\r\n\r\n  function makePredicate(words) {\r\n    words = words.split(\" \");\r\n    var f = \"\", cats = [];\r\n    out: for (var i = 0; i < words.length; ++i) {\r\n      for (var j = 0; j < cats.length; ++j)\r\n        if (cats[j][0].length == words[i].length) {\r\n          cats[j].push(words[i]);\r\n          continue out;\r\n        }\r\n      cats.push([words[i]]);\r\n    }\r\n    function compareTo(arr) {\r\n      if (arr.length == 1) return f += \"return str === \" + JSON.stringify(arr[0]) + \";\";\r\n      f += \"switch(str){\";\r\n      for (var i = 0; i < arr.length; ++i) f += \"case \" + JSON.stringify(arr[i]) + \":\";\r\n      f += \"return true}return false;\";\r\n    }\r\n\r\n    // When there are more than three length categories, an outer\r\n    // switch first dispatches on the lengths, to save on comparisons.\r\n\r\n    if (cats.length > 3) {\r\n      cats.sort(function(a, b) {return b.length - a.length;});\r\n      f += \"switch(str.length){\";\r\n      for (var i = 0; i < cats.length; ++i) {\r\n        var cat = cats[i];\r\n        f += \"case \" + cat[0].length + \":\";\r\n        compareTo(cat);\r\n      }\r\n      f += \"}\";\r\n\r\n    // Otherwise, simply generate a flat `switch` statement.\r\n\r\n    } else {\r\n      compareTo(words);\r\n    }\r\n    return new Function(\"str\", f);\r\n  }\r\n\r\n  // The ECMAScript 3 reserved word list.\r\n\r\n  var isReservedWord3 = makePredicate(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\");\r\n\r\n  // ECMAScript 5 reserved words.\r\n\r\n  var isReservedWord5 = makePredicate(\"class enum extends super const export import\");\r\n\r\n  // The additional reserved words in strict mode.\r\n\r\n  var isStrictReservedWord = makePredicate(\"implements interface let package private protected public static yield\");\r\n\r\n  // The forbidden variable names in strict mode.\r\n\r\n  var isStrictBadIdWord = makePredicate(\"eval arguments\");\r\n\r\n  // And the keywords.\r\n\r\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\r\n\r\n  var isEcma5AndLessKeyword = makePredicate(ecma5AndLessKeywords);\r\n\r\n  var isEcma6Keyword = makePredicate(ecma5AndLessKeywords + \" let const\");\r\n\r\n  var isKeyword = isEcma5AndLessKeyword;\r\n\r\n  // ## Character categories\r\n\r\n  // Big ugly regular expressions that match characters in the\r\n  // whitespace, identifier, and identifier-start categories. These\r\n  // are only applied when a character is found to actually have a\r\n  // code point above 128.\r\n\r\n  var nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\r\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\r\n  var nonASCIIidentifierChars = \"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\r\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\r\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\r\n\r\n  // Whether a single character denotes a newline.\r\n\r\n  var newline = /[\\n\\r\\u2028\\u2029]/;\r\n\r\n  // Matches a whole line break (where CRLF is considered a single\r\n  // line break). Used to count lines.\r\n\r\n  var lineBreak = /\\r\\n|[\\n\\r\\u2028\\u2029]/g;\r\n\r\n  // Test whether a given character code starts an identifier.\r\n\r\n  var isIdentifierStart = exports.isIdentifierStart = function(code) {\r\n    if (code < 65) return code === 36;\r\n    if (code < 91) return true;\r\n    if (code < 97) return code === 95;\r\n    if (code < 123)return true;\r\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\r\n  };\r\n\r\n  // Test whether a given character is part of an identifier.\r\n\r\n  var isIdentifierChar = exports.isIdentifierChar = function(code) {\r\n    if (code < 48) return code === 36;\r\n    if (code < 58) return true;\r\n    if (code < 65) return false;\r\n    if (code < 91) return true;\r\n    if (code < 97) return code === 95;\r\n    if (code < 123)return true;\r\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\r\n  };\r\n\r\n  // ## Tokenizer\r\n\r\n  // These are used when `options.locations` is on, for the\r\n  // `tokStartLoc` and `tokEndLoc` properties.\r\n\r\n  function Position() {\r\n    this.line = tokCurLine;\r\n    this.column = tokPos - tokLineStart;\r\n  }\r\n\r\n  // Reset the token state. Used at the start of a parse.\r\n\r\n  function initTokenState() {\r\n    tokCurLine = 1;\r\n    tokPos = tokLineStart = 0;\r\n    tokRegexpAllowed = true;\r\n    inXJSChild = inXJSTag = false;\r\n    skipSpace();\r\n  }\r\n\r\n  // Called at the end of every token. Sets `tokEnd`, `tokVal`, and\r\n  // `tokRegexpAllowed`, and skips the space after the token, so that\r\n  // the next one's `tokStart` will point at the right position.\r\n\r\n  function finishToken(type, val) {\r\n    tokEnd = tokPos;\r\n    if (options.locations) tokEndLoc = new Position;\r\n    tokType = type;\r\n    if (!(inXJSTag && val === '>') && !(inXJSChild && tokType !== _braceL)) {\r\n      skipSpace();\r\n    }\r\n    tokVal = val;\r\n    tokRegexpAllowed = type.beforeExpr;\r\n  }\r\n\r\n  function skipBlockComment() {\r\n    var startLoc = options.onComment && options.locations && new Position;\r\n    var start = tokPos, end = input.indexOf(\"*/\", tokPos += 2);\r\n    if (end === -1) raise(tokPos - 2, \"Unterminated comment\");\r\n    tokPos = end + 2;\r\n    if (options.locations) {\r\n      lineBreak.lastIndex = start;\r\n      var match;\r\n      while ((match = lineBreak.exec(input)) && match.index < tokPos) {\r\n        ++tokCurLine;\r\n        tokLineStart = match.index + match[0].length;\r\n      }\r\n    }\r\n    if (options.onComment)\r\n      options.onComment(true, input.slice(start + 2, end), start, tokPos,\r\n                        startLoc, options.locations && new Position);\r\n  }\r\n\r\n  function skipLineComment() {\r\n    var start = tokPos;\r\n    var startLoc = options.onComment && options.locations && new Position;\r\n    var ch = input.charCodeAt(tokPos+=2);\r\n    while (tokPos < inputLen && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\r\n      ++tokPos;\r\n      ch = input.charCodeAt(tokPos);\r\n    }\r\n    if (options.onComment)\r\n      options.onComment(false, input.slice(start + 2, tokPos), start, tokPos,\r\n                        startLoc, options.locations && new Position);\r\n  }\r\n\r\n  // Called at the start of the parse and after every token. Skips\r\n  // whitespace and comments, and.\r\n\r\n  function skipSpace() {\r\n    while (tokPos < inputLen) {\r\n      var ch = input.charCodeAt(tokPos);\r\n      if (ch === 32) { // ' '\r\n        ++tokPos;\r\n      } else if (ch === 13) {\r\n        ++tokPos;\r\n        var next = input.charCodeAt(tokPos);\r\n        if (next === 10) {\r\n          ++tokPos;\r\n        }\r\n        if (options.locations) {\r\n          ++tokCurLine;\r\n          tokLineStart = tokPos;\r\n        }\r\n      } else if (ch === 10 || ch === 8232 || ch === 8233) {\r\n        ++tokPos;\r\n        if (options.locations) {\r\n          ++tokCurLine;\r\n          tokLineStart = tokPos;\r\n        }\r\n      } else if (ch > 8 && ch < 14) {\r\n        ++tokPos;\r\n      } else if (ch === 47) { // '/'\r\n        var next = input.charCodeAt(tokPos + 1);\r\n        if (next === 42) { // '*'\r\n          skipBlockComment();\r\n        } else if (next === 47) { // '/'\r\n          skipLineComment();\r\n        } else break;\r\n      } else if (ch === 160) { // '\\xa0'\r\n        ++tokPos;\r\n      } else if (ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\r\n        ++tokPos;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // ### Token reading\r\n\r\n  // This is the function that is called to fetch the next token. It\r\n  // is somewhat obscure, because it works in character codes rather\r\n  // than characters, and because operator parsing has been inlined\r\n  // into it.\r\n  //\r\n  // All in the name of speed.\r\n  //\r\n  // The `forceRegexp` parameter is used in the one case where the\r\n  // `tokRegexpAllowed` trick does not work. See `parseStatement`.\r\n\r\n  function readToken_dot() {\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next >= 48 && next <= 57) return readNumber(true);\r\n    var next2 = input.charCodeAt(tokPos + 2);\r\n    if (options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\r\n      tokPos += 3;\r\n      return finishToken(_ellipsis);\r\n    } else {\r\n      ++tokPos;\r\n      return finishToken(_dot);\r\n    }\r\n  }\r\n\r\n  function readToken_slash() { // '/'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (tokRegexpAllowed) {++tokPos; return readRegexp();}\r\n    if (next === 61) return finishOp(_assign, 2);\r\n    return finishOp(_slash, 1);\r\n  }\r\n\r\n  function readToken_mult_modulo() { // '%*'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next === 61) return finishOp(_assign, 2);\r\n    return finishOp(_multiplyModulo, 1);\r\n  }\r\n\r\n  function readToken_pipe_amp(code) { // '|&'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next === code) return finishOp(code === 124 ? _logicalOR : _logicalAND, 2);\r\n    if (next === 61) return finishOp(_assign, 2);\r\n    return finishOp(code === 124 ? _bitwiseOR : _bitwiseAND, 1);\r\n  }\r\n\r\n  function readToken_caret() { // '^'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next === 61) return finishOp(_assign, 2);\r\n    return finishOp(_bitwiseXOR, 1);\r\n  }\r\n\r\n  function readToken_plus_min(code) { // '+-'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next === code) {\r\n      if (next == 45 && input.charCodeAt(tokPos + 2) == 62 &&\r\n          newline.test(input.slice(lastEnd, tokPos))) {\r\n        // A `-->` line comment\r\n        tokPos += 3;\r\n        skipLineComment();\r\n        skipSpace();\r\n        return readToken();\r\n      }\r\n      return finishOp(_incDec, 2);\r\n    }\r\n    if (next === 61) return finishOp(_assign, 2);\r\n    return finishOp(_plusMin, 1);\r\n  }\r\n\r\n  function readToken_lt_gt(code) { // '<>'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    var size = 1;\r\n    if (next === code) {\r\n      size = code === 62 && input.charCodeAt(tokPos + 2) === 62 ? 3 : 2;\r\n      if (input.charCodeAt(tokPos + size) === 61) return finishOp(_assign, size + 1);\r\n      return finishOp(_bitShift, size);\r\n    }\r\n    if (next == 33 && code == 60 && input.charCodeAt(tokPos + 2) == 45 &&\r\n        input.charCodeAt(tokPos + 3) == 45) {\r\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\r\n      tokPos += 4;\r\n      skipLineComment();\r\n      skipSpace();\r\n      return readToken();\r\n    }\r\n    if (next === 61)\r\n      size = input.charCodeAt(tokPos + 2) === 61 ? 3 : 2;\r\n    return finishOp(_relational, size);\r\n  }\r\n\r\n  function readToken_eq_excl(code) { // '=!'\r\n    var next = input.charCodeAt(tokPos + 1);\r\n    if (next === 61) return finishOp(_equality, input.charCodeAt(tokPos + 2) === 61 ? 3 : 2);\r\n    return finishOp(code === 61 ? _eq : _prefix, 1);\r\n  }\r\n\r\n  function getTokenFromCode(code) {\r\n    switch(code) {\r\n      // The interpretation of a dot depends on whether it is followed\r\n      // by a digit or another two dots.\r\n    case 46: // '.'\r\n      return readToken_dot();\r\n\r\n      // Punctuation tokens.\r\n    case 40: ++tokPos; return finishToken(_parenL);\r\n    case 41: ++tokPos; return finishToken(_parenR);\r\n    case 59: ++tokPos; return finishToken(_semi);\r\n    case 44: ++tokPos; return finishToken(_comma);\r\n    case 91: ++tokPos; return finishToken(_bracketL);\r\n    case 93: ++tokPos; return finishToken(_bracketR);\r\n    case 123: ++tokPos; return finishToken(_braceL);\r\n    case 125: ++tokPos; return finishToken(_braceR);\r\n    case 58: ++tokPos; return finishToken(_colon);\r\n    case 63: ++tokPos; return finishToken(_question);\r\n\r\n      // '0x' is a hexadecimal number.\r\n    case 48: // '0'\r\n      var next = input.charCodeAt(tokPos + 1);\r\n      if (next === 120 || next === 88) return readHexNumber();\r\n      // Anything else beginning with a digit is an integer, octal\r\n      // number, or float.\r\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\r\n      return readNumber(false);\r\n\r\n      // Quotes produce strings.\r\n    case 34: case 39: // '\"', \"'\"\r\n      return inXJSTag ? readXJSStringLiteral() : readString(code);\r\n\r\n    // Operators are parsed inline in tiny state machines. '=' (61) is\r\n    // often referred to. `finishOp` simply skips the amount of\r\n    // characters it is given as second argument, and returns a token\r\n    // of the type given by its first argument.\r\n\r\n    case 47: // '/'\r\n      return readToken_slash();\r\n\r\n    case 37: case 42: // '%*'\r\n      return readToken_mult_modulo();\r\n\r\n    case 124: case 38: // '|&'\r\n      return readToken_pipe_amp(code);\r\n\r\n    case 94: // '^'\r\n      return readToken_caret();\r\n\r\n    case 43: case 45: // '+-'\r\n      return readToken_plus_min(code);\r\n\r\n    case 60: case 62: // '<>'\r\n      return readToken_lt_gt(code);\r\n\r\n    case 61: case 33: // '=!'\r\n      return readToken_eq_excl(code);\r\n\r\n    case 126: // '~'\r\n      return finishOp(_prefix, 1);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function readToken(forceRegexp) {\r\n    if (!forceRegexp) tokStart = tokPos;\r\n    else tokPos = tokStart + 1;\r\n    if (options.locations) tokStartLoc = new Position;\r\n    if (forceRegexp) return readRegexp();\r\n    if (tokPos >= inputLen) return finishToken(_eof);\r\n\r\n    var code = input.charCodeAt(tokPos);\r\n\r\n    // JSX content - either simple text, start of <tag> or {expression}\r\n    if (inXJSChild && tokType !== _braceL && code !== 60 && code !== 123 && code !== 125) {\r\n      return readXJSText(['<', '{']);\r\n    }\r\n\r\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\r\n    // identifiers, so '\\' also dispatches to that.\r\n    if (isIdentifierStart(code) || code === 92 /* '\\' */) return readWord();\r\n\r\n    var tok = getTokenFromCode(code);\r\n\r\n    if (tok === false) {\r\n      // If we are here, we either found a non-ASCII identifier\r\n      // character, or something that's entirely disallowed.\r\n      var ch = String.fromCharCode(code);\r\n      if (ch === \"\\\\\" || nonASCIIidentifierStart.test(ch)) return readWord();\r\n      raise(tokPos, \"Unexpected character '\" + ch + \"'\");\r\n    }\r\n    return tok;\r\n  }\r\n\r\n  function finishOp(type, size) {\r\n    var str = input.slice(tokPos, tokPos + size);\r\n    tokPos += size;\r\n    finishToken(type, str);\r\n  }\r\n\r\n  // Parse a regular expression. Some context-awareness is necessary,\r\n  // since a '/' inside a '[]' set does not end the expression.\r\n\r\n  function readRegexp() {\r\n    var content = \"\", escaped, inClass, start = tokPos;\r\n    for (;;) {\r\n      if (tokPos >= inputLen) raise(start, \"Unterminated regular expression\");\r\n      var ch = input.charAt(tokPos);\r\n      if (newline.test(ch)) raise(start, \"Unterminated regular expression\");\r\n      if (!escaped) {\r\n        if (ch === \"[\") inClass = true;\r\n        else if (ch === \"]\" && inClass) inClass = false;\r\n        else if (ch === \"/\" && !inClass) break;\r\n        escaped = ch === \"\\\\\";\r\n      } else escaped = false;\r\n      ++tokPos;\r\n    }\r\n    var content = input.slice(start, tokPos);\r\n    ++tokPos;\r\n    // Need to use `readWord1` because '\\uXXXX' sequences are allowed\r\n    // here (don't ask).\r\n    var mods = readWord1();\r\n    if (mods && !/^[gmsiy]*$/.test(mods)) raise(start, \"Invalid regular expression flag\");\r\n    try {\r\n      var value = new RegExp(content, mods);\r\n    } catch (e) {\r\n      if (e instanceof SyntaxError) raise(start, \"Error parsing regular expression: \" + e.message);\r\n      raise(e);\r\n    }\r\n    return finishToken(_regexp, value);\r\n  }\r\n\r\n  // Read an integer in the given radix. Return null if zero digits\r\n  // were read, the integer value otherwise. When `len` is given, this\r\n  // will return `null` unless the integer has exactly `len` digits.\r\n\r\n  function readInt(radix, len) {\r\n    var start = tokPos, total = 0;\r\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\r\n      var code = input.charCodeAt(tokPos), val;\r\n      if (code >= 97) val = code - 97 + 10; // a\r\n      else if (code >= 65) val = code - 65 + 10; // A\r\n      else if (code >= 48 && code <= 57) val = code - 48; // 0-9\r\n      else val = Infinity;\r\n      if (val >= radix) break;\r\n      ++tokPos;\r\n      total = total * radix + val;\r\n    }\r\n    if (tokPos === start || len != null && tokPos - start !== len) return null;\r\n\r\n    return total;\r\n  }\r\n\r\n  function readHexNumber() {\r\n    tokPos += 2; // 0x\r\n    var val = readInt(16);\r\n    if (val == null) raise(tokStart + 2, \"Expected hexadecimal number\");\r\n    if (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\r\n    return finishToken(_num, val);\r\n  }\r\n\r\n  // Read an integer, octal integer, or floating-point number.\r\n\r\n  function readNumber(startsWithDot) {\r\n    var start = tokPos, isFloat = false, octal = input.charCodeAt(tokPos) === 48;\r\n    if (!startsWithDot && readInt(10) === null) raise(start, \"Invalid number\");\r\n    if (input.charCodeAt(tokPos) === 46) {\r\n      ++tokPos;\r\n      readInt(10);\r\n      isFloat = true;\r\n    }\r\n    var next = input.charCodeAt(tokPos);\r\n    if (next === 69 || next === 101) { // 'eE'\r\n      next = input.charCodeAt(++tokPos);\r\n      if (next === 43 || next === 45) ++tokPos; // '+-'\r\n      if (readInt(10) === null) raise(start, \"Invalid number\");\r\n      isFloat = true;\r\n    }\r\n    if (isIdentifierStart(input.charCodeAt(tokPos))) raise(tokPos, \"Identifier directly after number\");\r\n\r\n    var str = input.slice(start, tokPos), val;\r\n    if (isFloat) val = parseFloat(str);\r\n    else if (!octal || str.length === 1) val = parseInt(str, 10);\r\n    else if (/[89]/.test(str) || strict) raise(start, \"Invalid number\");\r\n    else val = parseInt(str, 8);\r\n    return finishToken(_num, val);\r\n  }\r\n\r\n  // Read a string value, interpreting backslash-escapes.\r\n\r\n  function readString(quote) {\r\n    tokPos++;\r\n    var out = \"\";\r\n    for (;;) {\r\n      if (tokPos >= inputLen) raise(tokStart, \"Unterminated string constant\");\r\n      var ch = input.charCodeAt(tokPos);\r\n      if (ch === quote) {\r\n        ++tokPos;\r\n        return finishToken(_string, out);\r\n      }\r\n      if (ch === 92) { // '\\'\r\n        ch = input.charCodeAt(++tokPos);\r\n        var octal = /^[0-7]+/.exec(input.slice(tokPos, tokPos + 3));\r\n        if (octal) octal = octal[0];\r\n        while (octal && parseInt(octal, 8) > 255) octal = octal.slice(0, -1);\r\n        if (octal === \"0\") octal = null;\r\n        ++tokPos;\r\n        if (octal) {\r\n          if (strict) raise(tokPos - 2, \"Octal literal in strict mode\");\r\n          out += String.fromCharCode(parseInt(octal, 8));\r\n          tokPos += octal.length - 1;\r\n        } else {\r\n          switch (ch) {\r\n          case 110: out += \"\\n\"; break; // 'n' -> '\\n'\r\n          case 114: out += \"\\r\"; break; // 'r' -> '\\r'\r\n          case 120: out += String.fromCharCode(readHexChar(2)); break; // 'x'\r\n          case 117: out += String.fromCharCode(readHexChar(4)); break; // 'u'\r\n          case 85: out += String.fromCharCode(readHexChar(8)); break; // 'U'\r\n          case 116: out += \"\\t\"; break; // 't' -> '\\t'\r\n          case 98: out += \"\\b\"; break; // 'b' -> '\\b'\r\n          case 118: out += \"\\u000b\"; break; // 'v' -> '\\u000b'\r\n          case 102: out += \"\\f\"; break; // 'f' -> '\\f'\r\n          case 48: out += \"\\0\"; break; // 0 -> '\\0'\r\n          case 13: if (input.charCodeAt(tokPos) === 10) ++tokPos; // '\\r\\n'\r\n          case 10: // ' \\n'\r\n            if (options.locations) { tokLineStart = tokPos; ++tokCurLine; }\r\n            break;\r\n          default: out += String.fromCharCode(ch); break;\r\n          }\r\n        }\r\n      } else {\r\n        if (ch === 13 || ch === 10 || ch === 8232 || ch === 8233) raise(tokStart, \"Unterminated string constant\");\r\n        out += String.fromCharCode(ch); // '\\'\r\n        ++tokPos;\r\n      }\r\n    }\r\n  }\r\n\r\n  var XHTMLEntities = {\r\n    quot: '\\u0022',\r\n    amp: '&',\r\n    apos: '\\u0027',\r\n    lt: '<',\r\n    gt: '>',\r\n    nbsp: '\\u00A0',\r\n    iexcl: '\\u00A1',\r\n    cent: '\\u00A2',\r\n    pound: '\\u00A3',\r\n    curren: '\\u00A4',\r\n    yen: '\\u00A5',\r\n    brvbar: '\\u00A6',\r\n    sect: '\\u00A7',\r\n    uml: '\\u00A8',\r\n    copy: '\\u00A9',\r\n    ordf: '\\u00AA',\r\n    laquo: '\\u00AB',\r\n    not: '\\u00AC',\r\n    shy: '\\u00AD',\r\n    reg: '\\u00AE',\r\n    macr: '\\u00AF',\r\n    deg: '\\u00B0',\r\n    plusmn: '\\u00B1',\r\n    sup2: '\\u00B2',\r\n    sup3: '\\u00B3',\r\n    acute: '\\u00B4',\r\n    micro: '\\u00B5',\r\n    para: '\\u00B6',\r\n    middot: '\\u00B7',\r\n    cedil: '\\u00B8',\r\n    sup1: '\\u00B9',\r\n    ordm: '\\u00BA',\r\n    raquo: '\\u00BB',\r\n    frac14: '\\u00BC',\r\n    frac12: '\\u00BD',\r\n    frac34: '\\u00BE',\r\n    iquest: '\\u00BF',\r\n    Agrave: '\\u00C0',\r\n    Aacute: '\\u00C1',\r\n    Acirc: '\\u00C2',\r\n    Atilde: '\\u00C3',\r\n    Auml: '\\u00C4',\r\n    Aring: '\\u00C5',\r\n    AElig: '\\u00C6',\r\n    Ccedil: '\\u00C7',\r\n    Egrave: '\\u00C8',\r\n    Eacute: '\\u00C9',\r\n    Ecirc: '\\u00CA',\r\n    Euml: '\\u00CB',\r\n    Igrave: '\\u00CC',\r\n    Iacute: '\\u00CD',\r\n    Icirc: '\\u00CE',\r\n    Iuml: '\\u00CF',\r\n    ETH: '\\u00D0',\r\n    Ntilde: '\\u00D1',\r\n    Ograve: '\\u00D2',\r\n    Oacute: '\\u00D3',\r\n    Ocirc: '\\u00D4',\r\n    Otilde: '\\u00D5',\r\n    Ouml: '\\u00D6',\r\n    times: '\\u00D7',\r\n    Oslash: '\\u00D8',\r\n    Ugrave: '\\u00D9',\r\n    Uacute: '\\u00DA',\r\n    Ucirc: '\\u00DB',\r\n    Uuml: '\\u00DC',\r\n    Yacute: '\\u00DD',\r\n    THORN: '\\u00DE',\r\n    szlig: '\\u00DF',\r\n    agrave: '\\u00E0',\r\n    aacute: '\\u00E1',\r\n    acirc: '\\u00E2',\r\n    atilde: '\\u00E3',\r\n    auml: '\\u00E4',\r\n    aring: '\\u00E5',\r\n    aelig: '\\u00E6',\r\n    ccedil: '\\u00E7',\r\n    egrave: '\\u00E8',\r\n    eacute: '\\u00E9',\r\n    ecirc: '\\u00EA',\r\n    euml: '\\u00EB',\r\n    igrave: '\\u00EC',\r\n    iacute: '\\u00ED',\r\n    icirc: '\\u00EE',\r\n    iuml: '\\u00EF',\r\n    eth: '\\u00F0',\r\n    ntilde: '\\u00F1',\r\n    ograve: '\\u00F2',\r\n    oacute: '\\u00F3',\r\n    ocirc: '\\u00F4',\r\n    otilde: '\\u00F5',\r\n    ouml: '\\u00F6',\r\n    divide: '\\u00F7',\r\n    oslash: '\\u00F8',\r\n    ugrave: '\\u00F9',\r\n    uacute: '\\u00FA',\r\n    ucirc: '\\u00FB',\r\n    uuml: '\\u00FC',\r\n    yacute: '\\u00FD',\r\n    thorn: '\\u00FE',\r\n    yuml: '\\u00FF',\r\n    OElig: '\\u0152',\r\n    oelig: '\\u0153',\r\n    Scaron: '\\u0160',\r\n    scaron: '\\u0161',\r\n    Yuml: '\\u0178',\r\n    fnof: '\\u0192',\r\n    circ: '\\u02C6',\r\n    tilde: '\\u02DC',\r\n    Alpha: '\\u0391',\r\n    Beta: '\\u0392',\r\n    Gamma: '\\u0393',\r\n    Delta: '\\u0394',\r\n    Epsilon: '\\u0395',\r\n    Zeta: '\\u0396',\r\n    Eta: '\\u0397',\r\n    Theta: '\\u0398',\r\n    Iota: '\\u0399',\r\n    Kappa: '\\u039A',\r\n    Lambda: '\\u039B',\r\n    Mu: '\\u039C',\r\n    Nu: '\\u039D',\r\n    Xi: '\\u039E',\r\n    Omicron: '\\u039F',\r\n    Pi: '\\u03A0',\r\n    Rho: '\\u03A1',\r\n    Sigma: '\\u03A3',\r\n    Tau: '\\u03A4',\r\n    Upsilon: '\\u03A5',\r\n    Phi: '\\u03A6',\r\n    Chi: '\\u03A7',\r\n    Psi: '\\u03A8',\r\n    Omega: '\\u03A9',\r\n    alpha: '\\u03B1',\r\n    beta: '\\u03B2',\r\n    gamma: '\\u03B3',\r\n    delta: '\\u03B4',\r\n    epsilon: '\\u03B5',\r\n    zeta: '\\u03B6',\r\n    eta: '\\u03B7',\r\n    theta: '\\u03B8',\r\n    iota: '\\u03B9',\r\n    kappa: '\\u03BA',\r\n    lambda: '\\u03BB',\r\n    mu: '\\u03BC',\r\n    nu: '\\u03BD',\r\n    xi: '\\u03BE',\r\n    omicron: '\\u03BF',\r\n    pi: '\\u03C0',\r\n    rho: '\\u03C1',\r\n    sigmaf: '\\u03C2',\r\n    sigma: '\\u03C3',\r\n    tau: '\\u03C4',\r\n    upsilon: '\\u03C5',\r\n    phi: '\\u03C6',\r\n    chi: '\\u03C7',\r\n    psi: '\\u03C8',\r\n    omega: '\\u03C9',\r\n    thetasym: '\\u03D1',\r\n    upsih: '\\u03D2',\r\n    piv: '\\u03D6',\r\n    ensp: '\\u2002',\r\n    emsp: '\\u2003',\r\n    thinsp: '\\u2009',\r\n    zwnj: '\\u200C',\r\n    zwj: '\\u200D',\r\n    lrm: '\\u200E',\r\n    rlm: '\\u200F',\r\n    ndash: '\\u2013',\r\n    mdash: '\\u2014',\r\n    lsquo: '\\u2018',\r\n    rsquo: '\\u2019',\r\n    sbquo: '\\u201A',\r\n    ldquo: '\\u201C',\r\n    rdquo: '\\u201D',\r\n    bdquo: '\\u201E',\r\n    dagger: '\\u2020',\r\n    Dagger: '\\u2021',\r\n    bull: '\\u2022',\r\n    hellip: '\\u2026',\r\n    permil: '\\u2030',\r\n    prime: '\\u2032',\r\n    Prime: '\\u2033',\r\n    lsaquo: '\\u2039',\r\n    rsaquo: '\\u203A',\r\n    oline: '\\u203E',\r\n    frasl: '\\u2044',\r\n    euro: '\\u20AC',\r\n    image: '\\u2111',\r\n    weierp: '\\u2118',\r\n    real: '\\u211C',\r\n    trade: '\\u2122',\r\n    alefsym: '\\u2135',\r\n    larr: '\\u2190',\r\n    uarr: '\\u2191',\r\n    rarr: '\\u2192',\r\n    darr: '\\u2193',\r\n    harr: '\\u2194',\r\n    crarr: '\\u21B5',\r\n    lArr: '\\u21D0',\r\n    uArr: '\\u21D1',\r\n    rArr: '\\u21D2',\r\n    dArr: '\\u21D3',\r\n    hArr: '\\u21D4',\r\n    forall: '\\u2200',\r\n    part: '\\u2202',\r\n    exist: '\\u2203',\r\n    empty: '\\u2205',\r\n    nabla: '\\u2207',\r\n    isin: '\\u2208',\r\n    notin: '\\u2209',\r\n    ni: '\\u220B',\r\n    prod: '\\u220F',\r\n    sum: '\\u2211',\r\n    minus: '\\u2212',\r\n    lowast: '\\u2217',\r\n    radic: '\\u221A',\r\n    prop: '\\u221D',\r\n    infin: '\\u221E',\r\n    ang: '\\u2220',\r\n    and: '\\u2227',\r\n    or: '\\u2228',\r\n    cap: '\\u2229',\r\n    cup: '\\u222A',\r\n    'int': '\\u222B',\r\n    there4: '\\u2234',\r\n    sim: '\\u223C',\r\n    cong: '\\u2245',\r\n    asymp: '\\u2248',\r\n    ne: '\\u2260',\r\n    equiv: '\\u2261',\r\n    le: '\\u2264',\r\n    ge: '\\u2265',\r\n    sub: '\\u2282',\r\n    sup: '\\u2283',\r\n    nsub: '\\u2284',\r\n    sube: '\\u2286',\r\n    supe: '\\u2287',\r\n    oplus: '\\u2295',\r\n    otimes: '\\u2297',\r\n    perp: '\\u22A5',\r\n    sdot: '\\u22C5',\r\n    lceil: '\\u2308',\r\n    rceil: '\\u2309',\r\n    lfloor: '\\u230A',\r\n    rfloor: '\\u230B',\r\n    lang: '\\u2329',\r\n    rang: '\\u232A',\r\n    loz: '\\u25CA',\r\n    spades: '\\u2660',\r\n    clubs: '\\u2663',\r\n    hearts: '\\u2665',\r\n    diams: '\\u2666'\r\n  };\r\n\r\n  function readXJSEntity() {\r\n    var str = '', count = 0, entity;\r\n    var ch = nextChar();\r\n    if (ch !== '&') raise(tokPos, \"Entity must start with an ampersand\");\r\n    tokPos++;\r\n    while (tokPos < inputLen && count++ < 10) {\r\n      ch = input.charAt(tokPos++);\r\n      if (ch === ';') {\r\n        break;\r\n      }\r\n      str += ch;\r\n    }\r\n\r\n    if (str[0] === '#' && str[1] === 'x') {\r\n      entity = String.fromCharCode(parseInt(str.substr(2), 16));\r\n    } else if (str[0] === '#') {\r\n      entity = String.fromCharCode(parseInt(str.substr(1), 10));\r\n    } else {\r\n      entity = XHTMLEntities[str];\r\n    }\r\n    return entity;\r\n  }\r\n\r\n  function readXJSText(stopChars) {\r\n    var str = '';\r\n    while (tokPos < inputLen) {\r\n      var ch = nextChar();\r\n      if (stopChars.indexOf(ch) !== -1) {\r\n        break;\r\n      }\r\n      if (ch === '&') {\r\n        str += readXJSEntity();\r\n      } else {\r\n        ++tokPos;\r\n        if (ch === '\\r' && nextChar() === '\\n') {\r\n          str += ch;\r\n          ++tokPos;\r\n          ch = '\\n';\r\n        }\r\n        if (ch === '\\n' && options.locations) {\r\n          tokLineStart = tokPos;\r\n          ++tokCurLine;\r\n        }\r\n        str += ch;\r\n      }\r\n    }\r\n    return finishToken(_xjsText, str);\r\n  }\r\n\r\n  function readXJSStringLiteral() {\r\n    var quote = input.charCodeAt(tokPos);\r\n\r\n    if (quote !== 34 && quote !== 39) {\r\n      raise(\"String literal must starts with a quote\");\r\n    }\r\n\r\n    ++tokPos;\r\n\r\n    readXJSText([String.fromCharCode(quote)]);\r\n\r\n    if (quote !== input.charCodeAt(tokPos)) {\r\n      unexpected();\r\n    }\r\n\r\n    ++tokPos;\r\n\r\n    return finishToken(tokType, tokVal);\r\n  }\r\n\r\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\r\n\r\n  function readHexChar(len) {\r\n    var n = readInt(16, len);\r\n    if (n === null) raise(tokStart, \"Bad character escape sequence\");\r\n    return n;\r\n  }\r\n\r\n  // Used to signal to callers of `readWord1` whether the word\r\n  // contained any escape sequences. This is needed because words with\r\n  // escape sequences must not be interpreted as keywords.\r\n\r\n  var containsEsc;\r\n\r\n  // Read an identifier, and return it as a string. Sets `containsEsc`\r\n  // to whether the word contained a '\\u' escape.\r\n  //\r\n  // Only builds up the word character-by-character when it actually\r\n  // containeds an escape, as a micro-optimization.\r\n\r\n  function readWord1() {\r\n    containsEsc = false;\r\n    var word, first = true, start = tokPos;\r\n    for (;;) {\r\n      var ch = input.charCodeAt(tokPos);\r\n      if (isIdentifierChar(ch) || (inXJSTag && ch === 45)) {\r\n        if (containsEsc) word += input.charAt(tokPos);\r\n        ++tokPos;\r\n      } else if (ch === 92 && !inXJSTag) { // \"\\\"\r\n        if (!containsEsc) word = input.slice(start, tokPos);\r\n        containsEsc = true;\r\n        if (input.charCodeAt(++tokPos) != 117) // \"u\"\r\n          raise(tokPos, \"Expecting Unicode escape sequence \\\\uXXXX\");\r\n        ++tokPos;\r\n        var esc = readHexChar(4);\r\n        var escStr = String.fromCharCode(esc);\r\n        if (!escStr) raise(tokPos - 1, \"Invalid Unicode escape\");\r\n        if (!(first ? isIdentifierStart(esc) : isIdentifierChar(esc)))\r\n          raise(tokPos - 4, \"Invalid Unicode escape\");\r\n        word += escStr;\r\n      } else {\r\n        break;\r\n      }\r\n      first = false;\r\n    }\r\n    return containsEsc ? word : input.slice(start, tokPos);\r\n  }\r\n\r\n  // Read an identifier or keyword token. Will check for reserved\r\n  // words when necessary.\r\n\r\n  function readWord() {\r\n    var word = readWord1();\r\n    var type = inXJSTag ? _xjsName : _name;\r\n    if (!containsEsc && isKeyword(word))\r\n      type = keywordTypes[word];\r\n    return finishToken(type, word);\r\n  }\r\n\r\n  // ## Parser\r\n\r\n  // A recursive descent parser operates by defining functions for all\r\n  // syntactic elements, and recursively calling those, each function\r\n  // advancing the input stream and returning an AST node. Precedence\r\n  // of constructs (for example, the fact that `!x[1]` means `!(x[1])`\r\n  // instead of `(!x)[1]` is handled by the fact that the parser\r\n  // function that parses unary prefix operators is called first, and\r\n  // in turn calls the function that parses `[]` subscripts â€” that\r\n  // way, it'll receive the node for `x[1]` already parsed, and wraps\r\n  // *that* in the unary operator node.\r\n  //\r\n  // Acorn uses an [operator precedence parser][opp] to handle binary\r\n  // operator precedence, because it is much more compact than using\r\n  // the technique outlined above, which uses different, nesting\r\n  // functions to specify precedence, for all of the ten binary\r\n  // precedence levels that JavaScript defines.\r\n  //\r\n  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\r\n\r\n  // ### Parser utilities\r\n\r\n  // Continue to the next token.\r\n\r\n  function next() {\r\n    lastStart = tokStart;\r\n    lastEnd = tokEnd;\r\n    lastEndLoc = tokEndLoc;\r\n    readToken();\r\n  }\r\n\r\n  // Enter strict mode. Re-reads the next token to please pedantic\r\n  // tests (\"use strict\"; 010; -- should fail).\r\n\r\n  function setStrict(strct) {\r\n    strict = strct;\r\n    tokPos = tokStart;\r\n    if (options.locations) {\r\n      while (tokPos < tokLineStart) {\r\n        tokLineStart = input.lastIndexOf(\"\\n\", tokLineStart - 2) + 1;\r\n        --tokCurLine;\r\n      }\r\n    }\r\n    skipSpace();\r\n    readToken();\r\n  }\r\n\r\n  // Start an AST node, attaching a start offset.\r\n\r\n  function Node() {\r\n    this.type = null;\r\n    this.start = tokStart;\r\n    this.end = null;\r\n  }\r\n  \r\n  exports.Node = Node;\r\n\r\n  function SourceLocation() {\r\n    this.start = tokStartLoc;\r\n    this.end = null;\r\n    if (sourceFile !== null) this.source = sourceFile;\r\n  }\r\n\r\n  function startNode() {\r\n    var node = new Node();\r\n    if (options.locations)\r\n      node.loc = new SourceLocation();\r\n    if (options.directSourceFile)\r\n      node.sourceFile = options.directSourceFile;\r\n    if (options.ranges)\r\n      node.range = [tokStart, 0];\r\n    return node;\r\n  }\r\n\r\n  // Start a node whose start offset information should be based on\r\n  // the start of another node. For example, a binary operator node is\r\n  // only started after its left-hand side has already been parsed.\r\n\r\n  function startNodeFrom(other) {\r\n    var node = new Node();\r\n    node.start = other.start;\r\n    if (options.locations) {\r\n      node.loc = new SourceLocation();\r\n      node.loc.start = other.loc.start;\r\n    }\r\n    if (options.ranges)\r\n      node.range = [other.range[0], 0];\r\n\r\n    return node;\r\n  }\r\n\r\n  // Finish an AST node, adding `type` and `end` properties.\r\n\r\n  function finishNode(node, type) {\r\n    node.type = type;\r\n    node.end = lastEnd;\r\n    if (options.locations)\r\n      node.loc.end = lastEndLoc;\r\n    if (options.ranges)\r\n      node.range[1] = lastEnd;\r\n    return node;\r\n  }\r\n\r\n  // Test whether a statement node is the string literal `\"use strict\"`.\r\n\r\n  function isUseStrict(stmt) {\r\n    return options.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" &&\r\n      stmt.expression.type === \"Literal\" && stmt.expression.value === \"use strict\";\r\n  }\r\n\r\n  // Predicate that tests whether the next token is of the given\r\n  // type, and if yes, consumes it as a side effect.\r\n\r\n  function eat(type) {\r\n    if (tokType === type) {\r\n      next();\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // Test whether a semicolon can be inserted at the current position.\r\n\r\n  function canInsertSemicolon() {\r\n    return !options.strictSemicolons &&\r\n      (tokType === _eof || tokType === _braceR || newline.test(input.slice(lastEnd, tokStart)));\r\n  }\r\n\r\n  // Consume a semicolon, or, failing that, see if we are allowed to\r\n  // pretend that there is a semicolon at this position.\r\n\r\n  function semicolon() {\r\n    if (!eat(_semi) && !canInsertSemicolon()) unexpected();\r\n  }\r\n\r\n  // Expect a token of a given type. If found, consume it, otherwise,\r\n  // raise an unexpected token error.\r\n\r\n  function expect(type) {\r\n    if (tokType === type) next();\r\n    else unexpected();\r\n  }\r\n\r\n  // Expect a char. If found, consume it, otherwise,\r\n  // raise an unexpected token error.\r\n\r\n  function expectChar(ch) {\r\n    if (tokVal === ch) next();\r\n    else unexpected();\r\n  }\r\n\r\n  // Get following char.\r\n\r\n  function nextChar() {\r\n    return input.charAt(tokPos);\r\n  }\r\n\r\n  // Raise an unexpected token error.\r\n\r\n  function unexpected() {\r\n    raise(tokStart, \"Unexpected token\");\r\n  }\r\n\r\n  // Verify that a node is an lval â€” something that can be assigned\r\n  // to.\r\n\r\n  function checkLVal(expr) {\r\n    if (expr.type !== \"Identifier\" && expr.type !== \"MemberExpression\")\r\n      raise(expr.start, \"Assigning to rvalue\");\r\n    if (strict && expr.type === \"Identifier\" && isStrictBadIdWord(expr.name))\r\n      raise(expr.start, \"Assigning to \" + expr.name + \" in strict mode\");\r\n  }\r\n\r\n  // ### Statement parsing\r\n\r\n  // Parse a program. Initializes the parser, reads any number of\r\n  // statements, and wraps them in a Program node.  Optionally takes a\r\n  // `program` argument.  If present, the statements will be appended\r\n  // to its body instead of creating a new node.\r\n\r\n  function parseTopLevel(program) {\r\n    lastStart = lastEnd = tokPos;\r\n    if (options.locations) lastEndLoc = new Position;\r\n    inFunction = strict = null;\r\n    labels = [];\r\n    readToken();\r\n\r\n    var node = program || startNode(), first = true;\r\n    if (!program) node.body = [];\r\n    while (tokType !== _eof) {\r\n      var stmt = parseStatement();\r\n      node.body.push(stmt);\r\n      if (first && isUseStrict(stmt)) setStrict(true);\r\n      first = false;\r\n    }\r\n    return finishNode(node, \"Program\");\r\n  }\r\n\r\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\r\n\r\n  // Parse a single statement.\r\n  //\r\n  // If expecting a statement and finding a slash operator, parse a\r\n  // regular expression literal. This is to handle cases like\r\n  // `if (foo) /blah/.exec(foo);`, where looking at the previous token\r\n  // does not help.\r\n\r\n  function parseStatement() {\r\n    if (tokType === _slash || tokType === _assign && tokVal == \"/=\")\r\n      readToken(true);\r\n\r\n    var starttype = tokType, node = startNode();\r\n\r\n    // Most types of statements are recognized by the keyword they\r\n    // start with. Many are trivial to parse, some require a bit of\r\n    // complexity.\r\n\r\n    switch (starttype) {\r\n    case _break: case _continue: return parseBreakContinueStatement(node, starttype.keyword);\r\n    case _debugger: return parseDebuggerStatement(node);\r\n    case _do: return parseDoStatement(node);\r\n    case _for: return parseForStatement(node);\r\n    case _function: return parseFunctionStatement(node);\r\n    case _if: return parseIfStatement(node);\r\n    case _return: return parseReturnStatement(node);\r\n    case _switch: return parseSwitchStatement(node);\r\n    case _throw: return parseThrowStatement(node);\r\n    case _try: return parseTryStatement(node);\r\n    case _var: case _let: case _const: return parseVarStatement(node, starttype.keyword);\r\n    case _while: return parseWhileStatement(node);\r\n    case _with: return parseWithStatement(node);\r\n    case _braceL: return parseBlock(); // no point creating a function for this\r\n    case _semi: return parseEmptyStatement(node);\r\n\r\n      // If the statement does not start with a statement keyword or a\r\n      // brace, it's an ExpressionStatement or LabeledStatement. We\r\n      // simply start parsing an expression, and afterwards, if the\r\n      // next token is a colon and the expression was a simple\r\n      // Identifier node, we switch to interpreting it as a label.\r\n    default:\r\n      var maybeName = tokVal, expr = parseExpression();\r\n      if (starttype === _name && expr.type === \"Identifier\" && eat(_colon))\r\n        return parseLabeledStatement(node, maybeName, expr);\r\n      else return parseExpressionStatement(node, expr);\r\n    }\r\n  }\r\n  \r\n  function parseBreakContinueStatement(node, keyword) {\r\n    var isBreak = keyword == \"break\";\r\n    next();\r\n    if (eat(_semi) || canInsertSemicolon()) node.label = null;\r\n    else if (tokType !== _name) unexpected();\r\n    else {\r\n      node.label = parseIdent();\r\n      semicolon();\r\n    }\r\n\r\n    // Verify that there is an actual destination to break or\r\n    // continue to.\r\n    for (var i = 0; i < labels.length; ++i) {\r\n      var lab = labels[i];\r\n      if (node.label == null || lab.name === node.label.name) {\r\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\r\n        if (node.label && isBreak) break;\r\n      }\r\n    }\r\n    if (i === labels.length) raise(node.start, \"Unsyntactic \" + keyword);\r\n    return finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\r\n  }\r\n  \r\n  function parseDebuggerStatement(node) {\r\n    next();\r\n    semicolon();\r\n    return finishNode(node, \"DebuggerStatement\");\r\n  }\r\n  \r\n  function parseDoStatement(node) {\r\n    next();\r\n    labels.push(loopLabel);\r\n    node.body = parseStatement();\r\n    labels.pop();\r\n    expect(_while);\r\n    node.test = parseParenExpression();\r\n    semicolon();\r\n    return finishNode(node, \"DoWhileStatement\");\r\n  }\r\n  \r\n  // Disambiguating between a `for` and a `for`/`in` loop is\r\n  // non-trivial. Basically, we have to parse the init `var`\r\n  // statement or expression, disallowing the `in` operator (see\r\n  // the second parameter to `parseExpression`), and then check\r\n  // whether the next token is `in`. When there is no init part\r\n  // (semicolon immediately after the opening parenthesis), it is\r\n  // a regular `for` loop.\r\n  \r\n  function parseForStatement(node) {\r\n    next();\r\n    labels.push(loopLabel);\r\n    expect(_parenL);\r\n    if (tokType === _semi) return parseFor(node, null);\r\n    if (tokType === _var || tokType === _let) {\r\n      var init = startNode(), varKind = tokType.keyword;\r\n      next();\r\n      parseVar(init, true, varKind);\r\n      finishNode(init, \"VariableDeclaration\");\r\n      if (init.declarations.length === 1 && eat(_in))\r\n        return parseForIn(node, init);\r\n      return parseFor(node, init);\r\n    }\r\n    var init = parseExpression(false, true);\r\n    if (eat(_in)) {checkLVal(init); return parseForIn(node, init);}\r\n    return parseFor(node, init);\r\n  }\r\n  \r\n  function parseFunctionStatement(node) {\r\n    next();\r\n    return parseFunction(node, true);\r\n  }\r\n  \r\n  function parseIfStatement(node) {\r\n    next();\r\n    node.test = parseParenExpression();\r\n    node.consequent = parseStatement();\r\n    node.alternate = eat(_else) ? parseStatement() : null;\r\n    return finishNode(node, \"IfStatement\");\r\n  }\r\n  \r\n  function parseReturnStatement(node) {\r\n    if (!inFunction && !options.allowReturnOutsideFunction)\r\n      raise(tokStart, \"'return' outside of function\");\r\n    next();\r\n\r\n    // In `return` (and `break`/`continue`), the keywords with\r\n    // optional arguments, we eagerly look for a semicolon or the\r\n    // possibility to insert one.\r\n\r\n    if (eat(_semi) || canInsertSemicolon()) node.argument = null;\r\n    else { node.argument = parseExpression(); semicolon(); }\r\n    return finishNode(node, \"ReturnStatement\");\r\n  }\r\n  \r\n  function parseSwitchStatement(node) {\r\n    next();\r\n    node.discriminant = parseParenExpression();\r\n    node.cases = [];\r\n    expect(_braceL);\r\n    labels.push(switchLabel);\r\n\r\n    // Statements under must be grouped (by label) in SwitchCase\r\n    // nodes. `cur` is used to keep the node that we are currently\r\n    // adding statements to.\r\n\r\n    for (var cur, sawDefault; tokType != _braceR;) {\r\n      if (tokType === _case || tokType === _default) {\r\n        var isCase = tokType === _case;\r\n        if (cur) finishNode(cur, \"SwitchCase\");\r\n        node.cases.push(cur = startNode());\r\n        cur.consequent = [];\r\n        next();\r\n        if (isCase) cur.test = parseExpression();\r\n        else {\r\n          if (sawDefault) raise(lastStart, \"Multiple default clauses\"); sawDefault = true;\r\n          cur.test = null;\r\n        }\r\n        expect(_colon);\r\n      } else {\r\n        if (!cur) unexpected();\r\n        cur.consequent.push(parseStatement());\r\n      }\r\n    }\r\n    if (cur) finishNode(cur, \"SwitchCase\");\r\n    next(); // Closing brace\r\n    labels.pop();\r\n    return finishNode(node, \"SwitchStatement\");\r\n  }\r\n  \r\n  function parseThrowStatement(node) {\r\n    next();\r\n    if (newline.test(input.slice(lastEnd, tokStart)))\r\n      raise(lastEnd, \"Illegal newline after throw\");\r\n    node.argument = parseExpression();\r\n    semicolon();\r\n    return finishNode(node, \"ThrowStatement\");next();\r\n    if (newline.test(input.slice(lastEnd, tokStart)))\r\n      raise(lastEnd, \"Illegal newline after throw\");\r\n    node.argument = parseExpression();\r\n    semicolon();\r\n    return finishNode(node, \"ThrowStatement\");\r\n  }\r\n  \r\n  function parseTryStatement(node) {\r\n    next();\r\n    node.block = parseBlock();\r\n    node.handler = null;\r\n    if (tokType === _catch) {\r\n      var clause = startNode();\r\n      next();\r\n      expect(_parenL);\r\n      clause.param = parseIdent();\r\n      if (strict && isStrictBadIdWord(clause.param.name))\r\n        raise(clause.param.start, \"Binding \" + clause.param.name + \" in strict mode\");\r\n      expect(_parenR);\r\n      clause.guard = null;\r\n      clause.body = parseBlock();\r\n      node.handler = finishNode(clause, \"CatchClause\");\r\n    }\r\n    node.guardedHandlers = empty;\r\n    node.finalizer = eat(_finally) ? parseBlock() : null;\r\n    if (!node.handler && !node.finalizer)\r\n      raise(node.start, \"Missing catch or finally clause\");\r\n    return finishNode(node, \"TryStatement\");\r\n  }\r\n  \r\n  function parseVarStatement(node, kind) {\r\n    next();\r\n    parseVar(node, false, kind);\r\n    semicolon();\r\n    return finishNode(node, \"VariableDeclaration\");\r\n  }\r\n  \r\n  function parseWhileStatement(node) {\r\n    next();\r\n    node.test = parseParenExpression();\r\n    labels.push(loopLabel);\r\n    node.body = parseStatement();\r\n    labels.pop();\r\n    return finishNode(node, \"WhileStatement\");\r\n  }\r\n  \r\n  function parseWithStatement(node) {\r\n    if (strict) raise(tokStart, \"'with' in strict mode\");\r\n    next();\r\n    node.object = parseParenExpression();\r\n    node.body = parseStatement();\r\n    return finishNode(node, \"WithStatement\");\r\n  }\r\n  \r\n  function parseEmptyStatement(node) {\r\n    next();\r\n    return finishNode(node, \"EmptyStatement\");\r\n  }\r\n  \r\n  function parseLabeledStatement(node, maybeName, expr) {\r\n    for (var i = 0; i < labels.length; ++i)\r\n      if (labels[i].name === maybeName) raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\r\n    var kind = tokType.isLoop ? \"loop\" : tokType === _switch ? \"switch\" : null;\r\n    labels.push({name: maybeName, kind: kind});\r\n    node.body = parseStatement();\r\n    labels.pop();\r\n    node.label = expr;\r\n    return finishNode(node, \"LabeledStatement\");\r\n  }\r\n  \r\n  function parseExpressionStatement(node, expr) {\r\n    node.expression = expr;\r\n    semicolon();\r\n    return finishNode(node, \"ExpressionStatement\");\r\n  }\r\n\r\n  // Used for constructs like `switch` and `if` that insist on\r\n  // parentheses around their expression.\r\n\r\n  function parseParenExpression() {\r\n    expect(_parenL);\r\n    var val = parseExpression();\r\n    expect(_parenR);\r\n    return val;\r\n  }\r\n\r\n  // Parse a semicolon-enclosed block of statements, handling `\"use\r\n  // strict\"` declarations when `allowStrict` is true (used for\r\n  // function bodies).\r\n\r\n  function parseBlock(allowStrict) {\r\n    var node = startNode(), first = true, strict = false, oldStrict;\r\n    node.body = [];\r\n    expect(_braceL);\r\n    while (!eat(_braceR)) {\r\n      var stmt = parseStatement();\r\n      node.body.push(stmt);\r\n      if (first && allowStrict && isUseStrict(stmt)) {\r\n        oldStrict = strict;\r\n        setStrict(strict = true);\r\n      }\r\n      first = false;\r\n    }\r\n    if (strict && !oldStrict) setStrict(false);\r\n    return finishNode(node, \"BlockStatement\");\r\n  }\r\n\r\n  // Parse a regular `for` loop. The disambiguation code in\r\n  // `parseStatement` will already have parsed the init statement or\r\n  // expression.\r\n\r\n  function parseFor(node, init) {\r\n    node.init = init;\r\n    expect(_semi);\r\n    node.test = tokType === _semi ? null : parseExpression();\r\n    expect(_semi);\r\n    node.update = tokType === _parenR ? null : parseExpression();\r\n    expect(_parenR);\r\n    node.body = parseStatement();\r\n    labels.pop();\r\n    return finishNode(node, \"ForStatement\");\r\n  }\r\n\r\n  // Parse a `for`/`in` loop.\r\n\r\n  function parseForIn(node, init) {\r\n    node.left = init;\r\n    node.right = parseExpression();\r\n    expect(_parenR);\r\n    node.body = parseStatement();\r\n    labels.pop();\r\n    return finishNode(node, \"ForInStatement\");\r\n  }\r\n\r\n  // Parse a list of variable declarations.\r\n\r\n  function parseVar(node, noIn, kind) {\r\n    node.declarations = [];\r\n    node.kind = kind;\r\n    for (;;) {\r\n      var decl = startNode();\r\n      decl.id = parseIdent();\r\n      if (strict && isStrictBadIdWord(decl.id.name))\r\n        raise(decl.id.start, \"Binding \" + decl.id.name + \" in strict mode\");\r\n      decl.init = eat(_eq) ? parseExpression(true, noIn) : (kind === _const.keyword ? unexpected() : null);\r\n      node.declarations.push(finishNode(decl, \"VariableDeclarator\"));\r\n      if (!eat(_comma)) break;\r\n    }\r\n    return node;\r\n  }\r\n\r\n  // ### Expression parsing\r\n\r\n  // These nest, from the most general expression type at the top to\r\n  // 'atomic', nondivisible expression types at the bottom. Most of\r\n  // the functions will simply let the function(s) below them parse,\r\n  // and, *if* the syntactic construct they handle is present, wrap\r\n  // the AST node that the inner parser gave them in another node.\r\n\r\n  // Parse a full expression. The arguments are used to forbid comma\r\n  // sequences (in argument lists, array literals, or object literals)\r\n  // or the `in` operator (in for loops initalization expressions).\r\n\r\n  function parseExpression(noComma, noIn) {\r\n    var expr = parseMaybeAssign(noIn);\r\n    if (!noComma && tokType === _comma) {\r\n      var node = startNodeFrom(expr);\r\n      node.expressions = [expr];\r\n      while (eat(_comma)) node.expressions.push(parseMaybeAssign(noIn));\r\n      return finishNode(node, \"SequenceExpression\");\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  // Parse an assignment expression. This includes applications of\r\n  // operators like `+=`.\r\n\r\n  function parseMaybeAssign(noIn) {\r\n    var left = parseMaybeConditional(noIn);\r\n    if (tokType.isAssign) {\r\n      var node = startNodeFrom(left);\r\n      node.operator = tokVal;\r\n      node.left = left;\r\n      next();\r\n      node.right = parseMaybeAssign(noIn);\r\n      checkLVal(left);\r\n      return finishNode(node, \"AssignmentExpression\");\r\n    }\r\n    return left;\r\n  }\r\n\r\n  // Parse a ternary conditional (`?:`) operator.\r\n\r\n  function parseMaybeConditional(noIn) {\r\n    var expr = parseExprOps(noIn);\r\n    if (eat(_question)) {\r\n      var node = startNodeFrom(expr);\r\n      node.test = expr;\r\n      node.consequent = parseExpression(true);\r\n      expect(_colon);\r\n      node.alternate = parseExpression(true, noIn);\r\n      return finishNode(node, \"ConditionalExpression\");\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  // Start the precedence parser.\r\n\r\n  function parseExprOps(noIn) {\r\n    return parseExprOp(parseMaybeUnary(), -1, noIn);\r\n  }\r\n\r\n  // Parse binary operators with the operator precedence parsing\r\n  // algorithm. `left` is the left-hand side of the operator.\r\n  // `minPrec` provides context that allows the function to stop and\r\n  // defer further parser to one of its callers when it encounters an\r\n  // operator that has a lower precedence than the set it is parsing.\r\n\r\n  function parseExprOp(left, minPrec, noIn) {\r\n    var prec = tokType.binop;\r\n    if (prec != null && (!noIn || tokType !== _in)) {\r\n      if (prec > minPrec) {\r\n        var node = startNodeFrom(left);\r\n        node.left = left;\r\n        node.operator = tokVal;\r\n        var op = tokType;\r\n        next();\r\n        node.right = parseExprOp(parseMaybeUnary(), prec, noIn);\r\n        var exprNode = finishNode(node, (op === _logicalOR || op === _logicalAND) ? \"LogicalExpression\" : \"BinaryExpression\");\r\n        return parseExprOp(exprNode, minPrec, noIn);\r\n      }\r\n    }\r\n    return left;\r\n  }\r\n\r\n  // Parse unary operators, both prefix and postfix.\r\n\r\n  function parseMaybeUnary() {\r\n    if (tokType.prefix) {\r\n      var node = startNode(), update = tokType.isUpdate;\r\n      node.operator = tokVal;\r\n      node.prefix = true;\r\n      tokRegexpAllowed = true;\r\n      next();\r\n      node.argument = parseMaybeUnary();\r\n      if (update) checkLVal(node.argument);\r\n      else if (strict && node.operator === \"delete\" &&\r\n               node.argument.type === \"Identifier\")\r\n        raise(node.start, \"Deleting local variable in strict mode\");\r\n      return finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\r\n    }\r\n    var expr = parseExprSubscripts();\r\n    while (tokType.postfix && !canInsertSemicolon()) {\r\n      var node = startNodeFrom(expr);\r\n      node.operator = tokVal;\r\n      node.prefix = false;\r\n      node.argument = expr;\r\n      checkLVal(expr);\r\n      next();\r\n      expr = finishNode(node, \"UpdateExpression\");\r\n    }\r\n    return expr;\r\n  }\r\n\r\n  // Parse call, dot, and `[]`-subscript expressions.\r\n\r\n  function parseExprSubscripts() {\r\n    return parseSubscripts(parseExprAtom());\r\n  }\r\n\r\n  function parseSubscripts(base, noCalls) {\r\n    if (eat(_dot)) {\r\n      var node = startNodeFrom(base);\r\n      node.object = base;\r\n      node.property = parseIdent(true);\r\n      node.computed = false;\r\n      return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\r\n    } else if (eat(_bracketL)) {\r\n      var node = startNodeFrom(base);\r\n      node.object = base;\r\n      node.property = parseExpression();\r\n      node.computed = true;\r\n      expect(_bracketR);\r\n      return parseSubscripts(finishNode(node, \"MemberExpression\"), noCalls);\r\n    } else if (!noCalls && eat(_parenL)) {\r\n      var node = startNodeFrom(base);\r\n      node.callee = base;\r\n      node.arguments = parseExprList(_parenR, false);\r\n      return parseSubscripts(finishNode(node, \"CallExpression\"), noCalls);\r\n    } else return base;\r\n  }\r\n\r\n  // Parse an atomic expression â€” either a single token that is an\r\n  // expression, an expression started by a keyword like `function` or\r\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\r\n  // or `{}`.\r\n\r\n  function parseExprAtom() {\r\n    switch (tokType) {\r\n    case _this:\r\n      var node = startNode();\r\n      next();\r\n      return finishNode(node, \"ThisExpression\");\r\n    case _name:\r\n      return parseIdent();\r\n    case _num: case _string: case _regexp: case _xjsText:\r\n      var node = startNode();\r\n      node.value = tokVal;\r\n      node.raw = input.slice(tokStart, tokEnd);\r\n      next();\r\n      return finishNode(node, \"Literal\");\r\n\r\n    case _null: case _true: case _false:\r\n      var node = startNode();\r\n      node.value = tokType.atomValue;\r\n      node.raw = tokType.keyword;\r\n      next();\r\n      return finishNode(node, \"Literal\");\r\n\r\n    case _parenL:\r\n      var tokStartLoc1 = tokStartLoc, tokStart1 = tokStart;\r\n      next();\r\n      var val = parseExpression();\r\n      val.start = tokStart1;\r\n      val.end = tokEnd;\r\n      if (options.locations) {\r\n        val.loc.start = tokStartLoc1;\r\n        val.loc.end = tokEndLoc;\r\n      }\r\n      if (options.ranges)\r\n        val.range = [tokStart1, tokEnd];\r\n      expect(_parenR);\r\n      return val;\r\n\r\n    case _bracketL:\r\n      var node = startNode();\r\n      next();\r\n      node.elements = parseExprList(_bracketR, true, true);\r\n      return finishNode(node, \"ArrayExpression\");\r\n\r\n    case _braceL:\r\n      return parseObj();\r\n\r\n    case _function:\r\n      var node = startNode();\r\n      next();\r\n      return parseFunction(node, false);\r\n\r\n    case _new:\r\n      return parseNew();\r\n\r\n    case _relational:\r\n      if (tokVal === '<') {\r\n        return parseXJSElement();\r\n      }\r\n\r\n    default:\r\n      unexpected();\r\n    }\r\n  }\r\n\r\n  // New's precedence is slightly tricky. It must allow its argument\r\n  // to be a `[]` or dot subscript expression, but not a call â€” at\r\n  // least, not without wrapping it in parentheses. Thus, it uses the\r\n\r\n  function parseNew() {\r\n    var node = startNode();\r\n    next();\r\n    node.callee = parseSubscripts(parseExprAtom(), true);\r\n    if (eat(_parenL)) node.arguments = parseExprList(_parenR, false);\r\n    else node.arguments = empty;\r\n    return finishNode(node, \"NewExpression\");\r\n  }\r\n\r\n  // Parse an object literal.\r\n\r\n  function parseObj() {\r\n    var node = startNode(), first = true, sawGetSet = false;\r\n    node.properties = [];\r\n    next();\r\n    while (!eat(_braceR)) {\r\n      if (!first) {\r\n        expect(_comma);\r\n        if (options.allowTrailingCommas && eat(_braceR)) break;\r\n      } else first = false;\r\n\r\n      var prop = {key: parsePropertyName()}, isGetSet = false, kind;\r\n      if (eat(_colon)) {\r\n        prop.value = parseExpression(true);\r\n        kind = prop.kind = \"init\";\r\n      } else if (options.ecmaVersion >= 5 && prop.key.type === \"Identifier\" &&\r\n                 (prop.key.name === \"get\" || prop.key.name === \"set\")) {\r\n        isGetSet = sawGetSet = true;\r\n        kind = prop.kind = prop.key.name;\r\n        prop.key = parsePropertyName();\r\n        if (tokType !== _parenL) unexpected();\r\n        prop.value = parseFunction(startNode(), false);\r\n      } else unexpected();\r\n\r\n      // getters and setters are not allowed to clash â€” either with\r\n      // each other or with an init property â€” and in strict mode,\r\n      // init properties are also not allowed to be repeated.\r\n\r\n      if (prop.key.type === \"Identifier\" && (strict || sawGetSet)) {\r\n        for (var i = 0; i < node.properties.length; ++i) {\r\n          var other = node.properties[i];\r\n          if (other.key.name === prop.key.name) {\r\n            var conflict = kind == other.kind || isGetSet && other.kind === \"init\" ||\r\n              kind === \"init\" && (other.kind === \"get\" || other.kind === \"set\");\r\n            if (conflict && !strict && kind === \"init\" && other.kind === \"init\") conflict = false;\r\n            if (conflict) raise(prop.key.start, \"Redefinition of property\");\r\n          }\r\n        }\r\n      }\r\n      node.properties.push(prop);\r\n    }\r\n    return finishNode(node, \"ObjectExpression\");\r\n  }\r\n\r\n  function parsePropertyName() {\r\n    if (tokType === _num || tokType === _string) return parseExprAtom();\r\n    return parseIdent(true);\r\n  }\r\n\r\n  // Parse a function declaration or literal (depending on the\r\n  // `isStatement` parameter).\r\n\r\n  function parseFunction(node, isStatement) {\r\n    if (tokType === _name) node.id = parseIdent();\r\n    else if (isStatement) unexpected();\r\n    else node.id = null;\r\n    node.params = [];\r\n    node.rest = null;\r\n    expect(_parenL);\r\n    for (;;) {\r\n      if (eat(_parenR)) {\r\n        break;\r\n      } else if (options.ecmaVersion >= 6 && eat(_ellipsis)) {\r\n        node.rest = parseIdent();\r\n        expect(_parenR);\r\n        break;\r\n      } else {\r\n        node.params.push(parseIdent());\r\n        if (!eat(_comma)) {\r\n          expect(_parenR);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Start a new scope with regard to labels and the `inFunction`\r\n    // flag (restore them to their old value afterwards).\r\n    var oldInFunc = inFunction, oldLabels = labels;\r\n    inFunction = true; labels = [];\r\n    node.body = parseBlock(true);\r\n    inFunction = oldInFunc; labels = oldLabels;\r\n\r\n    // If this is a strict mode function, verify that argument names\r\n    // are not repeated, and it does not try to bind the words `eval`\r\n    // or `arguments`.\r\n    if (strict || node.body.body.length && isUseStrict(node.body.body[0])) {\r\n      // Negative indices are used to reuse loop body for node.rest and node.id\r\n      for (var i = -2, id; i < node.params.length; ++i) {\r\n        if (i >= 0) {\r\n          id = node.params[i];\r\n        } else if (i == -2) {\r\n          if (node.rest) id = node.rest;\r\n          else continue;\r\n        } else {\r\n          if (node.id) id = node.id;\r\n          else continue;\r\n        }\r\n        if (isStrictReservedWord(id.name) || isStrictBadIdWord(id.name))\r\n          raise(id.start, \"Defining '\" + id.name + \"' in strict mode\");\r\n        if (i >= 0) for (var j = 0; j < i; ++j) if (id.name === node.params[j].name)\r\n          raise(id.start, \"Argument name clash in strict mode\");\r\n      }\r\n    }\r\n\r\n    return finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\r\n  }\r\n\r\n  // Parses a comma-separated list of expressions, and returns them as\r\n  // an array. `close` is the token type that ends the list, and\r\n  // `allowEmpty` can be turned on to allow subsequent commas with\r\n  // nothing in between them to be parsed as `null` (which is needed\r\n  // for array literals).\r\n\r\n  function parseExprList(close, allowTrailingComma, allowEmpty) {\r\n    var elts = [], first = true;\r\n    while (!eat(close)) {\r\n      if (!first) {\r\n        expect(_comma);\r\n        if (allowTrailingComma && options.allowTrailingCommas && eat(close)) break;\r\n      } else first = false;\r\n\r\n      if (allowEmpty && tokType === _comma) elts.push(null);\r\n      else elts.push(parseExpression(true));\r\n    }\r\n    return elts;\r\n  }\r\n\r\n  // Parse the next token as an identifier. If `liberal` is true (used\r\n  // when parsing properties), it will also convert keywords into\r\n  // identifiers.\r\n\r\n  function parseIdent(liberal) {\r\n    var node = startNode();\r\n    if (liberal && options.forbidReserved == \"everywhere\") liberal = false;\r\n    if (tokType === _name) {\r\n      if (!liberal &&\r\n          (options.forbidReserved &&\r\n           (options.ecmaVersion === 3 ? isReservedWord3 : isReservedWord5)(tokVal) ||\r\n           strict && isStrictReservedWord(tokVal)) &&\r\n          input.slice(tokStart, tokEnd).indexOf(\"\\\\\") == -1)\r\n        raise(tokStart, \"The keyword '\" + tokVal + \"' is reserved\");\r\n      node.name = tokVal;\r\n    } else if (liberal && tokType.keyword) {\r\n      node.name = tokType.keyword;\r\n    } else {\r\n      unexpected();\r\n    }\r\n    tokRegexpAllowed = false;\r\n    next();\r\n    return finishNode(node, \"Identifier\");\r\n  }\r\n\r\n  // Transforms JSX element name to string.\r\n\r\n  function getQualifiedXJSName(object) {\r\n    if (object.type === \"XJSIdentifier\") {\r\n      return object.name;\r\n    }\r\n    if (object.type === \"XJSNamespacedName\") {\r\n      return object.namespace.name + ':' + object.name.name;\r\n    }\r\n    if (object.type === \"XJSMemberExpression\") {\r\n      return (\r\n        getQualifiedXJSName(object.object) + '.' +\r\n        getQualifiedXJSName(object.property)\r\n      );\r\n    }\r\n  }\r\n\r\n  // Parse next token as JSX identifier\r\n\r\n  function parseXJSIdentifier() {\r\n    var node = startNode();\r\n    if (tokType === _xjsName) {\r\n      node.name = tokVal;\r\n    } else if (tokType.keyword) {\r\n      node.name = tokType.keyword;\r\n    } else {\r\n      unexpected();\r\n    }\r\n    tokRegexpAllowed = false;\r\n    next();\r\n    return finishNode(node, \"XJSIdentifier\");\r\n  }\r\n\r\n  // Parse namespaced identifier.\r\n\r\n  function parseXJSNamespacedName() {\r\n    var node = startNode();\r\n\r\n    node.namespace = parseXJSIdentifier();\r\n    expect(_colon);\r\n    node.name = parseXJSIdentifier();\r\n\r\n    return finishNode(node, \"XJSNamespacedName\");\r\n  }\r\n\r\n  // Parse JSX object.\r\n\r\n  function parseXJSMemberExpression() {\r\n    var node = parseXJSIdentifier();\r\n\r\n    while (eat(_dot)) {\r\n      var newNode = startNodeFrom(node);\r\n      newNode.object = node;\r\n      newNode.property = parseXJSIdentifier();\r\n      node = finishNode(newNode, \"XJSMemberExpression\");\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  // Parses element name in any form - namespaced, object\r\n  // or single identifier.\r\n\r\n  function parseXJSElementName() {\r\n    switch (nextChar()) {\r\n      case ':':\r\n        return parseXJSNamespacedName();\r\n\r\n      case '.':\r\n        return parseXJSMemberExpression();\r\n\r\n      default:\r\n        return parseXJSIdentifier();\r\n    }\r\n  }\r\n\r\n  // Parses attribute name as optionally namespaced identifier.\r\n\r\n  function parseXJSAttributeName() {\r\n    if (nextChar() === ':') {\r\n      return parseXJSNamespacedName();\r\n    }\r\n\r\n    return parseXJSIdentifier();\r\n  }\r\n\r\n  // Parses any type of JSX attribute value.\r\n\r\n  function parseXJSAttributeValue() {\r\n    var node;\r\n    if (tokType === _braceL) {\r\n      node = parseXJSExpressionContainer();\r\n      if (node.expression.type === \"XJSEmptyExpression\") {\r\n        raise(\r\n          node.start,\r\n            'XJS attributes must only be assigned a non-empty ' +\r\n            'expression'\r\n        );\r\n      }\r\n    } else if (tokVal === '<') {\r\n      node = parseXJSElement();\r\n    } else if (tokType === _xjsText) {\r\n      node = parseExprAtom();\r\n    } else {\r\n      raise(tokStart, \"XJS value should be either an expression or a quoted XJS text\");\r\n    }\r\n    return node;\r\n  }\r\n\r\n  // XJSEmptyExpression is unique type since it doesn't actually parse anything,\r\n  // and so it should start at the end of last read token (left brace) and finish\r\n  // at the beginning of the next one (right brace).\r\n\r\n  function parseXJSEmptyExpression() {\r\n    if (tokType !== _braceR) {\r\n      unexpected();\r\n    }\r\n\r\n    var tmp;\r\n\r\n    tmp = tokStart;\r\n    tokStart = lastEnd;\r\n    lastEnd = tmp;\r\n\r\n    tmp = tokStartLoc;\r\n    tokStartLoc = lastEndLoc;\r\n    lastEndLoc = tmp;\r\n\r\n    return finishNode(startNode(), \"XJSEmptyExpression\");\r\n  }\r\n\r\n  // Parses JSX expression enclosed into curly brackets.\r\n\r\n  function parseXJSExpressionContainer() {\r\n    var node = startNode();\r\n\r\n    var origInXJSTag = inXJSTag;\r\n    inXJSTag = false;\r\n\r\n    expect(_braceL);\r\n\r\n    node.expression = tokType === _braceR ? parseXJSEmptyExpression() : parseExpression();\r\n\r\n    inXJSTag = origInXJSTag;\r\n\r\n    expect(_braceR);\r\n\r\n    return finishNode(node, \"XJSExpressionContainer\");\r\n  }\r\n\r\n  // Parses following JSX attribute name-value pair.\r\n\r\n  function parseXJSAttribute() {\r\n    var node = startNode();\r\n\r\n    node.name = parseXJSAttributeName();\r\n\r\n    // HTML empty attribute\r\n    if (tokVal === \"=\") {\r\n      next();\r\n      node.value = parseXJSAttributeValue();\r\n    }\r\n\r\n    return finishNode(node, \"XJSAttribute\");\r\n  }\r\n\r\n  // Parses any type of JSX contents (expression, text or another tag).\r\n\r\n  function parseXJSChild() {\r\n    switch (tokType) {\r\n      case _braceL:\r\n        return parseXJSExpressionContainer();\r\n\r\n      case _xjsText:\r\n        return parseExprAtom();\r\n\r\n      default:\r\n        return parseXJSElement();\r\n    }\r\n  }\r\n\r\n  // Parses JSX open tag.\r\n\r\n  function parseXJSOpeningElement() {\r\n    var node = startNode(), attributes = node.attributes = [];\r\n\r\n    var origInXJSChild = inXJSChild;\r\n    var origInXJSTag = inXJSTag;\r\n    inXJSChild = false;\r\n    inXJSTag = true;\r\n\r\n    expectChar('<');\r\n\r\n    node.name = parseXJSElementName();\r\n\r\n    while (tokType !== _eof && tokType !== _slash && tokVal !== '>') {\r\n      attributes.push(parseXJSAttribute());\r\n    }\r\n\r\n    inXJSTag = false;\r\n\r\n    if (node.selfClosing = !!eat(_slash)) {\r\n      inXJSTag = origInXJSTag;\r\n      inXJSChild = origInXJSChild;\r\n    } else {\r\n      inXJSChild = true;\r\n    }\r\n\r\n    expectChar('>');\r\n\r\n    return finishNode(node, \"XJSOpeningElement\");\r\n  }\r\n\r\n  // Parses JSX closing tag.\r\n\r\n  function parseXJSClosingElement() {\r\n    var node = startNode();\r\n    var origInXJSChild = inXJSChild;\r\n    var origInXJSTag = inXJSTag;\r\n    inXJSChild = false;\r\n    inXJSTag = true;\r\n    tokRegexpAllowed = false;\r\n    expectChar('<');\r\n    expect(_slash);\r\n    node.name = parseXJSElementName();\r\n    skipSpace();\r\n    // A valid token is expected after >, so parser needs to know\r\n    // whether to look for a standard JS token or an XJS text node\r\n    inXJSChild = origInXJSChild;\r\n    inXJSTag = origInXJSTag;\r\n    tokRegexpAllowed = false;\r\n    expectChar('>');\r\n    return finishNode(node, \"XJSClosingElement\");\r\n  }\r\n\r\n  // Parses entire JSX element, including it's opening tag,\r\n  // attributes, contents and closing tag.\r\n\r\n  function parseXJSElement() {\r\n    var node = startNode();\r\n    var children = [];\r\n\r\n    var origInXJSChild = inXJSChild;\r\n    var openingElement = parseXJSOpeningElement();\r\n\r\n    if (!openingElement.selfClosing) {\r\n      while (tokType !== _eof && !(tokVal === '<' && nextChar() === '/')) {\r\n        inXJSChild = true;\r\n        children.push(parseXJSChild());\r\n      }\r\n      inXJSChild = origInXJSChild;\r\n      var closingElement = parseXJSClosingElement();\r\n      if (getQualifiedXJSName(closingElement.name) !== getQualifiedXJSName(openingElement.name)) {\r\n        raise(\r\n          closingElement.start,\r\n          \"Expected corresponding XJS closing tag for '\" + getQualifiedXJSName(openingElement.name) + \"'\"\r\n        );\r\n      }\r\n    }\r\n\r\n    // When (erroneously) writing two adjacent tags like\r\n    //\r\n    //     var x = <div>one</div><div>two</div>;\r\n    //\r\n    // the default error message is a bit incomprehensible. Since it's\r\n    // rarely (never?) useful to write a less-than sign after an XJS\r\n    // element, we disallow it here in the parser in order to provide a\r\n    // better error message. (In the rare case that the less-than operator\r\n    // was intended, the left tag can be wrapped in parentheses.)\r\n    if (!origInXJSChild && tokVal === '<') {\r\n      raise(tokStart, \"Adjacent XJS elements must be wrapped in an enclosing tag\");\r\n    }\r\n\r\n    node.openingElement = openingElement;\r\n    node.closingElement = closingElement;\r\n    node.children = children;\r\n    return finishNode(node, \"XJSElement\");\r\n  }\r\n\r\n});\r\n"},"lineCount":2497}},"error":null,"hash":"d5362b7fd9ede53da9618224c1998991","cacheData":{"env":{}}}